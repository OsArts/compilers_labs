
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xda\xa2\x9c\x10\xe5\x88\xb7-\xe1P\x18\xb3\xff\x08\xbd\xc8'
    
_lr_action_items = {'RETURN':([55,57,58,63,64,65,66,126,130,131,133,158,159,172,176,],[-2,60,-23,-30,-29,-24,-28,-40,-27,-25,-26,-38,-36,-37,-39,]),'LESS':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,112,-49,-71,112,-72,112,112,112,112,-70,None,None,-67,None,-54,-66,-69,-68,112,None,112,112,112,-74,-53,-73,112,112,-55,112,112,]),'ASSIGNMENT':([68,152,],[99,160,]),'VOID':([17,],[20,]),'RIGHT_BRACE':([11,18,21,22,27,30,36,58,59,62,63,64,65,66,72,97,106,116,126,130,131,133,141,158,159,172,176,],[16,-2,26,-10,-11,-12,-13,-23,-2,-2,-30,-29,-24,-28,106,126,-6,141,-40,-27,-25,-26,-17,-38,-36,-37,-39,]),'RIGHT_BRACKET':([33,43,73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,95,107,111,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,171,],[41,50,-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,-49,-71,-72,152,-70,-65,-62,-67,-63,-54,-66,-69,-68,-61,-64,-60,157,162,-74,-53,-73,-55,]),'WHILE':([55,57,58,59,62,63,64,65,66,72,97,126,130,131,133,150,151,158,159,167,172,176,],[-2,61,-23,-2,-2,-30,-29,-24,-28,61,61,-40,-27,-25,-26,61,61,-38,-36,61,-37,-39,]),'STATIC':([12,],[17,]),'LEFT_BRACE':([6,10,13,15,19,52,55,56,57,58,59,62,63,64,65,66,72,97,126,130,131,133,150,151,158,159,167,172,176,],[9,-2,18,-8,-9,55,-2,59,62,-23,-2,-2,-30,-29,-24,-28,62,62,-40,-27,-25,-26,62,62,-38,-36,62,-37,-39,]),'PRINTLN':([153,],[161,]),'NEW':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'NULL':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'TRUE':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'MINUS':([60,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,107,110,111,112,113,114,115,118,119,120,121,122,123,124,125,127,128,129,134,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,156,157,160,162,164,168,169,170,171,173,174,],[79,-46,-48,-76,-47,-80,-77,79,-45,-41,-75,79,-51,-52,-42,-43,-78,-44,-50,-79,79,114,-49,79,79,79,79,-71,114,-72,79,79,79,79,79,79,79,79,79,79,79,114,114,114,114,79,-70,114,114,-67,114,-54,-66,-69,-68,114,114,114,114,114,-74,79,-53,79,-73,114,114,79,79,-55,114,114,]),'DIVIDE':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,119,-49,-71,119,-72,119,119,119,119,-70,119,119,119,119,-54,119,-69,-68,119,119,119,119,119,-74,-53,-73,119,119,-55,119,119,]),'NOT_EQUAL':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,115,-49,-71,115,-72,115,115,115,115,-70,None,None,-67,None,-54,-66,-69,-68,115,None,115,115,115,-74,-53,-73,115,115,-55,115,115,]),'SEMICOLON':([25,34,35,37,39,44,73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,101,102,103,105,107,111,128,136,137,138,139,140,142,143,144,145,146,147,148,155,157,162,168,171,175,],[36,-31,-14,-15,-16,-32,-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,116,-49,-33,130,131,133,-71,-72,-34,-70,-65,-62,-67,-63,-54,-66,-69,-68,-61,-64,-60,-74,-53,-73,-35,-55,176,]),'POINT':([70,73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,132,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[104,-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,117,-49,117,117,117,117,117,117,117,153,-70,117,117,117,117,-54,117,117,117,117,117,117,117,117,-74,-53,-73,117,117,-55,117,117,]),'COMMA':([34,35,37,39,44,45,47,48,54,73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,95,107,111,136,137,138,139,140,142,143,144,145,146,147,148,155,156,157,162,163,164,165,166,171,174,],[-31,-14,-15,-16,-32,-22,-20,51,-21,-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,-49,-71,-72,-70,-65,-62,-67,-63,-54,-66,-69,-68,-61,-64,-60,-74,-2,-53,-73,-56,-58,170,-57,-55,-59,]),'PLUS':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,118,-49,-71,118,-72,118,118,118,118,-70,118,118,-67,118,-54,-66,-69,-68,118,118,118,118,118,-74,-53,-73,118,118,-55,118,118,]),'IDENTIFIER':([3,7,14,18,21,22,24,27,28,29,30,31,36,41,42,50,51,55,57,58,59,60,62,63,64,65,66,68,69,71,72,79,81,84,93,96,97,98,99,100,112,113,114,115,117,118,119,120,121,122,123,124,126,130,131,133,134,141,150,151,156,158,159,160,167,169,170,172,176,],[6,10,19,-2,31,-10,34,-11,37,31,-12,39,-13,44,31,53,31,-2,68,-23,-2,83,-2,-30,-29,-24,-28,101,34,105,68,83,109,83,83,83,68,83,83,83,83,83,83,83,142,83,83,83,83,83,83,83,-40,-27,-25,-26,83,-17,68,68,83,-38,-36,83,68,83,83,-37,-39,]),'CLASS':([0,1,4,5,8,16,26,],[3,-2,7,-3,-4,-5,-7,]),'LEFT_PARENTHESIS':([23,34,35,37,38,39,44,60,61,67,79,84,93,96,98,99,100,109,112,113,114,115,118,119,120,121,122,123,124,134,142,156,160,161,169,170,],[32,-31,-14,-15,42,-16,-32,84,96,98,84,84,84,84,84,84,84,135,84,84,84,84,84,84,84,84,84,84,84,84,156,84,84,169,84,84,]),'$end':([1,2,4,5,8,16,26,],[-2,0,-1,-3,-4,-5,-7,]),'STRING':([32,],[40,]),'EQUAL':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,113,-49,-71,113,-72,113,113,113,113,-70,None,None,-67,None,-54,-66,-69,-68,113,None,113,113,113,-74,-53,-73,113,113,-55,113,113,]),'ELSE':([63,64,66,126,130,131,133,158,159,172,176,],[-30,-29,-28,-40,-27,-25,-26,-38,167,-37,-39,]),'EXTENDS':([10,],[14,]),'RIGHT_PARENTHESIS':([34,35,37,39,42,44,45,46,47,48,49,53,54,73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,95,107,110,111,125,127,135,136,137,138,139,140,142,143,144,145,146,147,148,155,156,157,162,163,164,165,166,171,173,174,],[-31,-14,-15,-16,-2,-32,-22,-18,-20,-19,52,56,-21,-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,-49,-71,136,-72,150,151,155,-70,-65,-62,-67,-63,-54,-66,-69,-68,-61,-64,-60,-74,-2,-53,-73,-56,-58,171,-57,-55,175,-59,]),'TIMES':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,120,-49,-71,120,-72,120,120,120,120,-70,120,120,120,120,-54,120,-69,-68,120,120,120,120,120,-74,-53,-73,120,120,-55,120,120,]),'INTEGER_LITERAL':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'IF':([55,57,58,59,62,63,64,65,66,72,97,126,130,131,133,150,151,158,159,167,172,176,],[-2,67,-23,-2,-2,-30,-29,-24,-28,67,67,-40,-27,-25,-26,67,67,-38,-36,67,-37,-39,]),'AND':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,121,-49,-71,121,-72,121,121,121,121,-70,-65,-62,-67,-63,-54,-66,-69,-68,-61,-64,-60,121,121,-74,-53,-73,121,121,-55,121,121,]),'FALSE':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'GREATER':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,122,-49,-71,122,-72,122,122,122,122,-70,None,None,-67,None,-54,-66,-69,-68,122,None,122,122,122,-74,-53,-73,122,122,-55,122,122,]),'INT':([18,21,22,27,29,30,36,42,51,55,57,58,59,62,63,64,65,66,72,81,97,126,130,131,133,141,150,151,158,159,167,172,176,],[-2,24,-10,-11,24,-12,-13,24,24,-2,69,-23,-2,-2,-30,-29,-24,-28,69,108,69,-40,-27,-25,-26,-17,69,69,-38,-36,69,-37,-39,]),'OUT':([104,],[132,]),'SYSTEM':([55,57,58,59,62,63,64,65,66,72,97,126,130,131,133,150,151,158,159,167,172,176,],[-2,70,-23,-2,-2,-30,-29,-24,-28,70,70,-40,-27,-25,-26,70,70,-38,-36,70,-37,-39,]),'OR':([73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,123,-49,-71,123,-72,123,123,123,123,-70,-65,-62,-67,-63,-54,-66,-69,-68,-61,-64,-60,123,123,-74,-53,-73,123,123,-55,123,123,]),'THIS':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'BOOLEAN':([18,21,22,27,29,30,36,42,51,55,57,58,59,62,63,64,65,66,72,97,126,130,131,133,141,150,151,158,159,167,172,176,],[-2,28,-10,-11,28,-12,-13,28,28,-2,71,-23,-2,-2,-30,-29,-24,-28,71,71,-40,-27,-25,-26,-17,71,71,-38,-36,71,-37,-39,]),'NOT':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'LEFT_BRACKET':([24,40,68,69,73,74,75,76,77,78,80,82,83,85,86,87,88,89,90,91,92,94,95,107,108,110,111,125,127,128,129,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,157,162,164,168,171,173,174,],[33,43,100,33,-46,-48,-76,-47,-80,-77,-45,-41,-75,-51,-52,-42,-43,-78,-44,-50,-79,124,-49,-71,134,124,-72,124,124,124,124,-70,-65,-62,-67,-63,-54,-66,-69,-68,-61,-64,-60,124,124,-74,-53,-73,124,124,-55,124,124,]),'MAIN':([20,],[23,]),'PUBLIC':([9,18,21,22,27,30,36,141,],[12,-2,29,-10,-11,-12,-13,-17,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parenthesis_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'unary_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'identifier_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'integer_literal_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'arg':([42,51,],[47,54,]),'print_statement':([57,72,97,150,151,167,],[63,63,63,63,63,63,]),'new_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'identifier_or_brackets':([24,69,],[35,103,]),'class_list':([1,],[4,]),'single_or_array_var':([21,29,42,51,],[25,38,45,45,]),'array_element_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'field':([21,],[27,]),'while_statement':([57,72,97,150,151,167,],[64,64,64,64,64,64,]),'extends':([10,],[13,]),'statement':([57,72,97,150,151,167,],[65,65,65,158,159,172,]),'main_class':([0,],[1,]),'if_statement':([57,72,97,150,151,167,],[66,66,66,66,66,66,]),'method':([21,],[30,]),'empty':([1,10,18,42,55,59,62,156,],[5,15,22,46,58,58,58,163,]),'this_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'null_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'field_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'args_list':([42,],[48,]),'statements_list':([55,59,62,],[57,72,97,]),'class':([4,],[8,]),'call_method_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'main_method':([9,],[11,]),'binary_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'boolean_expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'nonempty_expression_list':([156,],[166,]),'expression_list':([156,],[165,]),'declaration_list':([18,],[21,]),'programm':([0,],[2,]),'params_list':([42,],[49,]),'expression':([60,79,84,93,96,98,99,100,112,113,114,115,118,119,120,121,122,123,124,134,156,160,169,170,],[94,107,110,111,125,127,128,129,137,138,139,140,143,144,145,146,147,148,149,154,164,168,173,174,]),'identifier_or_assignment':([68,],[102,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programm","S'",1,None,None,None),
  ('programm -> main_class class_list','programm',2,'p_programm','syntaxer.py',12),
  ('empty -> <empty>','empty',0,'p_empty','syntaxer.py',18),
  ('class_list -> empty','class_list',1,'p_empty_class_list','syntaxer.py',23),
  ('class_list -> class_list class','class_list',2,'p_class_list','syntaxer.py',28),
  ('main_class -> CLASS IDENTIFIER LEFT_BRACE main_method RIGHT_BRACE','main_class',5,'p_main_class','syntaxer.py',36),
  ('main_method -> PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statements_list RIGHT_BRACE','main_method',13,'p_main_method','syntaxer.py',42),
  ('class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE','class',6,'p_class','syntaxer.py',48),
  ('extends -> empty','extends',1,'p_empty_extends','syntaxer.py',54),
  ('extends -> EXTENDS IDENTIFIER','extends',2,'p_extends','syntaxer.py',59),
  ('declaration_list -> empty','declaration_list',1,'p_empty_declaration_list','syntaxer.py',65),
  ('declaration_list -> declaration_list field','declaration_list',2,'p_declaration_list','syntaxer.py',70),
  ('declaration_list -> declaration_list method','declaration_list',2,'p_declaration_list','syntaxer.py',71),
  ('field -> single_or_array_var SEMICOLON','field',2,'p_field','syntaxer.py',79),
  ('single_or_array_var -> INT identifier_or_brackets','single_or_array_var',2,'p_single_or_array_var','syntaxer.py',85),
  ('single_or_array_var -> BOOLEAN IDENTIFIER','single_or_array_var',2,'p_single_or_array_var','syntaxer.py',86),
  ('single_or_array_var -> IDENTIFIER IDENTIFIER','single_or_array_var',2,'p_single_or_array_var_ref','syntaxer.py',92),
  ('method -> PUBLIC single_or_array_var LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE statements_list RETURN expression SEMICOLON RIGHT_BRACE','method',11,'p_method','syntaxer.py',98),
  ('params_list -> empty','params_list',1,'p_empty_params_list','syntaxer.py',109),
  ('params_list -> args_list','params_list',1,'p_params_list','syntaxer.py',115),
  ('args_list -> arg','args_list',1,'p_single_args_list','syntaxer.py',121),
  ('args_list -> args_list COMMA arg','args_list',3,'p_args_list','syntaxer.py',127),
  ('arg -> single_or_array_var','arg',1,'p_arg','syntaxer.py',134),
  ('statements_list -> empty','statements_list',1,'p_statements_list','syntaxer.py',142),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','syntaxer.py',143),
  ('statement -> INT identifier_or_brackets SEMICOLON','statement',3,'p_statement','syntaxer.py',148),
  ('statement -> BOOLEAN IDENTIFIER SEMICOLON','statement',3,'p_statement','syntaxer.py',149),
  ('statement -> IDENTIFIER identifier_or_assignment SEMICOLON','statement',3,'p_statement','syntaxer.py',150),
  ('statement -> if_statement','statement',1,'p_statement','syntaxer.py',151),
  ('statement -> while_statement','statement',1,'p_statement','syntaxer.py',152),
  ('statement -> print_statement','statement',1,'p_statement','syntaxer.py',153),
  ('identifier_or_brackets -> IDENTIFIER','identifier_or_brackets',1,'p_identifier_or_brackets','syntaxer.py',158),
  ('identifier_or_brackets -> LEFT_BRACKET RIGHT_BRACKET IDENTIFIER','identifier_or_brackets',3,'p_identifier_or_brackets','syntaxer.py',159),
  ('identifier_or_assignment -> IDENTIFIER','identifier_or_assignment',1,'p_identifier_or_assignment','syntaxer.py',164),
  ('identifier_or_assignment -> ASSIGNMENT expression','identifier_or_assignment',2,'p_identifier_or_assignment','syntaxer.py',165),
  ('identifier_or_assignment -> LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression','identifier_or_assignment',5,'p_identifier_or_assignment','syntaxer.py',166),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','if_statement',5,'p_if_statement','syntaxer.py',171),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement','if_statement',7,'p_if_else_statement','syntaxer.py',179),
  ('while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','while_statement',5,'p_while_statement','syntaxer.py',188),
  ('print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON','print_statement',9,'p_print_statement','syntaxer.py',196),
  ('statement -> LEFT_BRACE statements_list RIGHT_BRACE','statement',3,'p_block_statement','syntaxer.py',211),
  ('expression -> array_element_expression','expression',1,'p_expression','syntaxer.py',217),
  ('expression -> field_expression','expression',1,'p_expression','syntaxer.py',218),
  ('expression -> call_method_expression','expression',1,'p_expression','syntaxer.py',219),
  ('expression -> binary_expression','expression',1,'p_expression','syntaxer.py',220),
  ('expression -> parenthesis_expression','expression',1,'p_expression','syntaxer.py',221),
  ('expression -> unary_expression','expression',1,'p_expression','syntaxer.py',222),
  ('expression -> new_expression','expression',1,'p_expression','syntaxer.py',223),
  ('expression -> identifier_expression','expression',1,'p_expression','syntaxer.py',224),
  ('expression -> integer_literal_expression','expression',1,'p_expression','syntaxer.py',225),
  ('expression -> boolean_expression','expression',1,'p_expression','syntaxer.py',226),
  ('expression -> this_expression','expression',1,'p_expression','syntaxer.py',227),
  ('expression -> null_expression','expression',1,'p_expression','syntaxer.py',228),
  ('array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET','array_element_expression',4,'p_array_element_expression','syntaxer.py',234),
  ('field_expression -> expression POINT IDENTIFIER','field_expression',3,'p_field_expression','syntaxer.py',242),
  ('call_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_method_expression',6,'p_call_method_expression','syntaxer.py',250),
  ('expression_list -> empty','expression_list',1,'p_empty_expression_list','syntaxer.py',259),
  ('expression_list -> nonempty_expression_list','expression_list',1,'p_nonempty_expression_list','syntaxer.py',265),
  ('nonempty_expression_list -> expression','nonempty_expression_list',1,'p_single_expression_list','syntaxer.py',271),
  ('nonempty_expression_list -> expression_list COMMA expression','nonempty_expression_list',3,'p_expression_list_head','syntaxer.py',277),
  ('binary_expression -> expression OR expression','binary_expression',3,'p_binary_expression','syntaxer.py',284),
  ('binary_expression -> expression AND expression','binary_expression',3,'p_binary_expression','syntaxer.py',285),
  ('binary_expression -> expression EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',286),
  ('binary_expression -> expression NOT_EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',287),
  ('binary_expression -> expression GREATER expression','binary_expression',3,'p_binary_expression','syntaxer.py',288),
  ('binary_expression -> expression LESS expression','binary_expression',3,'p_binary_expression','syntaxer.py',289),
  ('binary_expression -> expression PLUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',290),
  ('binary_expression -> expression MINUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',291),
  ('binary_expression -> expression TIMES expression','binary_expression',3,'p_binary_expression','syntaxer.py',292),
  ('binary_expression -> expression DIVIDE expression','binary_expression',3,'p_binary_expression','syntaxer.py',293),
  ('parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','parenthesis_expression',3,'p_parenthesis_expression','syntaxer.py',302),
  ('unary_expression -> MINUS expression','unary_expression',2,'p_unary_expression','syntaxer.py',309),
  ('unary_expression -> NOT expression','unary_expression',2,'p_unary_expression','syntaxer.py',310),
  ('new_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET','new_expression',5,'p_new_expression','syntaxer.py',318),
  ('new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS','new_expression',4,'p_new_expression','syntaxer.py',319),
  ('identifier_expression -> IDENTIFIER','identifier_expression',1,'p_identifier_expression','syntaxer.py',326),
  ('integer_literal_expression -> INTEGER_LITERAL','integer_literal_expression',1,'p_integer_literal_expression','syntaxer.py',333),
  ('boolean_expression -> TRUE','boolean_expression',1,'p_boolean_expression','syntaxer.py',340),
  ('boolean_expression -> FALSE','boolean_expression',1,'p_boolean_expression','syntaxer.py',341),
  ('this_expression -> THIS','this_expression',1,'p_this_expression','syntaxer.py',348),
  ('null_expression -> NULL','null_expression',1,'p_null_expression','syntaxer.py',354),
]
