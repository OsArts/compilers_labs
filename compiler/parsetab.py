
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xeb\xeb\x063\xfbs\xa8eoFC\xd2~8wy'
    
_lr_action_items = {'RETURN':([57,59,60,61,69,76,78,79,80,82,96,99,106,126,129,159,161,163,165,175,179,],[-2,-2,-2,-19,-34,-35,-33,-2,-32,-23,111,-20,-24,-21,-31,-40,-22,-38,-36,-37,-39,]),'LESS':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,118,-50,-70,-71,118,118,118,-69,118,118,-67,None,None,-55,118,None,None,118,-65,-66,118,-68,118,118,-72,-54,-73,118,-56,118,]),'ASSIGNMENT':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,100,104,107,134,136,137,138,139,140,143,144,145,146,147,149,154,160,164,173,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,117,-50,125,-70,-71,-69,-60,-67,-62,-63,-55,-64,-61,-59,-65,-66,-68,-72,-54,-73,-56,]),'VOID':([18,],[28,]),'RIGHT_BRACE':([16,19,22,24,26,29,32,39,60,61,67,69,76,78,79,80,82,99,101,103,106,126,127,129,151,157,159,161,162,163,165,167,175,179,],[-2,-2,-2,34,-9,-10,-11,-12,-2,-19,-2,-34,-35,-33,-2,-32,-23,-20,-2,129,-24,-21,-2,-31,162,167,-40,-22,170,-38,-36,-13,-37,-39,]),'RIGHT_BRACKET':([30,33,35,51,64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,98,104,107,134,136,137,138,139,140,143,144,145,146,147,148,149,153,154,160,164,173,],[38,40,41,55,-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,-50,-70,-71,-69,-60,-67,-62,-63,-55,-64,-61,-59,-65,-66,160,-68,164,-72,-54,-73,-56,]),'WHILE':([57,59,60,61,67,69,76,78,79,80,99,101,126,127,129,152,155,159,161,163,165,171,175,179,],[-2,66,-2,-19,66,-34,-35,-33,66,-32,-20,-2,-21,66,-31,66,66,-40,-22,-38,-36,66,-37,-39,]),'STATIC':([15,],[18,]),'LEFT_BRACE':([8,9,12,14,17,54,57,59,60,61,63,67,69,76,78,79,80,99,101,126,127,129,152,155,159,161,163,165,171,175,179,],[11,-2,16,-7,-8,57,-2,67,-2,-19,101,67,-34,-35,-33,67,-32,-20,-2,-21,67,-31,67,67,-40,-22,-38,-36,67,-37,-39,]),'PRINTLN':([156,],[166,]),'NEW':([57,59,60,61,67,69,73,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,171,172,174,175,179,],[-2,75,-2,-19,75,-34,75,-35,-33,75,-32,75,75,-20,-2,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-21,75,-31,75,75,75,75,-40,-22,-38,-36,75,75,75,-37,-39,]),'NULL':([57,59,60,61,67,69,73,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,171,172,174,175,179,],[-2,71,-2,-19,71,-34,71,-35,-33,71,-32,71,71,-20,-2,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-21,71,-31,71,71,71,71,-40,-22,-38,-36,71,71,71,-37,-39,]),'TRUE':([57,59,60,61,67,69,73,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,171,172,174,175,179,],[-2,72,-2,-19,72,-34,72,-35,-33,72,-32,72,72,-20,-2,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-21,72,-31,72,72,72,72,-40,-22,-38,-36,72,72,72,-37,-39,]),'MINUS':([57,59,60,61,64,65,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,84,85,86,88,89,90,91,92,93,95,97,98,99,101,102,104,107,108,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,152,153,154,155,158,159,160,161,163,164,165,169,171,172,173,174,175,176,179,],[-2,73,-2,-19,-46,-49,73,-47,-34,-42,-79,-76,73,-45,-35,-41,-33,73,-32,-48,-52,-53,-75,73,-74,-77,-44,-51,-78,-43,73,122,-50,-20,-2,73,-70,-71,73,122,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-21,73,122,-31,73,122,-69,122,122,-67,122,122,-55,122,122,122,122,-65,-66,122,-68,122,73,122,-72,73,73,-40,-54,-22,-38,-73,-36,122,73,73,-56,73,-37,122,-39,]),'DIVIDE':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,124,-50,-70,-71,124,124,124,-69,124,124,-67,124,124,-55,124,124,124,124,124,124,124,-68,124,124,-72,-54,-73,124,-56,124,]),'NOT_EQUAL':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,114,-50,-70,-71,114,114,114,-69,114,114,-67,None,None,-55,114,None,None,114,-65,-66,114,-68,114,114,-72,-54,-73,114,-56,114,]),'SEMICOLON':([31,64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,98,100,104,107,134,135,136,137,138,139,140,142,143,144,145,146,147,149,150,154,160,164,173,178,],[39,-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,-50,126,-70,-71,-69,157,-60,-67,-62,-63,-55,159,-64,-61,-59,-65,-66,-68,161,-72,-54,-73,-56,179,]),'POINT':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,94,97,98,104,107,110,128,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,109,116,-50,116,116,116,116,116,156,-69,116,116,116,116,116,-55,116,116,116,116,116,116,116,116,116,116,-72,-54,-73,116,-56,116,]),'COMMA':([48,53,64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,98,104,107,134,136,137,138,139,140,143,144,145,146,147,149,154,160,164,169,173,],[52,-18,-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,-50,-70,-71,-69,-60,-67,-62,-63,-55,-64,-61,-59,-65,-66,-68,-72,-54,-73,174,-56,]),'PLUS':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,121,-50,-70,-71,121,121,121,-69,121,121,-67,121,121,-55,121,121,121,121,-65,-66,121,-68,121,121,-72,-54,-73,121,-56,121,]),'IDENTIFIER':([3,4,13,16,19,20,21,22,23,25,27,36,38,39,40,41,44,49,52,55,57,59,60,61,62,67,69,73,75,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,167,171,172,174,175,179,],[8,9,17,20,20,-27,31,20,-26,-25,20,42,-30,-12,-29,-28,20,53,20,58,20,88,20,-19,100,88,-34,88,20,-35,-33,88,-32,88,88,-20,20,88,88,88,88,88,88,88,141,88,88,88,88,88,88,88,88,88,-21,88,-31,88,88,88,88,-40,-22,-38,-36,-13,88,88,88,-37,-39,]),'ELSE':([69,76,78,80,129,159,163,165,175,179,],[-34,-35,-33,-32,-31,-40,-38,171,-37,-39,]),'CLASS':([0,1,6,34,170,],[3,4,4,-6,-5,]),'LEFT_PARENTHESIS':([20,23,25,37,38,40,41,42,57,59,60,61,66,67,69,73,76,78,79,80,86,87,95,99,101,102,105,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,141,152,155,158,159,161,163,165,166,171,172,174,175,179,],[-27,-26,-25,43,-30,-29,-28,44,-2,95,-2,-19,102,95,-34,95,-35,-33,95,-32,95,108,95,-20,-2,95,131,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-21,95,-31,95,158,95,95,95,-40,-22,-38,-36,172,95,95,95,-37,-39,]),'$end':([1,2,5,6,7,10,34,170,],[-2,0,-1,-2,-3,-4,-6,-5,]),'STRING':([43,],[45,]),'EQUAL':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,119,-50,-70,-71,119,119,119,-69,119,119,-67,None,None,-55,119,None,None,119,-65,-66,119,-68,119,119,-72,-54,-73,119,-56,119,]),'EXTENDS':([9,],[13,]),'RIGHT_PARENTHESIS':([44,46,47,48,50,53,56,58,64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,98,104,107,110,128,131,132,134,136,137,138,139,140,143,144,145,146,147,149,154,160,164,168,169,173,176,177,],[-2,-14,-15,-16,54,-18,-17,63,-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,-50,-70,-71,134,152,154,155,-69,-60,-67,-62,-63,-55,-64,-61,-59,-65,-66,-68,-72,-54,-73,173,-57,-56,178,-58,]),'TIMES':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,113,-50,-70,-71,113,113,113,-69,113,113,-67,113,113,-55,113,113,113,113,113,113,113,-68,113,113,-72,-54,-73,113,-56,113,]),'INTEGER_LITERAL':([57,59,60,61,67,69,73,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,171,172,174,175,179,],[-2,85,-2,-19,85,-34,85,-35,-33,85,-32,85,85,-20,-2,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-21,85,-31,85,85,85,85,-40,-22,-38,-36,85,85,85,-37,-39,]),'IF':([57,59,60,61,67,69,76,78,79,80,99,101,126,127,129,152,155,159,161,163,165,171,175,179,],[-2,87,-2,-19,87,-34,-35,-33,87,-32,-20,-2,-21,87,-31,87,87,-40,-22,-38,-36,87,-37,-39,]),'AND':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,112,-50,-70,-71,112,112,112,-69,112,-60,-67,-62,-63,-55,112,-64,-61,-59,-65,-66,112,-68,112,112,-72,-54,-73,112,-56,112,]),'FALSE':([57,59,60,61,67,69,73,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,171,172,174,175,179,],[-2,89,-2,-19,89,-34,89,-35,-33,89,-32,89,89,-20,-2,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-21,89,-31,89,89,89,89,-40,-22,-38,-36,89,89,89,-37,-39,]),'GREATER':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,115,-50,-70,-71,115,115,115,-69,115,115,-67,None,None,-55,115,None,None,115,-65,-66,115,-68,115,115,-72,-54,-73,115,-56,115,]),'INT':([16,19,22,27,39,44,52,57,60,75,101,126,161,167,],[23,23,23,23,-12,23,23,23,23,23,23,-21,-22,-13,]),'OUT':([109,],[133,]),'SYSTEM':([57,59,60,61,67,69,76,78,79,80,99,101,126,127,129,152,155,159,161,163,165,171,175,179,],[-2,94,-2,-19,94,-34,-35,-33,94,-32,-20,-2,-21,94,-31,94,94,-40,-22,-38,-36,94,-37,-39,]),'OR':([64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,120,-50,-70,-71,120,120,120,-69,120,-60,-67,-62,-63,-55,120,-64,-61,-59,-65,-66,120,-68,120,120,-72,-54,-73,120,-56,120,]),'THIS':([57,59,60,61,67,69,73,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,171,172,174,175,179,],[-2,92,-2,-19,92,-34,92,-35,-33,92,-32,92,92,-20,-2,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-21,92,-31,92,92,92,92,-40,-22,-38,-36,92,92,92,-37,-39,]),'LENGTH':([116,],[140,]),'BOOLEAN':([16,19,22,27,39,44,52,57,60,75,101,126,161,167,],[25,25,25,25,-12,25,25,25,25,25,25,-21,-22,-13,]),'NOT':([57,59,60,61,67,69,73,76,78,79,80,86,95,99,101,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,152,155,158,159,161,163,165,171,172,174,175,179,],[-2,86,-2,-19,86,-34,86,-35,-33,86,-32,86,86,-20,-2,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-21,86,-31,86,86,86,86,-40,-22,-38,-36,86,86,86,-37,-39,]),'LEFT_BRACKET':([20,23,25,38,40,41,45,64,65,68,70,71,72,74,77,81,83,84,85,88,89,90,91,92,93,97,98,104,105,107,110,128,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,153,154,160,164,169,173,176,],[30,33,35,-30,-29,-28,51,-46,-49,-47,-42,-79,-76,-45,-41,-48,-52,-53,-75,-74,-77,-44,-51,-78,-43,123,-50,-70,130,-71,123,123,123,-69,123,-60,-67,-62,-63,-55,123,-64,-61,-59,-65,-66,123,-68,123,123,-72,-54,-73,123,-56,123,]),'MAIN':([28,],[37,]),'PUBLIC':([11,16,19,22,39,167,],[15,27,27,27,-12,-13,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'length_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'unary_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'identifier_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'integer_literal_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'arg':([44,52,],[48,48,]),'print_statement':([59,67,79,127,152,155,171,],[69,69,69,69,69,69,69,]),'new_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'var_list':([57,60,101,],[59,99,127,]),'class_list':([1,6,],[5,10,]),'parenthesis_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'assignment_statement':([59,67,79,127,152,155,171,],[76,76,76,76,76,76,76,]),'array_element_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'field':([16,19,22,],[19,19,19,]),'while_statement':([59,67,79,127,152,155,171,],[78,78,78,78,78,78,78,]),'extends':([9,],[12,]),'statement':([59,67,79,127,152,155,171,],[79,79,79,79,163,165,175,]),'var':([57,60,101,],[60,60,60,]),'if_statement':([59,67,79,127,152,155,171,],[80,80,80,80,80,80,80,]),'type':([16,19,22,27,44,52,57,60,75,101,],[21,21,21,36,49,49,62,62,105,62,]),'method':([16,19,22,],[22,22,22,]),'empty':([1,6,9,16,19,22,44,57,59,60,67,79,101,127,],[7,7,14,26,26,26,46,61,82,61,82,82,61,82,]),'this_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'null_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'args_list':([44,52,],[47,56,]),'main_class':([0,],[1,]),'class':([1,6,],[6,6,]),'call_method_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'binary_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'boolean_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'expression_list':([158,174,],[168,177,]),'declaration_list':([16,19,22,],[24,29,32,]),'new_array_expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'statement_list':([59,67,79,127,],[96,103,106,151,]),'programm':([0,],[2,]),'params_list':([44,],[50,]),'expression':([59,67,73,79,86,95,102,108,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,130,152,155,158,171,172,174,],[97,97,104,97,107,110,128,132,135,136,137,138,139,142,143,144,145,146,147,148,149,150,97,153,97,97,169,97,176,169,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programm","S'",1,None,None,None),
  ('programm -> main_class class_list','programm',2,'p_programm','syntaxer.py',17),
  ('empty -> <empty>','empty',0,'p_empty','syntaxer.py',23),
  ('class_list -> empty','class_list',1,'p_empty_class_list','syntaxer.py',27),
  ('class_list -> class class_list','class_list',2,'p_class_list','syntaxer.py',33),
  ('main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE','main_class',18,'p_main_class','syntaxer.py',40),
  ('class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE','class',6,'p_class','syntaxer.py',53),
  ('extends -> empty','extends',1,'p_empty_extends','syntaxer.py',66),
  ('extends -> EXTENDS IDENTIFIER','extends',2,'p_extends','syntaxer.py',72),
  ('declaration_list -> empty','declaration_list',1,'p_empty_declaration_list','syntaxer.py',78),
  ('declaration_list -> field declaration_list','declaration_list',2,'p_declaration_list','syntaxer.py',84),
  ('declaration_list -> method declaration_list','declaration_list',2,'p_declaration_list','syntaxer.py',85),
  ('field -> type IDENTIFIER SEMICOLON','field',3,'p_field','syntaxer.py',92),
  ('method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE','method',13,'p_method','syntaxer.py',100),
  ('params_list -> empty','params_list',1,'p_empty_params_list','syntaxer.py',111),
  ('params_list -> args_list','params_list',1,'p_params_list','syntaxer.py',117),
  ('args_list -> arg','args_list',1,'p_single_args_list','syntaxer.py',123),
  ('args_list -> arg COMMA args_list','args_list',3,'p_args_list','syntaxer.py',129),
  ('arg -> type IDENTIFIER','arg',2,'p_arg','syntaxer.py',136),
  ('var_list -> empty','var_list',1,'p_empty_var_list','syntaxer.py',144),
  ('var_list -> var var_list','var_list',2,'p_var_list','syntaxer.py',150),
  ('var -> type IDENTIFIER SEMICOLON','var',3,'p_var','syntaxer.py',157),
  ('var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON','var',5,'p_var_with_value','syntaxer.py',165),
  ('statement_list -> empty','statement_list',1,'p_empty_statement_list','syntaxer.py',174),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','syntaxer.py',180),
  ('type -> BOOLEAN','type',1,'p_simple_type','syntaxer.py',187),
  ('type -> INT','type',1,'p_simple_type','syntaxer.py',188),
  ('type -> IDENTIFIER','type',1,'p_simple_type','syntaxer.py',189),
  ('type -> BOOLEAN LEFT_BRACKET RIGHT_BRACKET','type',3,'p_array_type','syntaxer.py',196),
  ('type -> INT LEFT_BRACKET RIGHT_BRACKET','type',3,'p_array_type','syntaxer.py',197),
  ('type -> IDENTIFIER LEFT_BRACKET RIGHT_BRACKET','type',3,'p_array_type','syntaxer.py',198),
  ('statement -> LEFT_BRACE statement_list RIGHT_BRACE','statement',3,'p_block_statement','syntaxer.py',205),
  ('statement -> if_statement','statement',1,'p_statement','syntaxer.py',211),
  ('statement -> while_statement','statement',1,'p_statement','syntaxer.py',212),
  ('statement -> print_statement','statement',1,'p_statement','syntaxer.py',213),
  ('statement -> assignment_statement','statement',1,'p_statement','syntaxer.py',214),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','if_statement',5,'p_if_statement','syntaxer.py',220),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement','if_statement',7,'p_if_else_statement','syntaxer.py',228),
  ('while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','while_statement',5,'p_while_statement','syntaxer.py',237),
  ('print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON','print_statement',9,'p_print_statement','syntaxer.py',245),
  ('assignment_statement -> expression ASSIGNMENT expression SEMICOLON','assignment_statement',4,'p_assignment_statement','syntaxer.py',252),
  ('expression -> array_element_expression','expression',1,'p_expression','syntaxer.py',260),
  ('expression -> length_expression','expression',1,'p_expression','syntaxer.py',261),
  ('expression -> call_method_expression','expression',1,'p_expression','syntaxer.py',262),
  ('expression -> binary_expression','expression',1,'p_expression','syntaxer.py',263),
  ('expression -> parenthesis_expression','expression',1,'p_expression','syntaxer.py',264),
  ('expression -> unary_expression','expression',1,'p_expression','syntaxer.py',265),
  ('expression -> new_expression','expression',1,'p_expression','syntaxer.py',266),
  ('expression -> new_array_expression','expression',1,'p_expression','syntaxer.py',267),
  ('expression -> identifier_expression','expression',1,'p_expression','syntaxer.py',268),
  ('expression -> integer_literal_expression','expression',1,'p_expression','syntaxer.py',269),
  ('expression -> boolean_expression','expression',1,'p_expression','syntaxer.py',270),
  ('expression -> this_expression','expression',1,'p_expression','syntaxer.py',271),
  ('expression -> null_expression','expression',1,'p_expression','syntaxer.py',272),
  ('array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET','array_element_expression',4,'p_array_element_expression','syntaxer.py',277),
  ('length_expression -> expression POINT LENGTH','length_expression',3,'p_lenght_expression','syntaxer.py',285),
  ('call_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_method_expression',6,'p_call_method_expression','syntaxer.py',292),
  ('expression_list -> expression','expression_list',1,'p_single_expression_list','syntaxer.py',301),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','syntaxer.py',307),
  ('binary_expression -> expression OR expression','binary_expression',3,'p_binary_expression','syntaxer.py',314),
  ('binary_expression -> expression AND expression','binary_expression',3,'p_binary_expression','syntaxer.py',315),
  ('binary_expression -> expression EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',316),
  ('binary_expression -> expression NOT_EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',317),
  ('binary_expression -> expression GREATER expression','binary_expression',3,'p_binary_expression','syntaxer.py',318),
  ('binary_expression -> expression LESS expression','binary_expression',3,'p_binary_expression','syntaxer.py',319),
  ('binary_expression -> expression PLUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',320),
  ('binary_expression -> expression MINUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',321),
  ('binary_expression -> expression TIMES expression','binary_expression',3,'p_binary_expression','syntaxer.py',322),
  ('binary_expression -> expression DIVIDE expression','binary_expression',3,'p_binary_expression','syntaxer.py',323),
  ('parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','parenthesis_expression',3,'p_parenthesis_expression','syntaxer.py',332),
  ('unary_expression -> MINUS expression','unary_expression',2,'p_unary_expression','syntaxer.py',339),
  ('unary_expression -> NOT expression','unary_expression',2,'p_unary_expression','syntaxer.py',340),
  ('new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS','new_expression',4,'p_new_expression','syntaxer.py',348),
  ('new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET','new_array_expression',5,'p_new_array_expression','syntaxer.py',355),
  ('identifier_expression -> IDENTIFIER','identifier_expression',1,'p_identifier_expression','syntaxer.py',363),
  ('integer_literal_expression -> INTEGER_LITERAL','integer_literal_expression',1,'p_integer_literal_expression','syntaxer.py',370),
  ('boolean_expression -> TRUE','boolean_expression',1,'p_boolean_expression','syntaxer.py',377),
  ('boolean_expression -> FALSE','boolean_expression',1,'p_boolean_expression','syntaxer.py',378),
  ('this_expression -> THIS','this_expression',1,'p_this_expression','syntaxer.py',385),
  ('null_expression -> NULL','null_expression',1,'p_null_expression','syntaxer.py',391),
]
