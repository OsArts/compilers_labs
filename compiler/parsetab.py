
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa0.\xa9\x17\x97\xb1\xc3\x10C\xd9\xd8\x8f\x9a\xfbPj'
    
_lr_action_items = {'RETURN':([55,57,58,64,123,127,128,130,155,156,165,166,171,175,],[-2,60,-23,-24,-38,-27,-25,-26,-36,-2,-34,-33,-35,-37,]),'LESS':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,109,-47,-69,109,-70,109,109,109,109,-68,None,None,-65,None,-52,-64,-67,-66,109,None,109,109,109,-72,-51,-71,109,109,-53,109,109,]),'ASSIGNMENT':([65,149,],[96,157,]),'VOID':([17,],[20,]),'RIGHT_BRACE':([11,18,21,22,27,30,36,58,59,62,64,69,94,103,113,123,127,128,130,138,155,156,165,166,171,175,],[16,-2,26,-10,-11,-12,-13,-23,-2,-2,-24,103,123,-6,138,-38,-27,-25,-26,-17,-36,-2,-34,-33,-35,-37,]),'RIGHT_BRACKET':([33,43,70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,92,104,108,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,170,],[41,50,-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,-47,-69,-70,149,-68,-63,-60,-65,-61,-52,-64,-67,-66,-59,-62,-58,154,159,-72,-51,-71,-53,]),'WHILE':([55,57,58,59,62,64,69,94,123,127,128,130,147,148,155,156,164,165,166,171,175,],[-2,61,-23,-2,-2,-24,61,61,-38,-27,-25,-26,61,61,-36,-2,61,-34,-33,-35,-37,]),'STATIC':([12,],[17,]),'LEFT_BRACE':([6,10,13,15,19,52,55,56,57,58,59,62,64,69,94,123,127,128,130,147,148,155,156,164,165,166,171,175,],[9,-2,18,-8,-9,55,-2,59,62,-23,-2,-2,-24,62,62,-38,-27,-25,-26,62,62,-36,-2,62,-34,-33,-35,-37,]),'PRINTLN':([150,],[158,]),'NEW':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'NULL':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TRUE':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'MINUS':([60,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,104,107,108,109,110,111,112,115,116,117,118,119,120,121,122,124,125,126,131,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,153,154,157,159,161,167,168,169,170,172,173,],[76,-44,-46,-74,-45,-78,-75,76,-43,-39,-73,76,-49,-50,-40,-41,-76,-42,-48,-77,76,111,-47,76,76,76,76,-69,111,-70,76,76,76,76,76,76,76,76,76,76,76,111,111,111,111,76,-68,111,111,-65,111,-52,-64,-67,-66,111,111,111,111,111,-72,76,-51,76,-71,111,111,76,76,-53,111,111,]),'DIVIDE':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,116,-47,-69,116,-70,116,116,116,116,-68,116,116,116,116,-52,116,-67,-66,116,116,116,116,116,-72,-51,-71,116,116,-53,116,116,]),'NOT_EQUAL':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,112,-47,-69,112,-70,112,112,112,112,-68,None,None,-65,None,-52,-64,-67,-66,112,None,112,112,112,-72,-51,-71,112,112,-53,112,112,]),'SEMICOLON':([25,34,35,37,39,44,70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,98,99,100,102,104,108,125,133,134,135,136,137,139,140,141,142,143,144,145,152,154,159,167,170,174,],[36,-28,-14,-15,-16,-29,-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,113,-47,-30,127,128,130,-69,-70,-31,-68,-63,-60,-65,-61,-52,-64,-67,-66,-59,-62,-58,-72,-51,-71,-32,-53,175,]),'POINT':([67,70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,129,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[101,-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,114,-47,114,114,114,114,114,114,114,150,-68,114,114,114,114,-52,114,114,114,114,114,114,114,114,-72,-51,-71,114,114,-53,114,114,]),'COMMA':([34,35,37,39,44,45,47,48,54,70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,92,104,108,133,134,135,136,137,139,140,141,142,143,144,145,152,153,154,159,160,161,162,163,170,173,],[-28,-14,-15,-16,-29,-22,-20,51,-21,-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,-47,-69,-70,-68,-63,-60,-65,-61,-52,-64,-67,-66,-59,-62,-58,-72,-2,-51,-71,-54,-56,169,-55,-53,-57,]),'PLUS':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,115,-47,-69,115,-70,115,115,115,115,-68,115,115,-65,115,-52,-64,-67,-66,115,115,115,115,115,-72,-51,-71,115,115,-53,115,115,]),'IDENTIFIER':([3,7,14,18,21,22,24,27,28,29,30,31,36,41,42,50,51,55,57,58,59,60,62,64,65,66,68,69,76,78,81,90,93,94,95,96,97,109,110,111,112,114,115,116,117,118,119,120,121,123,127,128,130,131,138,147,148,153,155,156,157,164,165,166,168,169,171,175,],[6,10,19,-2,31,-10,34,-11,37,31,-12,39,-13,44,31,53,31,-2,65,-23,-2,80,-2,-24,98,34,102,65,80,106,80,80,80,65,80,80,80,80,80,80,80,139,80,80,80,80,80,80,80,-38,-27,-25,-26,80,-17,65,65,80,-36,-2,80,65,-34,-33,80,80,-35,-37,]),'ELSE':([123,127,128,130,155,156,165,166,171,175,],[-38,-27,-25,-26,-36,164,-34,-33,-35,-37,]),'CLASS':([0,1,4,5,8,16,26,],[3,-2,7,-3,-4,-5,-7,]),'LEFT_PARENTHESIS':([23,34,35,37,38,39,44,60,61,63,76,81,90,93,95,96,97,106,109,110,111,112,115,116,117,118,119,120,121,131,139,153,157,158,168,169,],[32,-28,-14,-15,42,-16,-29,81,93,95,81,81,81,81,81,81,81,132,81,81,81,81,81,81,81,81,81,81,81,81,153,81,81,168,81,81,]),'$end':([1,2,4,5,8,16,26,],[-2,0,-1,-3,-4,-5,-7,]),'STRING':([32,],[40,]),'EQUAL':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,110,-47,-69,110,-70,110,110,110,110,-68,None,None,-65,None,-52,-64,-67,-66,110,None,110,110,110,-72,-51,-71,110,110,-53,110,110,]),'EXTENDS':([10,],[14,]),'RIGHT_PARENTHESIS':([34,35,37,39,42,44,45,46,47,48,49,53,54,70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,92,104,107,108,122,124,132,133,134,135,136,137,139,140,141,142,143,144,145,152,153,154,159,160,161,162,163,170,172,173,],[-28,-14,-15,-16,-2,-29,-22,-18,-20,-19,52,56,-21,-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,-47,-69,133,-70,147,148,152,-68,-63,-60,-65,-61,-52,-64,-67,-66,-59,-62,-58,-72,-2,-51,-71,-54,-56,170,-55,-53,174,-57,]),'TIMES':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,117,-47,-69,117,-70,117,117,117,117,-68,117,117,117,117,-52,117,-67,-66,117,117,117,117,117,-72,-51,-71,117,117,-53,117,117,]),'INTEGER_LITERAL':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'IF':([55,57,58,59,62,64,69,94,123,127,128,130,147,148,155,156,164,165,166,171,175,],[-2,63,-23,-2,-2,-24,63,63,-38,-27,-25,-26,63,63,-36,-2,63,-34,-33,-35,-37,]),'AND':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,118,-47,-69,118,-70,118,118,118,118,-68,-63,-60,-65,-61,-52,-64,-67,-66,-59,-62,-58,118,118,-72,-51,-71,118,118,-53,118,118,]),'FALSE':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'GREATER':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,119,-47,-69,119,-70,119,119,119,119,-68,None,None,-65,None,-52,-64,-67,-66,119,None,119,119,119,-72,-51,-71,119,119,-53,119,119,]),'INT':([18,21,22,27,29,30,36,42,51,55,57,58,59,62,64,69,78,94,123,127,128,130,138,147,148,155,156,164,165,166,171,175,],[-2,24,-10,-11,24,-12,-13,24,24,-2,66,-23,-2,-2,-24,66,105,66,-38,-27,-25,-26,-17,66,66,-36,-2,66,-34,-33,-35,-37,]),'OUT':([101,],[129,]),'SYSTEM':([55,57,58,59,62,64,69,94,123,127,128,130,147,148,155,156,164,165,166,171,175,],[-2,67,-23,-2,-2,-24,67,67,-38,-27,-25,-26,67,67,-36,-2,67,-34,-33,-35,-37,]),'OR':([70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,120,-47,-69,120,-70,120,120,120,120,-68,-63,-60,-65,-61,-52,-64,-67,-66,-59,-62,-58,120,120,-72,-51,-71,120,120,-53,120,120,]),'THIS':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'BOOLEAN':([18,21,22,27,29,30,36,42,51,55,57,58,59,62,64,69,94,123,127,128,130,138,147,148,155,156,164,165,166,171,175,],[-2,28,-10,-11,28,-12,-13,28,28,-2,68,-23,-2,-2,-24,68,68,-38,-27,-25,-26,-17,68,68,-36,-2,68,-34,-33,-35,-37,]),'NOT':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'LEFT_BRACKET':([24,40,65,66,70,71,72,73,74,75,77,79,80,82,83,84,85,86,87,88,89,91,92,104,105,107,108,122,124,125,126,133,134,135,136,137,139,140,141,142,143,144,145,146,151,152,154,159,161,167,170,172,173,],[33,43,97,33,-44,-46,-74,-45,-78,-75,-43,-39,-73,-49,-50,-40,-41,-76,-42,-48,-77,121,-47,-69,131,121,-70,121,121,121,121,-68,-63,-60,-65,-61,-52,-64,-67,-66,-59,-62,-58,121,121,-72,-51,-71,121,121,-53,121,121,]),'MAIN':([20,],[23,]),'PUBLIC':([9,18,21,22,27,30,36,138,],[12,-2,29,-10,-11,-12,-13,-17,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parenthesis_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'unary_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'identifier_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'integer_literal_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'arg':([42,51,],[47,54,]),'new_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'identifier_or_brackets':([24,66,],[35,100,]),'class_list':([1,],[4,]),'single_or_array_var':([21,29,42,51,],[25,38,45,45,]),'array_element_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'field':([21,],[27,]),'extends':([10,],[13,]),'statement':([57,69,94,147,148,164,],[64,64,64,155,156,171,]),'main_class':([0,],[1,]),'else_statement':([156,],[166,]),'method':([21,],[30,]),'empty':([1,10,18,42,55,59,62,153,156,],[5,15,22,46,58,58,58,160,165,]),'this_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'null_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'field_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'args_list':([42,],[48,]),'statements_list':([55,59,62,],[57,69,94,]),'class':([4,],[8,]),'call_method_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'main_method':([9,],[11,]),'binary_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'boolean_expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'nonempty_expression_list':([153,],[163,]),'expression_list':([153,],[162,]),'declaration_list':([18,],[21,]),'programm':([0,],[2,]),'params_list':([42,],[49,]),'expression':([60,76,81,90,93,95,96,97,109,110,111,112,115,116,117,118,119,120,121,131,153,157,168,169,],[91,104,107,108,122,124,125,126,134,135,136,137,140,141,142,143,144,145,146,151,161,167,172,173,]),'identifier_or_assignment':([65,],[99,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programm","S'",1,None,None,None),
  ('programm -> main_class class_list','programm',2,'p_programm','syntaxer.py',12),
  ('empty -> <empty>','empty',0,'p_empty','syntaxer.py',18),
  ('class_list -> empty','class_list',1,'p_empty_class_list','syntaxer.py',23),
  ('class_list -> class_list class','class_list',2,'p_class_list','syntaxer.py',28),
  ('main_class -> CLASS IDENTIFIER LEFT_BRACE main_method RIGHT_BRACE','main_class',5,'p_main_class','syntaxer.py',36),
  ('main_method -> PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statements_list RIGHT_BRACE','main_method',13,'p_main_method','syntaxer.py',42),
  ('class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE','class',6,'p_class','syntaxer.py',48),
  ('extends -> empty','extends',1,'p_empty_extends','syntaxer.py',54),
  ('extends -> EXTENDS IDENTIFIER','extends',2,'p_extends','syntaxer.py',59),
  ('declaration_list -> empty','declaration_list',1,'p_empty_declaration_list','syntaxer.py',65),
  ('declaration_list -> declaration_list field','declaration_list',2,'p_declaration_list','syntaxer.py',70),
  ('declaration_list -> declaration_list method','declaration_list',2,'p_declaration_list','syntaxer.py',71),
  ('field -> single_or_array_var SEMICOLON','field',2,'p_field','syntaxer.py',79),
  ('single_or_array_var -> INT identifier_or_brackets','single_or_array_var',2,'p_single_or_array_var','syntaxer.py',85),
  ('single_or_array_var -> BOOLEAN IDENTIFIER','single_or_array_var',2,'p_single_or_array_var','syntaxer.py',86),
  ('single_or_array_var -> IDENTIFIER IDENTIFIER','single_or_array_var',2,'p_single_or_array_var_ref','syntaxer.py',92),
  ('method -> PUBLIC single_or_array_var LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE statements_list RETURN expression SEMICOLON RIGHT_BRACE','method',11,'p_method','syntaxer.py',98),
  ('params_list -> empty','params_list',1,'p_empty_params_list','syntaxer.py',104),
  ('params_list -> args_list','params_list',1,'p_params_list','syntaxer.py',110),
  ('args_list -> arg','args_list',1,'p_single_args_list','syntaxer.py',116),
  ('args_list -> args_list COMMA arg','args_list',3,'p_args_list','syntaxer.py',122),
  ('arg -> single_or_array_var','arg',1,'p_arg','syntaxer.py',132),
  ('statements_list -> empty','statements_list',1,'p_empty_statements_list','syntaxer.py',138),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','syntaxer.py',143),
  ('statement -> INT identifier_or_brackets SEMICOLON','statement',3,'p_statement','syntaxer.py',151),
  ('statement -> BOOLEAN IDENTIFIER SEMICOLON','statement',3,'p_statement','syntaxer.py',152),
  ('statement -> IDENTIFIER identifier_or_assignment SEMICOLON','statement',3,'p_complex_statement','syntaxer.py',158),
  ('identifier_or_brackets -> IDENTIFIER','identifier_or_brackets',1,'p_identifier_or_brackets_id','syntaxer.py',164),
  ('identifier_or_brackets -> LEFT_BRACKET RIGHT_BRACKET IDENTIFIER','identifier_or_brackets',3,'p_identifier_or_brackets_br','syntaxer.py',170),
  ('identifier_or_assignment -> IDENTIFIER','identifier_or_assignment',1,'p_identifier_or_assignment','syntaxer.py',176),
  ('identifier_or_assignment -> ASSIGNMENT expression','identifier_or_assignment',2,'p_identifier_or_assignment','syntaxer.py',177),
  ('identifier_or_assignment -> LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression','identifier_or_assignment',5,'p_identifier_or_assignment','syntaxer.py',178),
  ('statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement else_statement','statement',6,'p_if_statement','syntaxer.py',183),
  ('else_statement -> empty','else_statement',1,'p_empty_else_statement','syntaxer.py',188),
  ('else_statement -> ELSE statement','else_statement',2,'p_else_statement','syntaxer.py',193),
  ('statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','statement',5,'p_while_statement','syntaxer.py',200),
  ('statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON','statement',9,'p_print_statement','syntaxer.py',208),
  ('statement -> LEFT_BRACE statements_list RIGHT_BRACE','statement',3,'p_block_statement','syntaxer.py',223),
  ('expression -> array_element_expression','expression',1,'p_expression','syntaxer.py',229),
  ('expression -> field_expression','expression',1,'p_expression','syntaxer.py',230),
  ('expression -> call_method_expression','expression',1,'p_expression','syntaxer.py',231),
  ('expression -> binary_expression','expression',1,'p_expression','syntaxer.py',232),
  ('expression -> parenthesis_expression','expression',1,'p_expression','syntaxer.py',233),
  ('expression -> unary_expression','expression',1,'p_expression','syntaxer.py',234),
  ('expression -> new_expression','expression',1,'p_expression','syntaxer.py',235),
  ('expression -> identifier_expression','expression',1,'p_expression','syntaxer.py',236),
  ('expression -> integer_literal_expression','expression',1,'p_expression','syntaxer.py',237),
  ('expression -> boolean_expression','expression',1,'p_expression','syntaxer.py',238),
  ('expression -> this_expression','expression',1,'p_expression','syntaxer.py',239),
  ('expression -> null_expression','expression',1,'p_expression','syntaxer.py',240),
  ('array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET','array_element_expression',4,'p_array_element_expression','syntaxer.py',246),
  ('field_expression -> expression POINT IDENTIFIER','field_expression',3,'p_field_expression','syntaxer.py',254),
  ('call_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_method_expression',6,'p_call_method_expression','syntaxer.py',262),
  ('expression_list -> empty','expression_list',1,'p_empty_expression_list','syntaxer.py',271),
  ('expression_list -> nonempty_expression_list','expression_list',1,'p_nonempty_expression_list','syntaxer.py',277),
  ('nonempty_expression_list -> expression','nonempty_expression_list',1,'p_single_expression_list','syntaxer.py',283),
  ('nonempty_expression_list -> expression_list COMMA expression','nonempty_expression_list',3,'p_expression_list_head','syntaxer.py',289),
  ('binary_expression -> expression OR expression','binary_expression',3,'p_binary_expression','syntaxer.py',296),
  ('binary_expression -> expression AND expression','binary_expression',3,'p_binary_expression','syntaxer.py',297),
  ('binary_expression -> expression EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',298),
  ('binary_expression -> expression NOT_EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',299),
  ('binary_expression -> expression GREATER expression','binary_expression',3,'p_binary_expression','syntaxer.py',300),
  ('binary_expression -> expression LESS expression','binary_expression',3,'p_binary_expression','syntaxer.py',301),
  ('binary_expression -> expression PLUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',302),
  ('binary_expression -> expression MINUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',303),
  ('binary_expression -> expression TIMES expression','binary_expression',3,'p_binary_expression','syntaxer.py',304),
  ('binary_expression -> expression DIVIDE expression','binary_expression',3,'p_binary_expression','syntaxer.py',305),
  ('parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','parenthesis_expression',3,'p_parenthesis_expression','syntaxer.py',314),
  ('unary_expression -> MINUS expression','unary_expression',2,'p_unary_expression','syntaxer.py',321),
  ('unary_expression -> NOT expression','unary_expression',2,'p_unary_expression','syntaxer.py',322),
  ('new_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET','new_expression',5,'p_new_expression','syntaxer.py',330),
  ('new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS','new_expression',4,'p_new_expression','syntaxer.py',331),
  ('identifier_expression -> IDENTIFIER','identifier_expression',1,'p_identifier_expression','syntaxer.py',338),
  ('integer_literal_expression -> INTEGER_LITERAL','integer_literal_expression',1,'p_integer_literal_expression','syntaxer.py',345),
  ('boolean_expression -> TRUE','boolean_expression',1,'p_boolean_expression','syntaxer.py',352),
  ('boolean_expression -> FALSE','boolean_expression',1,'p_boolean_expression','syntaxer.py',353),
  ('this_expression -> THIS','this_expression',1,'p_this_expression','syntaxer.py',360),
  ('null_expression -> NULL','null_expression',1,'p_null_expression','syntaxer.py',366),
]
