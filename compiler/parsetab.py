
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = " \xd0z\xeb\xba\xc1\x8c'*H\x02\xc1\xd3y?\x8b"
    
_lr_action_items = {'RETURN':([61,63,64,69,129,133,134,136,161,162,171,172,177,181,],[-2,66,-26,-27,-41,-32,-29,-28,-39,-2,-37,-36,-38,-40,]),'LESS':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,115,-50,-72,115,-73,115,115,115,115,-71,None,None,-68,None,-55,-67,-70,-69,115,None,115,115,115,-75,-54,-74,115,115,-56,115,115,]),'ASSIGNMENT':([71,155,],[102,163,]),'VOID':([17,],[20,]),'RIGHT_BRACE':([11,18,21,22,27,30,36,64,65,68,69,75,100,109,119,129,133,134,136,144,161,162,171,172,177,181,],[16,-2,26,-10,-11,-12,-13,-26,-2,-2,-27,109,129,-6,144,-41,-32,-29,-28,-17,-39,-2,-37,-36,-38,-40,]),'RIGHT_BRACKET':([33,49,76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,98,110,114,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,176,],[44,56,-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,-50,-72,-73,155,-71,-66,-63,-68,-64,-55,-67,-70,-69,-62,-65,-61,160,165,-75,-54,-74,-56,]),'WHILE':([61,63,64,65,68,69,75,100,129,133,134,136,153,154,161,162,170,171,172,177,181,],[-2,67,-26,-2,-2,-27,67,67,-41,-32,-29,-28,67,67,-39,-2,67,-37,-36,-38,-40,]),'STATIC':([12,],[17,]),'LEFT_BRACE':([6,10,13,15,19,58,61,62,63,64,65,68,69,75,100,129,133,134,136,153,154,161,162,170,171,172,177,181,],[9,-2,18,-8,-9,61,-2,65,68,-26,-2,-2,-27,68,68,-41,-32,-29,-28,68,68,-39,-2,68,-37,-36,-38,-40,]),'PRINTLN':([156,],[164,]),'NEW':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'NULL':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'TRUE':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MINUS':([66,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,110,113,114,115,116,117,118,121,122,123,124,125,126,127,128,130,131,132,137,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,159,160,163,165,167,173,174,175,176,178,179,],[82,-47,-49,-77,-48,-81,-78,82,-46,-42,-76,82,-52,-53,-43,-44,-79,-45,-51,-80,82,117,-50,82,82,82,82,-72,117,-73,82,82,82,82,82,82,82,82,82,82,82,117,117,117,117,82,-71,117,117,-68,117,-55,-67,-70,-69,117,117,117,117,117,-75,82,-54,82,-74,117,117,82,82,-56,117,117,]),'DIVIDE':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,122,-50,-72,122,-73,122,122,122,122,-71,122,122,122,122,-55,122,-70,-69,122,122,122,122,122,-75,-54,-74,122,122,-56,122,122,]),'NOT_EQUAL':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,118,-50,-72,118,-73,118,118,118,118,-71,None,None,-68,None,-55,-67,-70,-69,118,None,118,118,118,-75,-54,-74,118,118,-56,118,118,]),'SEMICOLON':([25,34,35,37,42,50,76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,104,105,106,108,110,114,131,139,140,141,142,143,145,146,147,148,149,150,151,158,160,165,173,176,180,],[36,-30,-14,-15,-16,-31,-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,119,-50,-33,133,134,136,-72,-73,-34,-71,-66,-63,-68,-64,-55,-67,-70,-69,-62,-65,-61,-75,-54,-74,-35,-56,181,]),'POINT':([73,76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,135,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[107,-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,120,-50,120,120,120,120,120,120,120,156,-71,120,120,120,120,-55,120,120,120,120,120,120,120,120,-75,-54,-74,120,120,-56,120,120,]),'COMMA':([34,35,37,42,50,51,53,54,60,76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,98,110,114,139,140,141,142,143,145,146,147,148,149,150,151,158,159,160,165,166,167,168,169,176,179,],[-30,-14,-15,-16,-31,-25,-23,57,-24,-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,-50,-72,-73,-71,-66,-63,-68,-64,-55,-67,-70,-69,-62,-65,-61,-75,-2,-54,-74,-57,-59,175,-58,-56,-60,]),'PLUS':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,121,-50,-72,121,-73,121,121,121,121,-71,121,121,-68,121,-55,-67,-70,-69,121,121,121,121,121,-75,-54,-74,121,121,-56,121,121,]),'IDENTIFIER':([3,7,14,18,21,22,24,27,28,29,30,31,36,38,39,41,44,47,56,57,61,63,64,65,66,68,69,71,72,74,75,82,84,87,96,99,100,101,102,103,115,116,117,118,120,121,122,123,124,125,126,127,129,133,134,136,137,144,153,154,159,161,162,163,170,171,172,174,175,177,181,],[6,10,19,-2,31,-10,34,-11,37,38,-12,42,-13,45,34,48,50,31,59,31,-2,71,-26,-2,86,-2,-27,104,34,108,71,86,112,86,86,86,71,86,86,86,86,86,86,86,145,86,86,86,86,86,86,86,-41,-32,-29,-28,86,-17,71,71,86,-39,-2,86,71,-37,-36,86,86,-38,-40,]),'ELSE':([129,133,134,136,161,162,171,172,177,181,],[-41,-32,-29,-28,-39,170,-37,-36,-38,-40,]),'CLASS':([0,1,4,5,8,16,26,],[3,-2,7,-3,-4,-5,-7,]),'LEFT_PARENTHESIS':([23,34,40,45,46,48,50,66,67,70,82,87,96,99,101,102,103,112,115,116,117,118,121,122,123,124,125,126,127,137,145,159,163,164,174,175,],[32,-30,47,-20,-18,-19,-31,87,99,101,87,87,87,87,87,87,87,138,87,87,87,87,87,87,87,87,87,87,87,87,159,87,87,174,87,87,]),'$end':([1,2,4,5,8,16,26,],[-2,0,-1,-3,-4,-5,-7,]),'STRING':([32,],[43,]),'EQUAL':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,116,-50,-72,116,-73,116,116,116,116,-71,None,None,-68,None,-55,-67,-70,-69,116,None,116,116,116,-75,-54,-74,116,116,-56,116,116,]),'EXTENDS':([10,],[14,]),'RIGHT_PARENTHESIS':([34,35,37,42,47,50,51,52,53,54,55,59,60,76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,98,110,113,114,128,130,138,139,140,141,142,143,145,146,147,148,149,150,151,158,159,160,165,166,167,168,169,176,178,179,],[-30,-14,-15,-16,-2,-31,-25,-21,-23,-22,58,62,-24,-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,-50,-72,139,-73,153,154,158,-71,-66,-63,-68,-64,-55,-67,-70,-69,-62,-65,-61,-75,-2,-54,-74,-57,-59,176,-58,-56,180,-60,]),'TIMES':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,123,-50,-72,123,-73,123,123,123,123,-71,123,123,123,123,-55,123,-70,-69,123,123,123,123,123,-75,-54,-74,123,123,-56,123,123,]),'INTEGER_LITERAL':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'IF':([61,63,64,65,68,69,75,100,129,133,134,136,153,154,161,162,170,171,172,177,181,],[-2,70,-26,-2,-2,-27,70,70,-41,-32,-29,-28,70,70,-39,-2,70,-37,-36,-38,-40,]),'AND':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,124,-50,-72,124,-73,124,124,124,124,-71,-66,-63,-68,-64,-55,-67,-70,-69,-62,-65,-61,124,124,-75,-54,-74,124,124,-56,124,124,]),'FALSE':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'GREATER':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,125,-50,-72,125,-73,125,125,125,125,-71,None,None,-68,None,-55,-67,-70,-69,125,None,125,125,125,-75,-54,-74,125,125,-56,125,125,]),'INT':([18,21,22,27,29,30,36,47,57,61,63,64,65,68,69,75,84,100,129,133,134,136,144,153,154,161,162,170,171,172,177,181,],[-2,24,-10,-11,39,-12,-13,24,24,-2,72,-26,-2,-2,-27,72,111,72,-41,-32,-29,-28,-17,72,72,-39,-2,72,-37,-36,-38,-40,]),'OUT':([107,],[135,]),'SYSTEM':([61,63,64,65,68,69,75,100,129,133,134,136,153,154,161,162,170,171,172,177,181,],[-2,73,-26,-2,-2,-27,73,73,-41,-32,-29,-28,73,73,-39,-2,73,-37,-36,-38,-40,]),'OR':([76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,126,-50,-72,126,-73,126,126,126,126,-71,-66,-63,-68,-64,-55,-67,-70,-69,-62,-65,-61,126,126,-75,-54,-74,126,126,-56,126,126,]),'THIS':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'BOOLEAN':([18,21,22,27,29,30,36,47,57,61,63,64,65,68,69,75,100,129,133,134,136,144,153,154,161,162,170,171,172,177,181,],[-2,28,-10,-11,41,-12,-13,28,28,-2,74,-26,-2,-2,-27,74,74,-41,-32,-29,-28,-17,74,74,-39,-2,74,-37,-36,-38,-40,]),'NOT':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'LEFT_BRACKET':([24,39,43,71,72,76,77,78,79,80,81,83,85,86,88,89,90,91,92,93,94,95,97,98,110,111,113,114,128,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,152,157,158,160,165,167,173,176,178,179,],[33,33,49,103,33,-47,-49,-77,-48,-81,-78,-46,-42,-76,-52,-53,-43,-44,-79,-45,-51,-80,127,-50,-72,137,127,-73,127,127,127,127,-71,-66,-63,-68,-64,-55,-67,-70,-69,-62,-65,-61,127,127,-75,-54,-74,127,127,-56,127,127,]),'MAIN':([20,],[23,]),'PUBLIC':([9,18,21,22,27,30,36,144,],[12,-2,29,-10,-11,-12,-13,-17,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parenthesis_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'unary_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'identifier_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'integer_literal_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'arg':([47,57,],[53,60,]),'new_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'identifier_or_brackets':([24,39,72,],[35,46,106,]),'class_list':([1,],[4,]),'single_or_array_var':([21,47,57,],[25,51,51,]),'array_element_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'field':([21,],[27,]),'extends':([10,],[13,]),'statement':([63,75,100,153,154,170,],[69,69,69,161,162,177,]),'main_class':([0,],[1,]),'else_statement':([162,],[172,]),'method':([21,],[30,]),'empty':([1,10,18,47,61,65,68,159,162,],[5,15,22,52,64,64,64,166,171,]),'this_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'null_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'field_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'args_list':([47,],[54,]),'statements_list':([61,65,68,],[63,75,100,]),'class':([4,],[8,]),'call_method_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'main_method':([9,],[11,]),'binary_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'boolean_expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'nonempty_expression_list':([159,],[169,]),'expression_list':([159,],[168,]),'return_type_and_name':([29,],[40,]),'declaration_list':([18,],[21,]),'programm':([0,],[2,]),'params_list':([47,],[55,]),'expression':([66,82,87,96,99,101,102,103,115,116,117,118,121,122,123,124,125,126,127,137,159,163,174,175,],[97,110,113,114,128,130,131,132,140,141,142,143,146,147,148,149,150,151,152,157,167,173,178,179,]),'identifier_or_assignment':([71,],[105,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programm","S'",1,None,None,None),
  ('programm -> main_class class_list','programm',2,'p_programm','syntaxer.py',12),
  ('empty -> <empty>','empty',0,'p_empty','syntaxer.py',18),
  ('class_list -> empty','class_list',1,'p_empty_class_list','syntaxer.py',23),
  ('class_list -> class_list class','class_list',2,'p_class_list','syntaxer.py',28),
  ('main_class -> CLASS IDENTIFIER LEFT_BRACE main_method RIGHT_BRACE','main_class',5,'p_main_class','syntaxer.py',36),
  ('main_method -> PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statements_list RIGHT_BRACE','main_method',13,'p_main_method','syntaxer.py',42),
  ('class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE','class',6,'p_class','syntaxer.py',48),
  ('extends -> empty','extends',1,'p_empty_extends','syntaxer.py',54),
  ('extends -> EXTENDS IDENTIFIER','extends',2,'p_extends','syntaxer.py',59),
  ('declaration_list -> empty','declaration_list',1,'p_empty_declaration_list','syntaxer.py',65),
  ('declaration_list -> declaration_list field','declaration_list',2,'p_declaration_list','syntaxer.py',70),
  ('declaration_list -> declaration_list method','declaration_list',2,'p_declaration_list','syntaxer.py',71),
  ('field -> single_or_array_var SEMICOLON','field',2,'p_field','syntaxer.py',79),
  ('single_or_array_var -> INT identifier_or_brackets','single_or_array_var',2,'p_int_single_or_array_var','syntaxer.py',88),
  ('single_or_array_var -> BOOLEAN IDENTIFIER','single_or_array_var',2,'p_boolean_single_or_array_var','syntaxer.py',96),
  ('single_or_array_var -> IDENTIFIER IDENTIFIER','single_or_array_var',2,'p_single_or_array_var_ref','syntaxer.py',102),
  ('method -> PUBLIC return_type_and_name LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE statements_list RETURN expression SEMICOLON RIGHT_BRACE','method',11,'p_method','syntaxer.py',108),
  ('return_type_and_name -> INT identifier_or_brackets','return_type_and_name',2,'p_int_return_type_and_name','syntaxer.py',119),
  ('return_type_and_name -> BOOLEAN IDENTIFIER','return_type_and_name',2,'p_boolean_return_type_and_name','syntaxer.py',130),
  ('return_type_and_name -> IDENTIFIER IDENTIFIER','return_type_and_name',2,'p_id_return_type_and_name','syntaxer.py',139),
  ('params_list -> empty','params_list',1,'p_empty_params_list','syntaxer.py',148),
  ('params_list -> args_list','params_list',1,'p_params_list','syntaxer.py',154),
  ('args_list -> arg','args_list',1,'p_single_args_list','syntaxer.py',160),
  ('args_list -> args_list COMMA arg','args_list',3,'p_args_list','syntaxer.py',166),
  ('arg -> single_or_array_var','arg',1,'p_arg','syntaxer.py',176),
  ('statements_list -> empty','statements_list',1,'p_empty_statements_list','syntaxer.py',182),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','syntaxer.py',187),
  ('statement -> BOOLEAN IDENTIFIER SEMICOLON','statement',3,'p_bool_statement','syntaxer.py',195),
  ('statement -> INT identifier_or_brackets SEMICOLON','statement',3,'p_int_statement','syntaxer.py',201),
  ('identifier_or_brackets -> IDENTIFIER','identifier_or_brackets',1,'p_identifier_or_brackets_id','syntaxer.py',213),
  ('identifier_or_brackets -> LEFT_BRACKET RIGHT_BRACKET IDENTIFIER','identifier_or_brackets',3,'p_identifier_or_brackets_br','syntaxer.py',219),
  ('statement -> IDENTIFIER identifier_or_assignment SEMICOLON','statement',3,'p_complex_statement','syntaxer.py',225),
  ('identifier_or_assignment -> IDENTIFIER','identifier_or_assignment',1,'p_identifier_or_assignment_id','syntaxer.py',243),
  ('identifier_or_assignment -> ASSIGNMENT expression','identifier_or_assignment',2,'p_identifier_or_assignment_assign','syntaxer.py',249),
  ('identifier_or_assignment -> LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression','identifier_or_assignment',5,'p_identifier_or_assignment_array_element_assign','syntaxer.py',255),
  ('statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement else_statement','statement',6,'p_if_statement','syntaxer.py',261),
  ('else_statement -> empty','else_statement',1,'p_empty_else_statement','syntaxer.py',271),
  ('else_statement -> ELSE statement','else_statement',2,'p_else_statement','syntaxer.py',276),
  ('statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','statement',5,'p_while_statement','syntaxer.py',282),
  ('statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON','statement',9,'p_print_statement','syntaxer.py',288),
  ('statement -> LEFT_BRACE statements_list RIGHT_BRACE','statement',3,'p_block_statement','syntaxer.py',294),
  ('expression -> array_element_expression','expression',1,'p_expression','syntaxer.py',300),
  ('expression -> field_expression','expression',1,'p_expression','syntaxer.py',301),
  ('expression -> call_method_expression','expression',1,'p_expression','syntaxer.py',302),
  ('expression -> binary_expression','expression',1,'p_expression','syntaxer.py',303),
  ('expression -> parenthesis_expression','expression',1,'p_expression','syntaxer.py',304),
  ('expression -> unary_expression','expression',1,'p_expression','syntaxer.py',305),
  ('expression -> new_expression','expression',1,'p_expression','syntaxer.py',306),
  ('expression -> identifier_expression','expression',1,'p_expression','syntaxer.py',307),
  ('expression -> integer_literal_expression','expression',1,'p_expression','syntaxer.py',308),
  ('expression -> boolean_expression','expression',1,'p_expression','syntaxer.py',309),
  ('expression -> this_expression','expression',1,'p_expression','syntaxer.py',310),
  ('expression -> null_expression','expression',1,'p_expression','syntaxer.py',311),
  ('array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET','array_element_expression',4,'p_array_element_expression','syntaxer.py',317),
  ('field_expression -> expression POINT IDENTIFIER','field_expression',3,'p_field_expression','syntaxer.py',323),
  ('call_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_method_expression',6,'p_call_method_expression','syntaxer.py',329),
  ('expression_list -> empty','expression_list',1,'p_empty_expression_list','syntaxer.py',335),
  ('expression_list -> nonempty_expression_list','expression_list',1,'p_nonempty_expression_list','syntaxer.py',341),
  ('nonempty_expression_list -> expression','nonempty_expression_list',1,'p_single_expression_list','syntaxer.py',347),
  ('nonempty_expression_list -> expression_list COMMA expression','nonempty_expression_list',3,'p_expression_list_head','syntaxer.py',353),
  ('binary_expression -> expression OR expression','binary_expression',3,'p_binary_expression','syntaxer.py',363),
  ('binary_expression -> expression AND expression','binary_expression',3,'p_binary_expression','syntaxer.py',364),
  ('binary_expression -> expression EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',365),
  ('binary_expression -> expression NOT_EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',366),
  ('binary_expression -> expression GREATER expression','binary_expression',3,'p_binary_expression','syntaxer.py',367),
  ('binary_expression -> expression LESS expression','binary_expression',3,'p_binary_expression','syntaxer.py',368),
  ('binary_expression -> expression PLUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',369),
  ('binary_expression -> expression MINUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',370),
  ('binary_expression -> expression TIMES expression','binary_expression',3,'p_binary_expression','syntaxer.py',371),
  ('binary_expression -> expression DIVIDE expression','binary_expression',3,'p_binary_expression','syntaxer.py',372),
  ('parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','parenthesis_expression',3,'p_parenthesis_expression','syntaxer.py',378),
  ('unary_expression -> MINUS expression','unary_expression',2,'p_unary_expression','syntaxer.py',384),
  ('unary_expression -> NOT expression','unary_expression',2,'p_unary_expression','syntaxer.py',385),
  ('new_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET','new_expression',5,'p_new_array_expression','syntaxer.py',391),
  ('new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS','new_expression',4,'p_new_identifier_expression','syntaxer.py',397),
  ('identifier_expression -> IDENTIFIER','identifier_expression',1,'p_identifier_expression','syntaxer.py',403),
  ('integer_literal_expression -> INTEGER_LITERAL','integer_literal_expression',1,'p_integer_literal_expression','syntaxer.py',409),
  ('boolean_expression -> TRUE','boolean_expression',1,'p_boolean_expression','syntaxer.py',415),
  ('boolean_expression -> FALSE','boolean_expression',1,'p_boolean_expression','syntaxer.py',416),
  ('this_expression -> THIS','this_expression',1,'p_this_expression','syntaxer.py',422),
  ('null_expression -> NULL','null_expression',1,'p_null_expression','syntaxer.py',428),
]
