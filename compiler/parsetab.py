
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xaev^0g\x15\xe4_\x1e$\x86E\x91\xde\x1c\xf4'
    
_lr_action_items = {'RETURN':([59,61,62,63,71,78,80,81,82,84,98,101,108,128,131,161,163,165,167,176,180,],[-2,-2,-2,-20,-35,-36,-34,-2,-33,-24,113,-21,-25,-22,-32,-41,-23,-39,-37,-38,-40,]),'LESS':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,120,-51,-71,-72,120,120,120,-70,120,120,-68,None,None,-56,120,None,None,120,-66,-67,120,-69,120,120,-73,-55,-74,120,-57,120,]),'ASSIGNMENT':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,102,106,109,136,138,139,140,141,142,145,146,147,148,149,151,156,162,166,174,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,119,-51,127,-71,-72,-70,-61,-68,-63,-64,-56,-65,-62,-60,-66,-67,-69,-73,-55,-74,-57,]),'VOID':([20,],[30,]),'RIGHT_BRACE':([15,17,21,24,26,28,31,34,41,62,63,69,71,78,80,81,82,84,101,103,105,108,128,129,131,153,159,161,163,164,165,167,169,176,180,],[19,-2,-2,-2,36,-10,-11,-12,-13,-2,-20,-2,-35,-36,-34,-2,-33,-24,-21,-2,131,-25,-22,-2,-32,164,169,-41,-23,-6,-39,-37,-14,-38,-40,]),'RIGHT_BRACKET':([32,35,37,53,66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,100,106,109,136,138,139,140,141,142,145,146,147,148,149,150,151,155,156,162,166,174,],[40,42,43,57,-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,-51,-71,-72,-70,-61,-68,-63,-64,-56,-65,-62,-60,-66,-67,162,-69,166,-73,-55,-74,-57,]),'WHILE':([59,61,62,63,69,71,78,80,81,82,101,103,128,129,131,154,157,161,163,165,167,172,176,180,],[-2,68,-2,-20,68,-35,-36,-34,68,-33,-21,-2,-22,68,-32,68,68,-41,-23,-39,-37,68,-38,-40,]),'STATIC':([16,],[20,]),'LEFT_BRACE':([8,9,12,14,18,56,59,61,62,63,65,69,71,78,80,81,82,101,103,128,129,131,154,157,161,163,165,167,172,176,180,],[11,-2,17,-8,-9,59,-2,69,-2,-20,103,69,-35,-36,-34,69,-33,-21,-2,-22,69,-32,69,69,-41,-23,-39,-37,69,-38,-40,]),'PRINTLN':([158,],[168,]),'NEW':([59,61,62,63,69,71,75,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,172,173,175,176,180,],[-2,77,-2,-20,77,-35,77,-36,-34,77,-33,77,77,-21,-2,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-22,77,-32,77,77,77,77,-41,-23,-39,-37,77,77,77,-38,-40,]),'NULL':([59,61,62,63,69,71,75,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,172,173,175,176,180,],[-2,73,-2,-20,73,-35,73,-36,-34,73,-33,73,73,-21,-2,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-22,73,-32,73,73,73,73,-41,-23,-39,-37,73,73,73,-38,-40,]),'TRUE':([59,61,62,63,69,71,75,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,172,173,175,176,180,],[-2,74,-2,-20,74,-35,74,-36,-34,74,-33,74,74,-21,-2,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-22,74,-32,74,74,74,74,-41,-23,-39,-37,74,74,74,-38,-40,]),'MINUS':([59,61,62,63,66,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,85,86,87,88,90,91,92,93,94,95,97,99,100,101,103,104,106,109,110,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,154,155,156,157,160,161,162,163,165,166,167,171,172,173,174,175,176,177,180,],[-2,75,-2,-20,-47,-50,75,-48,-35,-43,-80,-77,75,-46,-36,-42,-34,75,-33,-49,-53,-54,-76,75,-75,-78,-45,-52,-79,-44,75,124,-51,-21,-2,75,-71,-72,75,124,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-22,75,124,-32,75,124,-70,124,124,-68,124,124,-56,124,124,124,124,-66,-67,124,-69,124,75,124,-73,75,75,-41,-55,-23,-39,-74,-37,124,75,75,-57,75,-38,124,-40,]),'DIVIDE':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,126,-51,-71,-72,126,126,126,-70,126,126,-68,126,126,-56,126,126,126,126,126,126,126,-69,126,126,-73,-55,-74,126,-57,126,]),'NOT_EQUAL':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,116,-51,-71,-72,116,116,116,-70,116,116,-68,None,None,-56,116,None,None,116,-66,-67,116,-69,116,116,-73,-55,-74,116,-57,116,]),'SEMICOLON':([33,66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,100,102,106,109,136,137,138,139,140,141,142,144,145,146,147,148,149,151,152,156,162,166,174,179,],[41,-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,-51,128,-71,-72,-70,159,-61,-68,-63,-64,-56,161,-65,-62,-60,-66,-67,-69,163,-73,-55,-74,-57,180,]),'POINT':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,96,99,100,106,109,112,130,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,111,118,-51,118,118,118,118,118,158,-70,118,118,118,118,118,-56,118,118,118,118,118,118,118,118,118,118,-73,-55,-74,118,-57,118,]),'COMMA':([50,55,66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,100,106,109,136,138,139,140,141,142,145,146,147,148,149,151,156,162,166,171,174,],[54,-19,-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,-51,-71,-72,-70,-61,-68,-63,-64,-56,-65,-62,-60,-66,-67,-69,-73,-55,-74,175,-57,]),'PLUS':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,123,-51,-71,-72,123,123,123,-70,123,123,-68,123,123,-56,123,123,123,123,-66,-67,123,-69,123,123,-73,-55,-74,123,-57,123,]),'IDENTIFIER':([3,4,13,17,21,22,23,24,25,27,29,38,40,41,42,43,46,51,54,57,59,61,62,63,64,69,71,75,77,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,169,172,173,175,176,180,],[8,9,18,22,22,-28,33,22,-27,-26,22,44,-31,-13,-30,-29,22,55,22,60,22,90,22,-20,102,90,-35,90,22,-36,-34,90,-33,90,90,-21,22,90,90,90,90,90,90,90,143,90,90,90,90,90,90,90,90,90,-22,90,-32,90,90,90,90,-41,-23,-39,-37,-14,90,90,90,-38,-40,]),'ELSE':([71,78,80,82,131,161,165,167,176,180,],[-35,-36,-34,-33,-32,-41,-39,172,-38,-40,]),'CLASS':([0,1,6,19,36,],[3,4,4,-5,-7,]),'LEFT_PARENTHESIS':([22,25,27,39,40,42,43,44,59,61,62,63,68,69,71,75,78,80,81,82,88,89,97,101,103,104,107,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,143,154,157,160,161,163,165,167,168,172,173,175,176,180,],[-28,-27,-26,45,-31,-30,-29,46,-2,97,-2,-20,104,97,-35,97,-36,-34,97,-33,97,110,97,-21,-2,97,133,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-22,97,-32,97,160,97,97,97,-41,-23,-39,-37,173,97,97,97,-38,-40,]),'$end':([1,2,5,6,7,10,19,36,],[-2,0,-1,-2,-3,-4,-5,-7,]),'STRING':([45,],[47,]),'EQUAL':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,121,-51,-71,-72,121,121,121,-70,121,121,-68,None,None,-56,121,None,None,121,-66,-67,121,-69,121,121,-73,-55,-74,121,-57,121,]),'EXTENDS':([9,],[13,]),'RIGHT_PARENTHESIS':([46,48,49,50,52,55,58,60,66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,100,106,109,112,130,133,134,136,138,139,140,141,142,145,146,147,148,149,151,156,162,166,170,171,174,177,178,],[-2,-15,-16,-17,56,-19,-18,65,-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,-51,-71,-72,136,154,156,157,-70,-61,-68,-63,-64,-56,-65,-62,-60,-66,-67,-69,-73,-55,-74,174,-58,-57,179,-59,]),'TIMES':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,115,-51,-71,-72,115,115,115,-70,115,115,-68,115,115,-56,115,115,115,115,115,115,115,-69,115,115,-73,-55,-74,115,-57,115,]),'INTEGER_LITERAL':([59,61,62,63,69,71,75,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,172,173,175,176,180,],[-2,87,-2,-20,87,-35,87,-36,-34,87,-33,87,87,-21,-2,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-22,87,-32,87,87,87,87,-41,-23,-39,-37,87,87,87,-38,-40,]),'IF':([59,61,62,63,69,71,78,80,81,82,101,103,128,129,131,154,157,161,163,165,167,172,176,180,],[-2,89,-2,-20,89,-35,-36,-34,89,-33,-21,-2,-22,89,-32,89,89,-41,-23,-39,-37,89,-38,-40,]),'AND':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,114,-51,-71,-72,114,114,114,-70,114,-61,-68,-63,-64,-56,114,-65,-62,-60,-66,-67,114,-69,114,114,-73,-55,-74,114,-57,114,]),'FALSE':([59,61,62,63,69,71,75,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,172,173,175,176,180,],[-2,91,-2,-20,91,-35,91,-36,-34,91,-33,91,91,-21,-2,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-22,91,-32,91,91,91,91,-41,-23,-39,-37,91,91,91,-38,-40,]),'GREATER':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,117,-51,-71,-72,117,117,117,-70,117,117,-68,None,None,-56,117,None,None,117,-66,-67,117,-69,117,117,-73,-55,-74,117,-57,117,]),'INT':([17,21,24,29,41,46,54,59,62,77,103,128,163,169,],[25,25,25,25,-13,25,25,25,25,25,25,-22,-23,-14,]),'OUT':([111,],[135,]),'SYSTEM':([59,61,62,63,69,71,78,80,81,82,101,103,128,129,131,154,157,161,163,165,167,172,176,180,],[-2,96,-2,-20,96,-35,-36,-34,96,-33,-21,-2,-22,96,-32,96,96,-41,-23,-39,-37,96,-38,-40,]),'OR':([66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,122,-51,-71,-72,122,122,122,-70,122,-61,-68,-63,-64,-56,122,-65,-62,-60,-66,-67,122,-69,122,122,-73,-55,-74,122,-57,122,]),'THIS':([59,61,62,63,69,71,75,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,172,173,175,176,180,],[-2,94,-2,-20,94,-35,94,-36,-34,94,-33,94,94,-21,-2,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-22,94,-32,94,94,94,94,-41,-23,-39,-37,94,94,94,-38,-40,]),'LENGTH':([118,],[142,]),'BOOLEAN':([17,21,24,29,41,46,54,59,62,77,103,128,163,169,],[27,27,27,27,-13,27,27,27,27,27,27,-22,-23,-14,]),'NOT':([59,61,62,63,69,71,75,78,80,81,82,88,97,101,103,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,154,157,160,161,163,165,167,172,173,175,176,180,],[-2,88,-2,-20,88,-35,88,-36,-34,88,-33,88,88,-21,-2,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-22,88,-32,88,88,88,88,-41,-23,-39,-37,88,88,88,-38,-40,]),'LEFT_BRACKET':([22,25,27,40,42,43,47,66,67,70,72,73,74,76,79,83,85,86,87,90,91,92,93,94,95,99,100,106,107,109,112,130,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,155,156,162,166,171,174,177,],[32,35,37,-31,-30,-29,53,-47,-50,-48,-43,-80,-77,-46,-42,-49,-53,-54,-76,-75,-78,-45,-52,-79,-44,125,-51,-71,132,-72,125,125,125,-70,125,-61,-68,-63,-64,-56,125,-65,-62,-60,-66,-67,125,-69,125,125,-73,-55,-74,125,-57,125,]),'MAIN':([30,],[39,]),'PUBLIC':([11,17,21,24,41,169,],[16,29,29,29,-13,-14,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'length_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'unary_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'identifier_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'integer_literal_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'arg':([46,54,],[50,50,]),'print_statement':([61,69,81,129,154,157,172,],[71,71,71,71,71,71,71,]),'new_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'var_list':([59,62,103,],[61,101,129,]),'class_list':([1,6,],[5,10,]),'parenthesis_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'assignment_statement':([61,69,81,129,154,157,172,],[78,78,78,78,78,78,78,]),'array_element_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'field':([17,21,24,],[21,21,21,]),'while_statement':([61,69,81,129,154,157,172,],[80,80,80,80,80,80,80,]),'extends':([9,],[12,]),'statement':([61,69,81,129,154,157,172,],[81,81,81,81,165,167,176,]),'var':([59,62,103,],[62,62,62,]),'if_statement':([61,69,81,129,154,157,172,],[82,82,82,82,82,82,82,]),'type':([17,21,24,29,46,54,59,62,77,103,],[23,23,23,38,51,51,64,64,107,64,]),'method':([17,21,24,],[24,24,24,]),'empty':([1,6,9,17,21,24,46,59,61,62,69,81,103,129,],[7,7,14,28,28,28,48,63,84,63,84,84,63,84,]),'this_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'null_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'args_list':([46,54,],[49,58,]),'main_class':([0,],[1,]),'class':([1,6,],[6,6,]),'call_method_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'main_method':([11,],[15,]),'binary_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'boolean_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'expression_list':([160,175,],[170,178,]),'declaration_list':([17,21,24,],[26,31,34,]),'new_array_expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'statement_list':([61,69,81,129,],[98,105,108,153,]),'programm':([0,],[2,]),'params_list':([46,],[52,]),'expression':([61,69,75,81,88,97,104,110,113,114,115,116,117,119,120,121,122,123,124,125,126,127,129,132,154,157,160,172,173,175,],[99,99,106,99,109,112,130,134,137,138,139,140,141,144,145,146,147,148,149,150,151,152,99,155,99,99,171,99,177,171,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programm","S'",1,None,None,None),
  ('programm -> main_class class_list','programm',2,'p_programm','syntaxer.py',17),
  ('empty -> <empty>','empty',0,'p_empty','syntaxer.py',23),
  ('class_list -> empty','class_list',1,'p_empty_class_list','syntaxer.py',27),
  ('class_list -> class class_list','class_list',2,'p_class_list','syntaxer.py',33),
  ('main_class -> CLASS IDENTIFIER LEFT_BRACE main_method RIGHT_BRACE','main_class',5,'p_main_class','syntaxer.py',40),
  ('main_method -> PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE','main_method',14,'p_main_method','syntaxer.py',48),
  ('class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE','class',6,'p_class','syntaxer.py',63),
  ('extends -> empty','extends',1,'p_empty_extends','syntaxer.py',76),
  ('extends -> EXTENDS IDENTIFIER','extends',2,'p_extends','syntaxer.py',82),
  ('declaration_list -> empty','declaration_list',1,'p_empty_declaration_list','syntaxer.py',88),
  ('declaration_list -> field declaration_list','declaration_list',2,'p_declaration_list','syntaxer.py',94),
  ('declaration_list -> method declaration_list','declaration_list',2,'p_declaration_list','syntaxer.py',95),
  ('field -> type IDENTIFIER SEMICOLON','field',3,'p_field','syntaxer.py',102),
  ('method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE','method',13,'p_method','syntaxer.py',110),
  ('params_list -> empty','params_list',1,'p_empty_params_list','syntaxer.py',121),
  ('params_list -> args_list','params_list',1,'p_params_list','syntaxer.py',127),
  ('args_list -> arg','args_list',1,'p_single_args_list','syntaxer.py',133),
  ('args_list -> arg COMMA args_list','args_list',3,'p_args_list','syntaxer.py',139),
  ('arg -> type IDENTIFIER','arg',2,'p_arg','syntaxer.py',146),
  ('var_list -> empty','var_list',1,'p_empty_var_list','syntaxer.py',154),
  ('var_list -> var var_list','var_list',2,'p_var_list','syntaxer.py',160),
  ('var -> type IDENTIFIER SEMICOLON','var',3,'p_var','syntaxer.py',167),
  ('var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON','var',5,'p_var_with_value','syntaxer.py',175),
  ('statement_list -> empty','statement_list',1,'p_empty_statement_list','syntaxer.py',184),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','syntaxer.py',190),
  ('type -> BOOLEAN','type',1,'p_simple_type','syntaxer.py',197),
  ('type -> INT','type',1,'p_simple_type','syntaxer.py',198),
  ('type -> IDENTIFIER','type',1,'p_simple_type','syntaxer.py',199),
  ('type -> BOOLEAN LEFT_BRACKET RIGHT_BRACKET','type',3,'p_array_type','syntaxer.py',206),
  ('type -> INT LEFT_BRACKET RIGHT_BRACKET','type',3,'p_array_type','syntaxer.py',207),
  ('type -> IDENTIFIER LEFT_BRACKET RIGHT_BRACKET','type',3,'p_array_type','syntaxer.py',208),
  ('statement -> LEFT_BRACE statement_list RIGHT_BRACE','statement',3,'p_block_statement','syntaxer.py',215),
  ('statement -> if_statement','statement',1,'p_statement','syntaxer.py',221),
  ('statement -> while_statement','statement',1,'p_statement','syntaxer.py',222),
  ('statement -> print_statement','statement',1,'p_statement','syntaxer.py',223),
  ('statement -> assignment_statement','statement',1,'p_statement','syntaxer.py',224),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','if_statement',5,'p_if_statement','syntaxer.py',230),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement','if_statement',7,'p_if_else_statement','syntaxer.py',238),
  ('while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','while_statement',5,'p_while_statement','syntaxer.py',247),
  ('print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON','print_statement',9,'p_print_statement','syntaxer.py',255),
  ('assignment_statement -> expression ASSIGNMENT expression SEMICOLON','assignment_statement',4,'p_assignment_statement','syntaxer.py',262),
  ('expression -> array_element_expression','expression',1,'p_expression','syntaxer.py',270),
  ('expression -> length_expression','expression',1,'p_expression','syntaxer.py',271),
  ('expression -> call_method_expression','expression',1,'p_expression','syntaxer.py',272),
  ('expression -> binary_expression','expression',1,'p_expression','syntaxer.py',273),
  ('expression -> parenthesis_expression','expression',1,'p_expression','syntaxer.py',274),
  ('expression -> unary_expression','expression',1,'p_expression','syntaxer.py',275),
  ('expression -> new_expression','expression',1,'p_expression','syntaxer.py',276),
  ('expression -> new_array_expression','expression',1,'p_expression','syntaxer.py',277),
  ('expression -> identifier_expression','expression',1,'p_expression','syntaxer.py',278),
  ('expression -> integer_literal_expression','expression',1,'p_expression','syntaxer.py',279),
  ('expression -> boolean_expression','expression',1,'p_expression','syntaxer.py',280),
  ('expression -> this_expression','expression',1,'p_expression','syntaxer.py',281),
  ('expression -> null_expression','expression',1,'p_expression','syntaxer.py',282),
  ('array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET','array_element_expression',4,'p_array_element_expression','syntaxer.py',288),
  ('length_expression -> expression POINT LENGTH','length_expression',3,'p_lenght_expression','syntaxer.py',296),
  ('call_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','call_method_expression',6,'p_call_method_expression','syntaxer.py',303),
  ('expression_list -> expression','expression_list',1,'p_single_expression_list','syntaxer.py',312),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','syntaxer.py',318),
  ('binary_expression -> expression OR expression','binary_expression',3,'p_binary_expression','syntaxer.py',325),
  ('binary_expression -> expression AND expression','binary_expression',3,'p_binary_expression','syntaxer.py',326),
  ('binary_expression -> expression EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',327),
  ('binary_expression -> expression NOT_EQUAL expression','binary_expression',3,'p_binary_expression','syntaxer.py',328),
  ('binary_expression -> expression GREATER expression','binary_expression',3,'p_binary_expression','syntaxer.py',329),
  ('binary_expression -> expression LESS expression','binary_expression',3,'p_binary_expression','syntaxer.py',330),
  ('binary_expression -> expression PLUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',331),
  ('binary_expression -> expression MINUS expression','binary_expression',3,'p_binary_expression','syntaxer.py',332),
  ('binary_expression -> expression TIMES expression','binary_expression',3,'p_binary_expression','syntaxer.py',333),
  ('binary_expression -> expression DIVIDE expression','binary_expression',3,'p_binary_expression','syntaxer.py',334),
  ('parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','parenthesis_expression',3,'p_parenthesis_expression','syntaxer.py',343),
  ('unary_expression -> MINUS expression','unary_expression',2,'p_unary_expression','syntaxer.py',350),
  ('unary_expression -> NOT expression','unary_expression',2,'p_unary_expression','syntaxer.py',351),
  ('new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS','new_expression',4,'p_new_expression','syntaxer.py',359),
  ('new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET','new_array_expression',5,'p_new_array_expression','syntaxer.py',366),
  ('identifier_expression -> IDENTIFIER','identifier_expression',1,'p_identifier_expression','syntaxer.py',374),
  ('integer_literal_expression -> INTEGER_LITERAL','integer_literal_expression',1,'p_integer_literal_expression','syntaxer.py',381),
  ('boolean_expression -> TRUE','boolean_expression',1,'p_boolean_expression','syntaxer.py',388),
  ('boolean_expression -> FALSE','boolean_expression',1,'p_boolean_expression','syntaxer.py',389),
  ('this_expression -> THIS','this_expression',1,'p_this_expression','syntaxer.py',396),
  ('null_expression -> NULL','null_expression',1,'p_null_expression','syntaxer.py',402),
]
