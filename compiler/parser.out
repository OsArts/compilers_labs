Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> goal
Rule 1     goal -> main_class class_declaration_list
Rule 2     class_declaration_list -> <empty>
Rule 3     class_declaration_list -> class_declaration class_declaration_list
Rule 4     main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE
Rule 5     class_declaration -> CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE
Rule 6     extends_list -> <empty>
Rule 7     extends_list -> EXTENDS IDENTIFIER
Rule 8     var_declaration_list -> <empty>
Rule 9     var_declaration_list -> var_declaration var_declaration_list
Rule 10    method_declaration_list -> <empty>
Rule 11    method_declaration_list -> method_declaration method_declaration_list
Rule 12    var_declaration -> type IDENTIFIER SEMICOLON
Rule 13    method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
Rule 14    params_list -> type IDENTIFIER
Rule 15    params_list -> type IDENTIFIER COMMA params_list
Rule 16    statement_list -> <empty>
Rule 17    statement_list -> statement statement_list
Rule 18    type -> int_array_type
Rule 19    type -> boolean_type
Rule 20    type -> int_type
Rule 21    type -> identifier_type
Rule 22    int_array_type -> INT LEFT_BRACKET RIGHT_BRACKET
Rule 23    boolean_type -> BOOLEAN
Rule 24    int_type -> INT
Rule 25    identifier_type -> IDENTIFIER
Rule 26    statement -> block_statement
Rule 27    statement -> if_statement
Rule 28    statement -> while_statement
Rule 29    statement -> print_statement
Rule 30    statement -> assignment_statement
Rule 31    statement -> array_element_assignment_statement
Rule 32    block_statement -> LEFT_BRACE statement_list RIGHT_BRACE
Rule 33    if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
Rule 34    while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
Rule 35    print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
Rule 36    assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON
Rule 37    array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON
Rule 38    expression -> operator_expression
Rule 39    expression -> array_element_expression
Rule 40    expression -> length_expression
Rule 41    expression -> call_expression
Rule 42    expression -> integer_literal_expression
Rule 43    expression -> true_expression
Rule 44    expression -> false_expression
Rule 45    expression -> identifier_expression
Rule 46    expression -> this_expression
Rule 47    expression -> new_array_expression
Rule 48    expression -> new_expression
Rule 49    expression -> not_expression
Rule 50    expression -> parenthesis_expression
Rule 51    operator_expression -> expression BINARY_OPERATOR expression
Rule 52    array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET
Rule 53    length_expression -> expression POINT LENGTH
Rule 54    call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
Rule 55    expression_list -> <empty>
Rule 56    expression_list -> expression COMMA expression_list
Rule 57    integer_literal_expression -> INTEGER_LITERAL
Rule 58    true_expression -> TRUE
Rule 59    false_expression -> FALSE
Rule 60    identifier_expression -> IDENTIFIER
Rule 61    this_expression -> THIS
Rule 62    new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET
Rule 63    new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
Rule 64    not_expression -> NOT expression
Rule 65    parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

Terminals, with rules where they appear

ASSIGNMENT           : 36 37
BINARY_OPERATOR      : 51
BOOLEAN              : 23
CLASS                : 4 5
COMMA                : 15 56
ELSE                 : 33
EXTENDS              : 7
FALSE                : 59
IDENTIFIER           : 4 4 5 7 12 13 14 15 25 36 37 54 60 63
IF                   : 33
INT                  : 22 24 62
INTEGER_LITERAL      : 57
LEFT_BRACE           : 4 4 5 13 32
LEFT_BRACKET         : 4 22 37 52 62
LEFT_PARENTHESIS     : 4 13 33 34 35 54 63 65
LENGTH               : 53
MAIN                 : 4
NEW                  : 62 63
NOT                  : 64
OUT                  : 35
POINT                : 35 35 53 54
PRINTLN              : 35
PUBLIC               : 4 13
RETURN               : 13
RIGHT_BRACE          : 4 5 13 32
RIGHT_BRACKET        : 4 22 37 52 62
RIGHT_PARENTHESIS    : 4 13 33 34 35 54 63 65
SEMICOLON            : 12 13 35 36 37
STATIC               : 4
STRING               : 4
SYSTEM               : 35
THIS                 : 61
TRUE                 : 58
VOID                 : 4
WHILE                : 34
error                : 

Nonterminals, with rules where they appear

array_element_assignment_statement : 31
array_element_expression : 39
assignment_statement : 30
block_statement      : 26
boolean_type         : 19
call_expression      : 41
class_declaration    : 3
class_declaration_list : 1 3
expression           : 13 33 34 35 36 37 37 51 51 52 52 53 54 56 62 64 65
expression_list      : 54 56
extends_list         : 5
false_expression     : 44
goal                 : 0
identifier_expression : 45
identifier_type      : 21
if_statement         : 27
int_array_type       : 18
int_type             : 20
integer_literal_expression : 42
length_expression    : 40
main_class           : 1
method_declaration   : 11
method_declaration_list : 5 11
new_array_expression : 47
new_expression       : 48
not_expression       : 49
operator_expression  : 38
params_list          : 13 15
parenthesis_expression : 50
print_statement      : 29
statement            : 4 17 33 33 34
statement_list       : 13 17 32
this_expression      : 46
true_expression      : 43
type                 : 12 13 14 15
var_declaration      : 9
var_declaration_list : 5 9 13
while_statement      : 28

Parsing method: LALR

state 0

    (0) S' -> . goal
    (1) goal -> . main_class class_declaration_list
    (4) main_class -> . CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    CLASS           shift and go to state 3

    main_class                     shift and go to state 2
    goal                           shift and go to state 1

state 1

    (0) S' -> goal .



state 2

    (1) goal -> main_class . class_declaration_list
    (2) class_declaration_list -> .
    (3) class_declaration_list -> . class_declaration class_declaration_list
    (5) class_declaration -> . CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE

    $end            reduce using rule 2 (class_declaration_list -> .)
    CLASS           shift and go to state 6

    class_declaration              shift and go to state 4
    class_declaration_list         shift and go to state 5

state 3

    (4) main_class -> CLASS . IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    IDENTIFIER      shift and go to state 7


state 4

    (3) class_declaration_list -> class_declaration . class_declaration_list
    (2) class_declaration_list -> .
    (3) class_declaration_list -> . class_declaration class_declaration_list
    (5) class_declaration -> . CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE

    $end            reduce using rule 2 (class_declaration_list -> .)
    CLASS           shift and go to state 6

    class_declaration              shift and go to state 4
    class_declaration_list         shift and go to state 8

state 5

    (1) goal -> main_class class_declaration_list .

    $end            reduce using rule 1 (goal -> main_class class_declaration_list .)


state 6

    (5) class_declaration -> CLASS . IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE

    IDENTIFIER      shift and go to state 9


state 7

    (4) main_class -> CLASS IDENTIFIER . LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 10


state 8

    (3) class_declaration_list -> class_declaration class_declaration_list .

    $end            reduce using rule 3 (class_declaration_list -> class_declaration class_declaration_list .)


state 9

    (5) class_declaration -> CLASS IDENTIFIER . extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE
    (6) extends_list -> .
    (7) extends_list -> . EXTENDS IDENTIFIER

    LEFT_BRACE      reduce using rule 6 (extends_list -> .)
    EXTENDS         shift and go to state 12

    extends_list                   shift and go to state 11

state 10

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE . PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    PUBLIC          shift and go to state 13


state 11

    (5) class_declaration -> CLASS IDENTIFIER extends_list . LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE

    LEFT_BRACE      shift and go to state 14


state 12

    (7) extends_list -> EXTENDS . IDENTIFIER

    IDENTIFIER      shift and go to state 15


state 13

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC . STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    STATIC          shift and go to state 16


state 14

    (5) class_declaration -> CLASS IDENTIFIER extends_list LEFT_BRACE . var_declaration_list method_declaration_list RIGHT_BRACE
    (8) var_declaration_list -> .
    (9) var_declaration_list -> . var_declaration var_declaration_list
    (12) var_declaration -> . type IDENTIFIER SEMICOLON
    (18) type -> . int_array_type
    (19) type -> . boolean_type
    (20) type -> . int_type
    (21) type -> . identifier_type
    (22) int_array_type -> . INT LEFT_BRACKET RIGHT_BRACKET
    (23) boolean_type -> . BOOLEAN
    (24) int_type -> . INT
    (25) identifier_type -> . IDENTIFIER

    PUBLIC          reduce using rule 8 (var_declaration_list -> .)
    RIGHT_BRACE     reduce using rule 8 (var_declaration_list -> .)
    INT             shift and go to state 19
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    int_array_type                 shift and go to state 17
    boolean_type                   shift and go to state 18
    identifier_type                shift and go to state 20
    var_declaration                shift and go to state 21
    int_type                       shift and go to state 23
    var_declaration_list           shift and go to state 24
    type                           shift and go to state 26

state 15

    (7) extends_list -> EXTENDS IDENTIFIER .

    LEFT_BRACE      reduce using rule 7 (extends_list -> EXTENDS IDENTIFIER .)


state 16

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC . VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    VOID            shift and go to state 27


state 17

    (18) type -> int_array_type .

    IDENTIFIER      reduce using rule 18 (type -> int_array_type .)


state 18

    (19) type -> boolean_type .

    IDENTIFIER      reduce using rule 19 (type -> boolean_type .)


state 19

    (22) int_array_type -> INT . LEFT_BRACKET RIGHT_BRACKET
    (24) int_type -> INT .

    LEFT_BRACKET    shift and go to state 28
    IDENTIFIER      reduce using rule 24 (int_type -> INT .)


state 20

    (21) type -> identifier_type .

    IDENTIFIER      reduce using rule 21 (type -> identifier_type .)


state 21

    (9) var_declaration_list -> var_declaration . var_declaration_list
    (8) var_declaration_list -> .
    (9) var_declaration_list -> . var_declaration var_declaration_list
    (12) var_declaration -> . type IDENTIFIER SEMICOLON
    (18) type -> . int_array_type
    (19) type -> . boolean_type
    (20) type -> . int_type
    (21) type -> . identifier_type
    (22) int_array_type -> . INT LEFT_BRACKET RIGHT_BRACKET
    (23) boolean_type -> . BOOLEAN
    (24) int_type -> . INT
    (25) identifier_type -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    PUBLIC          reduce using rule 8 (var_declaration_list -> .)
    RIGHT_BRACE     reduce using rule 8 (var_declaration_list -> .)
    LEFT_BRACE      reduce using rule 8 (var_declaration_list -> .)
    IF              reduce using rule 8 (var_declaration_list -> .)
    WHILE           reduce using rule 8 (var_declaration_list -> .)
    SYSTEM          reduce using rule 8 (var_declaration_list -> .)
    RETURN          reduce using rule 8 (var_declaration_list -> .)
    INT             shift and go to state 19
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

  ! IDENTIFIER      [ reduce using rule 8 (var_declaration_list -> .) ]

    int_array_type                 shift and go to state 17
    boolean_type                   shift and go to state 18
    identifier_type                shift and go to state 20
    var_declaration                shift and go to state 21
    int_type                       shift and go to state 23
    var_declaration_list           shift and go to state 29
    type                           shift and go to state 26

state 22

    (23) boolean_type -> BOOLEAN .

    IDENTIFIER      reduce using rule 23 (boolean_type -> BOOLEAN .)


state 23

    (20) type -> int_type .

    IDENTIFIER      reduce using rule 20 (type -> int_type .)


state 24

    (5) class_declaration -> CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list . method_declaration_list RIGHT_BRACE
    (10) method_declaration_list -> .
    (11) method_declaration_list -> . method_declaration method_declaration_list
    (13) method_declaration -> . PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    RIGHT_BRACE     reduce using rule 10 (method_declaration_list -> .)
    PUBLIC          shift and go to state 31

    method_declaration             shift and go to state 30
    method_declaration_list        shift and go to state 32

state 25

    (25) identifier_type -> IDENTIFIER .

    IDENTIFIER      reduce using rule 25 (identifier_type -> IDENTIFIER .)


state 26

    (12) var_declaration -> type . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 33


state 27

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID . MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    MAIN            shift and go to state 34


state 28

    (22) int_array_type -> INT LEFT_BRACKET . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 35


state 29

    (9) var_declaration_list -> var_declaration var_declaration_list .

    PUBLIC          reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)
    RIGHT_BRACE     reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)
    LEFT_BRACE      reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)
    IF              reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)
    WHILE           reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)
    SYSTEM          reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)
    IDENTIFIER      reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)
    RETURN          reduce using rule 9 (var_declaration_list -> var_declaration var_declaration_list .)


state 30

    (11) method_declaration_list -> method_declaration . method_declaration_list
    (10) method_declaration_list -> .
    (11) method_declaration_list -> . method_declaration method_declaration_list
    (13) method_declaration -> . PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    RIGHT_BRACE     reduce using rule 10 (method_declaration_list -> .)
    PUBLIC          shift and go to state 31

    method_declaration             shift and go to state 30
    method_declaration_list        shift and go to state 36

state 31

    (13) method_declaration -> PUBLIC . type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (18) type -> . int_array_type
    (19) type -> . boolean_type
    (20) type -> . int_type
    (21) type -> . identifier_type
    (22) int_array_type -> . INT LEFT_BRACKET RIGHT_BRACKET
    (23) boolean_type -> . BOOLEAN
    (24) int_type -> . INT
    (25) identifier_type -> . IDENTIFIER

    INT             shift and go to state 19
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    int_array_type                 shift and go to state 17
    boolean_type                   shift and go to state 18
    identifier_type                shift and go to state 20
    int_type                       shift and go to state 23
    type                           shift and go to state 37

state 32

    (5) class_declaration -> CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 38


state 33

    (12) var_declaration -> type IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 39


state 34

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN . LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    LEFT_PARENTHESIS shift and go to state 40


state 35

    (22) int_array_type -> INT LEFT_BRACKET RIGHT_BRACKET .

    IDENTIFIER      reduce using rule 22 (int_array_type -> INT LEFT_BRACKET RIGHT_BRACKET .)


state 36

    (11) method_declaration_list -> method_declaration method_declaration_list .

    RIGHT_BRACE     reduce using rule 11 (method_declaration_list -> method_declaration method_declaration_list .)


state 37

    (13) method_declaration -> PUBLIC type . IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    IDENTIFIER      shift and go to state 41


state 38

    (5) class_declaration -> CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE .

    CLASS           reduce using rule 5 (class_declaration -> CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE .)
    $end            reduce using rule 5 (class_declaration -> CLASS IDENTIFIER extends_list LEFT_BRACE var_declaration_list method_declaration_list RIGHT_BRACE .)


state 39

    (12) var_declaration -> type IDENTIFIER SEMICOLON .

    INT             reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    PUBLIC          reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    RIGHT_BRACE     reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    LEFT_BRACE      reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    IF              reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    SYSTEM          reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 12 (var_declaration -> type IDENTIFIER SEMICOLON .)


state 40

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS . STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    STRING          shift and go to state 42


state 41

    (13) method_declaration -> PUBLIC type IDENTIFIER . LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    LEFT_PARENTHESIS shift and go to state 43


state 42

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING . LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    LEFT_BRACKET    shift and go to state 44


state 43

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS . params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (14) params_list -> . type IDENTIFIER
    (15) params_list -> . type IDENTIFIER COMMA params_list
    (18) type -> . int_array_type
    (19) type -> . boolean_type
    (20) type -> . int_type
    (21) type -> . identifier_type
    (22) int_array_type -> . INT LEFT_BRACKET RIGHT_BRACKET
    (23) boolean_type -> . BOOLEAN
    (24) int_type -> . INT
    (25) identifier_type -> . IDENTIFIER

    INT             shift and go to state 19
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    int_array_type                 shift and go to state 17
    boolean_type                   shift and go to state 18
    identifier_type                shift and go to state 20
    int_type                       shift and go to state 23
    params_list                    shift and go to state 46
    type                           shift and go to state 45

state 44

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET . RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    RIGHT_BRACKET   shift and go to state 47


state 45

    (14) params_list -> type . IDENTIFIER
    (15) params_list -> type . IDENTIFIER COMMA params_list

    IDENTIFIER      shift and go to state 48


state 46

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list . RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    RIGHT_PARENTHESIS shift and go to state 49


state 47

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET . IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    IDENTIFIER      shift and go to state 50


state 48

    (14) params_list -> type IDENTIFIER .
    (15) params_list -> type IDENTIFIER . COMMA params_list

    RIGHT_PARENTHESIS reduce using rule 14 (params_list -> type IDENTIFIER .)
    COMMA           shift and go to state 51


state 49

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS . LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    LEFT_BRACE      shift and go to state 52


state 50

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER . RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE

    RIGHT_PARENTHESIS shift and go to state 53


state 51

    (15) params_list -> type IDENTIFIER COMMA . params_list
    (14) params_list -> . type IDENTIFIER
    (15) params_list -> . type IDENTIFIER COMMA params_list
    (18) type -> . int_array_type
    (19) type -> . boolean_type
    (20) type -> . int_type
    (21) type -> . identifier_type
    (22) int_array_type -> . INT LEFT_BRACKET RIGHT_BRACKET
    (23) boolean_type -> . BOOLEAN
    (24) int_type -> . INT
    (25) identifier_type -> . IDENTIFIER

    INT             shift and go to state 19
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

    int_array_type                 shift and go to state 17
    boolean_type                   shift and go to state 18
    identifier_type                shift and go to state 20
    int_type                       shift and go to state 23
    params_list                    shift and go to state 54
    type                           shift and go to state 45

state 52

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE . var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (8) var_declaration_list -> .
    (9) var_declaration_list -> . var_declaration var_declaration_list
    (12) var_declaration -> . type IDENTIFIER SEMICOLON
    (18) type -> . int_array_type
    (19) type -> . boolean_type
    (20) type -> . int_type
    (21) type -> . identifier_type
    (22) int_array_type -> . INT LEFT_BRACKET RIGHT_BRACKET
    (23) boolean_type -> . BOOLEAN
    (24) int_type -> . INT
    (25) identifier_type -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LEFT_BRACE      reduce using rule 8 (var_declaration_list -> .)
    IF              reduce using rule 8 (var_declaration_list -> .)
    WHILE           reduce using rule 8 (var_declaration_list -> .)
    SYSTEM          reduce using rule 8 (var_declaration_list -> .)
    RETURN          reduce using rule 8 (var_declaration_list -> .)
    INT             shift and go to state 19
    BOOLEAN         shift and go to state 22
    IDENTIFIER      shift and go to state 25

  ! IDENTIFIER      [ reduce using rule 8 (var_declaration_list -> .) ]

    int_array_type                 shift and go to state 17
    boolean_type                   shift and go to state 18
    identifier_type                shift and go to state 20
    var_declaration                shift and go to state 21
    int_type                       shift and go to state 23
    var_declaration_list           shift and go to state 55
    type                           shift and go to state 26

state 53

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS . LEFT_BRACE statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 56


state 54

    (15) params_list -> type IDENTIFIER COMMA params_list .

    RIGHT_PARENTHESIS reduce using rule 15 (params_list -> type IDENTIFIER COMMA params_list .)


state 55

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list . statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (16) statement_list -> .
    (17) statement_list -> . statement statement_list
    (26) statement -> . block_statement
    (27) statement -> . if_statement
    (28) statement -> . while_statement
    (29) statement -> . print_statement
    (30) statement -> . assignment_statement
    (31) statement -> . array_element_assignment_statement
    (32) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (33) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (34) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (35) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (36) assignment_statement -> . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> . IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    RETURN          reduce using rule 16 (statement_list -> .)
    LEFT_BRACE      shift and go to state 69
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    SYSTEM          shift and go to state 67
    IDENTIFIER      shift and go to state 66

    assignment_statement           shift and go to state 60
    block_statement                shift and go to state 61
    print_statement                shift and go to state 59
    while_statement                shift and go to state 62
    array_element_assignment_statement shift and go to state 58
    statement                      shift and go to state 63
    statement_list                 shift and go to state 68
    if_statement                   shift and go to state 64

state 56

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE . statement RIGHT_BRACE
    (26) statement -> . block_statement
    (27) statement -> . if_statement
    (28) statement -> . while_statement
    (29) statement -> . print_statement
    (30) statement -> . assignment_statement
    (31) statement -> . array_element_assignment_statement
    (32) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (33) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (34) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (35) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (36) assignment_statement -> . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> . IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    LEFT_BRACE      shift and go to state 69
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    SYSTEM          shift and go to state 67
    IDENTIFIER      shift and go to state 66

    assignment_statement           shift and go to state 60
    block_statement                shift and go to state 61
    while_statement                shift and go to state 62
    array_element_assignment_statement shift and go to state 58
    statement                      shift and go to state 70
    print_statement                shift and go to state 59
    if_statement                   shift and go to state 64

state 57

    (34) while_statement -> WHILE . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS shift and go to state 71


state 58

    (31) statement -> array_element_assignment_statement .

    ELSE            reduce using rule 31 (statement -> array_element_assignment_statement .)
    LEFT_BRACE      reduce using rule 31 (statement -> array_element_assignment_statement .)
    IF              reduce using rule 31 (statement -> array_element_assignment_statement .)
    WHILE           reduce using rule 31 (statement -> array_element_assignment_statement .)
    SYSTEM          reduce using rule 31 (statement -> array_element_assignment_statement .)
    IDENTIFIER      reduce using rule 31 (statement -> array_element_assignment_statement .)
    RETURN          reduce using rule 31 (statement -> array_element_assignment_statement .)
    RIGHT_BRACE     reduce using rule 31 (statement -> array_element_assignment_statement .)


state 59

    (29) statement -> print_statement .

    ELSE            reduce using rule 29 (statement -> print_statement .)
    LEFT_BRACE      reduce using rule 29 (statement -> print_statement .)
    IF              reduce using rule 29 (statement -> print_statement .)
    WHILE           reduce using rule 29 (statement -> print_statement .)
    SYSTEM          reduce using rule 29 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 29 (statement -> print_statement .)
    RETURN          reduce using rule 29 (statement -> print_statement .)
    RIGHT_BRACE     reduce using rule 29 (statement -> print_statement .)


state 60

    (30) statement -> assignment_statement .

    ELSE            reduce using rule 30 (statement -> assignment_statement .)
    LEFT_BRACE      reduce using rule 30 (statement -> assignment_statement .)
    IF              reduce using rule 30 (statement -> assignment_statement .)
    WHILE           reduce using rule 30 (statement -> assignment_statement .)
    SYSTEM          reduce using rule 30 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 30 (statement -> assignment_statement .)
    RETURN          reduce using rule 30 (statement -> assignment_statement .)
    RIGHT_BRACE     reduce using rule 30 (statement -> assignment_statement .)


state 61

    (26) statement -> block_statement .

    ELSE            reduce using rule 26 (statement -> block_statement .)
    LEFT_BRACE      reduce using rule 26 (statement -> block_statement .)
    IF              reduce using rule 26 (statement -> block_statement .)
    WHILE           reduce using rule 26 (statement -> block_statement .)
    SYSTEM          reduce using rule 26 (statement -> block_statement .)
    IDENTIFIER      reduce using rule 26 (statement -> block_statement .)
    RETURN          reduce using rule 26 (statement -> block_statement .)
    RIGHT_BRACE     reduce using rule 26 (statement -> block_statement .)


state 62

    (28) statement -> while_statement .

    ELSE            reduce using rule 28 (statement -> while_statement .)
    LEFT_BRACE      reduce using rule 28 (statement -> while_statement .)
    IF              reduce using rule 28 (statement -> while_statement .)
    WHILE           reduce using rule 28 (statement -> while_statement .)
    SYSTEM          reduce using rule 28 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 28 (statement -> while_statement .)
    RETURN          reduce using rule 28 (statement -> while_statement .)
    RIGHT_BRACE     reduce using rule 28 (statement -> while_statement .)


state 63

    (17) statement_list -> statement . statement_list
    (16) statement_list -> .
    (17) statement_list -> . statement statement_list
    (26) statement -> . block_statement
    (27) statement -> . if_statement
    (28) statement -> . while_statement
    (29) statement -> . print_statement
    (30) statement -> . assignment_statement
    (31) statement -> . array_element_assignment_statement
    (32) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (33) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (34) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (35) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (36) assignment_statement -> . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> . IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    RETURN          reduce using rule 16 (statement_list -> .)
    RIGHT_BRACE     reduce using rule 16 (statement_list -> .)
    LEFT_BRACE      shift and go to state 69
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    SYSTEM          shift and go to state 67
    IDENTIFIER      shift and go to state 66

    assignment_statement           shift and go to state 60
    block_statement                shift and go to state 61
    print_statement                shift and go to state 59
    while_statement                shift and go to state 62
    array_element_assignment_statement shift and go to state 58
    statement                      shift and go to state 63
    statement_list                 shift and go to state 72
    if_statement                   shift and go to state 64

state 64

    (27) statement -> if_statement .

    ELSE            reduce using rule 27 (statement -> if_statement .)
    LEFT_BRACE      reduce using rule 27 (statement -> if_statement .)
    IF              reduce using rule 27 (statement -> if_statement .)
    WHILE           reduce using rule 27 (statement -> if_statement .)
    SYSTEM          reduce using rule 27 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 27 (statement -> if_statement .)
    RETURN          reduce using rule 27 (statement -> if_statement .)
    RIGHT_BRACE     reduce using rule 27 (statement -> if_statement .)


state 65

    (33) if_statement -> IF . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement

    LEFT_PARENTHESIS shift and go to state 73


state 66

    (36) assignment_statement -> IDENTIFIER . ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> IDENTIFIER . LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    ASSIGNMENT      shift and go to state 74
    LEFT_BRACKET    shift and go to state 75


state 67

    (35) print_statement -> SYSTEM . POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    POINT           shift and go to state 76


state 68

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list . RETURN expression SEMICOLON RIGHT_BRACE

    RETURN          shift and go to state 77


state 69

    (32) block_statement -> LEFT_BRACE . statement_list RIGHT_BRACE
    (16) statement_list -> .
    (17) statement_list -> . statement statement_list
    (26) statement -> . block_statement
    (27) statement -> . if_statement
    (28) statement -> . while_statement
    (29) statement -> . print_statement
    (30) statement -> . assignment_statement
    (31) statement -> . array_element_assignment_statement
    (32) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (33) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (34) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (35) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (36) assignment_statement -> . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> . IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    RIGHT_BRACE     reduce using rule 16 (statement_list -> .)
    LEFT_BRACE      shift and go to state 69
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    SYSTEM          shift and go to state 67
    IDENTIFIER      shift and go to state 66

    assignment_statement           shift and go to state 60
    block_statement                shift and go to state 61
    print_statement                shift and go to state 59
    while_statement                shift and go to state 62
    array_element_assignment_statement shift and go to state 58
    statement                      shift and go to state 63
    statement_list                 shift and go to state 78
    if_statement                   shift and go to state 64

state 70

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 79


state 71

    (34) while_statement -> WHILE LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS statement
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    true_expression                shift and go to state 84
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    new_expression                 shift and go to state 86
    expression                     shift and go to state 100
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 72

    (17) statement_list -> statement statement_list .

    RETURN          reduce using rule 17 (statement_list -> statement statement_list .)
    RIGHT_BRACE     reduce using rule 17 (statement_list -> statement statement_list .)


state 73

    (33) if_statement -> IF LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS statement ELSE statement
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    true_expression                shift and go to state 84
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    new_expression                 shift and go to state 86
    expression                     shift and go to state 102
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 74

    (36) assignment_statement -> IDENTIFIER ASSIGNMENT . expression SEMICOLON
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 103
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 75

    (37) array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET . expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 104
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 76

    (35) print_statement -> SYSTEM POINT . OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    OUT             shift and go to state 105


state 77

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN . expression SEMICOLON RIGHT_BRACE
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    expression                     shift and go to state 106
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 78

    (32) block_statement -> LEFT_BRACE statement_list . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 107


state 79

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE .

    CLASS           reduce using rule 4 (main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE .)
    $end            reduce using rule 4 (main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE statement RIGHT_BRACE .)


state 80

    (38) expression -> operator_expression .

    SEMICOLON       reduce using rule 38 (expression -> operator_expression .)
    BINARY_OPERATOR reduce using rule 38 (expression -> operator_expression .)
    LEFT_BRACKET    reduce using rule 38 (expression -> operator_expression .)
    POINT           reduce using rule 38 (expression -> operator_expression .)
    RIGHT_PARENTHESIS reduce using rule 38 (expression -> operator_expression .)
    RIGHT_BRACKET   reduce using rule 38 (expression -> operator_expression .)
    COMMA           reduce using rule 38 (expression -> operator_expression .)


state 81

    (40) expression -> length_expression .

    SEMICOLON       reduce using rule 40 (expression -> length_expression .)
    BINARY_OPERATOR reduce using rule 40 (expression -> length_expression .)
    LEFT_BRACKET    reduce using rule 40 (expression -> length_expression .)
    POINT           reduce using rule 40 (expression -> length_expression .)
    RIGHT_PARENTHESIS reduce using rule 40 (expression -> length_expression .)
    RIGHT_BRACKET   reduce using rule 40 (expression -> length_expression .)
    COMMA           reduce using rule 40 (expression -> length_expression .)


state 82

    (45) expression -> identifier_expression .

    SEMICOLON       reduce using rule 45 (expression -> identifier_expression .)
    BINARY_OPERATOR reduce using rule 45 (expression -> identifier_expression .)
    LEFT_BRACKET    reduce using rule 45 (expression -> identifier_expression .)
    POINT           reduce using rule 45 (expression -> identifier_expression .)
    RIGHT_PARENTHESIS reduce using rule 45 (expression -> identifier_expression .)
    RIGHT_BRACKET   reduce using rule 45 (expression -> identifier_expression .)
    COMMA           reduce using rule 45 (expression -> identifier_expression .)


state 83

    (42) expression -> integer_literal_expression .

    SEMICOLON       reduce using rule 42 (expression -> integer_literal_expression .)
    BINARY_OPERATOR reduce using rule 42 (expression -> integer_literal_expression .)
    LEFT_BRACKET    reduce using rule 42 (expression -> integer_literal_expression .)
    POINT           reduce using rule 42 (expression -> integer_literal_expression .)
    RIGHT_PARENTHESIS reduce using rule 42 (expression -> integer_literal_expression .)
    RIGHT_BRACKET   reduce using rule 42 (expression -> integer_literal_expression .)
    COMMA           reduce using rule 42 (expression -> integer_literal_expression .)


state 84

    (43) expression -> true_expression .

    SEMICOLON       reduce using rule 43 (expression -> true_expression .)
    BINARY_OPERATOR reduce using rule 43 (expression -> true_expression .)
    LEFT_BRACKET    reduce using rule 43 (expression -> true_expression .)
    POINT           reduce using rule 43 (expression -> true_expression .)
    RIGHT_PARENTHESIS reduce using rule 43 (expression -> true_expression .)
    RIGHT_BRACKET   reduce using rule 43 (expression -> true_expression .)
    COMMA           reduce using rule 43 (expression -> true_expression .)


state 85

    (62) new_array_expression -> NEW . INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> NEW . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS

    INT             shift and go to state 108
    IDENTIFIER      shift and go to state 109


state 86

    (48) expression -> new_expression .

    SEMICOLON       reduce using rule 48 (expression -> new_expression .)
    BINARY_OPERATOR reduce using rule 48 (expression -> new_expression .)
    LEFT_BRACKET    reduce using rule 48 (expression -> new_expression .)
    POINT           reduce using rule 48 (expression -> new_expression .)
    RIGHT_PARENTHESIS reduce using rule 48 (expression -> new_expression .)
    RIGHT_BRACKET   reduce using rule 48 (expression -> new_expression .)
    COMMA           reduce using rule 48 (expression -> new_expression .)


state 87

    (58) true_expression -> TRUE .

    BINARY_OPERATOR reduce using rule 58 (true_expression -> TRUE .)
    LEFT_BRACKET    reduce using rule 58 (true_expression -> TRUE .)
    POINT           reduce using rule 58 (true_expression -> TRUE .)
    RIGHT_PARENTHESIS reduce using rule 58 (true_expression -> TRUE .)
    SEMICOLON       reduce using rule 58 (true_expression -> TRUE .)
    RIGHT_BRACKET   reduce using rule 58 (true_expression -> TRUE .)
    COMMA           reduce using rule 58 (true_expression -> TRUE .)


state 88

    (50) expression -> parenthesis_expression .

    SEMICOLON       reduce using rule 50 (expression -> parenthesis_expression .)
    BINARY_OPERATOR reduce using rule 50 (expression -> parenthesis_expression .)
    LEFT_BRACKET    reduce using rule 50 (expression -> parenthesis_expression .)
    POINT           reduce using rule 50 (expression -> parenthesis_expression .)
    RIGHT_PARENTHESIS reduce using rule 50 (expression -> parenthesis_expression .)
    RIGHT_BRACKET   reduce using rule 50 (expression -> parenthesis_expression .)
    COMMA           reduce using rule 50 (expression -> parenthesis_expression .)


state 89

    (39) expression -> array_element_expression .

    SEMICOLON       reduce using rule 39 (expression -> array_element_expression .)
    BINARY_OPERATOR reduce using rule 39 (expression -> array_element_expression .)
    LEFT_BRACKET    reduce using rule 39 (expression -> array_element_expression .)
    POINT           reduce using rule 39 (expression -> array_element_expression .)
    RIGHT_PARENTHESIS reduce using rule 39 (expression -> array_element_expression .)
    RIGHT_BRACKET   reduce using rule 39 (expression -> array_element_expression .)
    COMMA           reduce using rule 39 (expression -> array_element_expression .)


state 90

    (60) identifier_expression -> IDENTIFIER .

    COMMA           reduce using rule 60 (identifier_expression -> IDENTIFIER .)
    BINARY_OPERATOR reduce using rule 60 (identifier_expression -> IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 60 (identifier_expression -> IDENTIFIER .)
    POINT           reduce using rule 60 (identifier_expression -> IDENTIFIER .)
    RIGHT_PARENTHESIS reduce using rule 60 (identifier_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 60 (identifier_expression -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 60 (identifier_expression -> IDENTIFIER .)


state 91

    (47) expression -> new_array_expression .

    SEMICOLON       reduce using rule 47 (expression -> new_array_expression .)
    BINARY_OPERATOR reduce using rule 47 (expression -> new_array_expression .)
    LEFT_BRACKET    reduce using rule 47 (expression -> new_array_expression .)
    POINT           reduce using rule 47 (expression -> new_array_expression .)
    RIGHT_PARENTHESIS reduce using rule 47 (expression -> new_array_expression .)
    RIGHT_BRACKET   reduce using rule 47 (expression -> new_array_expression .)
    COMMA           reduce using rule 47 (expression -> new_array_expression .)


state 92

    (65) parenthesis_expression -> LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 110
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 93

    (46) expression -> this_expression .

    SEMICOLON       reduce using rule 46 (expression -> this_expression .)
    BINARY_OPERATOR reduce using rule 46 (expression -> this_expression .)
    LEFT_BRACKET    reduce using rule 46 (expression -> this_expression .)
    POINT           reduce using rule 46 (expression -> this_expression .)
    RIGHT_PARENTHESIS reduce using rule 46 (expression -> this_expression .)
    RIGHT_BRACKET   reduce using rule 46 (expression -> this_expression .)
    COMMA           reduce using rule 46 (expression -> this_expression .)


state 94

    (44) expression -> false_expression .

    SEMICOLON       reduce using rule 44 (expression -> false_expression .)
    BINARY_OPERATOR reduce using rule 44 (expression -> false_expression .)
    LEFT_BRACKET    reduce using rule 44 (expression -> false_expression .)
    POINT           reduce using rule 44 (expression -> false_expression .)
    RIGHT_PARENTHESIS reduce using rule 44 (expression -> false_expression .)
    RIGHT_BRACKET   reduce using rule 44 (expression -> false_expression .)
    COMMA           reduce using rule 44 (expression -> false_expression .)


state 95

    (57) integer_literal_expression -> INTEGER_LITERAL .

    RIGHT_BRACKET   reduce using rule 57 (integer_literal_expression -> INTEGER_LITERAL .)
    BINARY_OPERATOR reduce using rule 57 (integer_literal_expression -> INTEGER_LITERAL .)
    LEFT_BRACKET    reduce using rule 57 (integer_literal_expression -> INTEGER_LITERAL .)
    POINT           reduce using rule 57 (integer_literal_expression -> INTEGER_LITERAL .)
    COMMA           reduce using rule 57 (integer_literal_expression -> INTEGER_LITERAL .)
    RIGHT_PARENTHESIS reduce using rule 57 (integer_literal_expression -> INTEGER_LITERAL .)
    SEMICOLON       reduce using rule 57 (integer_literal_expression -> INTEGER_LITERAL .)


state 96

    (59) false_expression -> FALSE .

    SEMICOLON       reduce using rule 59 (false_expression -> FALSE .)
    BINARY_OPERATOR reduce using rule 59 (false_expression -> FALSE .)
    LEFT_BRACKET    reduce using rule 59 (false_expression -> FALSE .)
    POINT           reduce using rule 59 (false_expression -> FALSE .)
    RIGHT_BRACKET   reduce using rule 59 (false_expression -> FALSE .)
    RIGHT_PARENTHESIS reduce using rule 59 (false_expression -> FALSE .)
    COMMA           reduce using rule 59 (false_expression -> FALSE .)


state 97

    (49) expression -> not_expression .

    SEMICOLON       reduce using rule 49 (expression -> not_expression .)
    BINARY_OPERATOR reduce using rule 49 (expression -> not_expression .)
    LEFT_BRACKET    reduce using rule 49 (expression -> not_expression .)
    POINT           reduce using rule 49 (expression -> not_expression .)
    RIGHT_PARENTHESIS reduce using rule 49 (expression -> not_expression .)
    RIGHT_BRACKET   reduce using rule 49 (expression -> not_expression .)
    COMMA           reduce using rule 49 (expression -> not_expression .)


state 98

    (61) this_expression -> THIS .

    SEMICOLON       reduce using rule 61 (this_expression -> THIS .)
    BINARY_OPERATOR reduce using rule 61 (this_expression -> THIS .)
    LEFT_BRACKET    reduce using rule 61 (this_expression -> THIS .)
    POINT           reduce using rule 61 (this_expression -> THIS .)
    RIGHT_PARENTHESIS reduce using rule 61 (this_expression -> THIS .)
    RIGHT_BRACKET   reduce using rule 61 (this_expression -> THIS .)
    COMMA           reduce using rule 61 (this_expression -> THIS .)


state 99

    (64) not_expression -> NOT . expression
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 111
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 100

    (34) while_statement -> WHILE LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS statement
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 114
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 101

    (41) expression -> call_expression .

    SEMICOLON       reduce using rule 41 (expression -> call_expression .)
    BINARY_OPERATOR reduce using rule 41 (expression -> call_expression .)
    LEFT_BRACKET    reduce using rule 41 (expression -> call_expression .)
    POINT           reduce using rule 41 (expression -> call_expression .)
    RIGHT_PARENTHESIS reduce using rule 41 (expression -> call_expression .)
    RIGHT_BRACKET   reduce using rule 41 (expression -> call_expression .)
    COMMA           reduce using rule 41 (expression -> call_expression .)


state 102

    (33) if_statement -> IF LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS statement ELSE statement
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 116
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 103

    (36) assignment_statement -> IDENTIFIER ASSIGNMENT expression . SEMICOLON
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    SEMICOLON       shift and go to state 117
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 104

    (37) array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression . RIGHT_BRACKET ASSIGNMENT expression SEMICOLON
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    RIGHT_BRACKET   shift and go to state 118
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 105

    (35) print_statement -> SYSTEM POINT OUT . POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    POINT           shift and go to state 119


state 106

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression . SEMICOLON RIGHT_BRACE
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    SEMICOLON       shift and go to state 120
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 107

    (32) block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .

    LEFT_BRACE      reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    IF              reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    WHILE           reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    SYSTEM          reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    IDENTIFIER      reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    RETURN          reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    ELSE            reduce using rule 32 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)


state 108

    (62) new_array_expression -> NEW INT . LEFT_BRACKET expression RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 121


state 109

    (63) new_expression -> NEW IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 122


state 110

    (65) parenthesis_expression -> LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 123
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 111

    (64) not_expression -> NOT expression .
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

  ! shift/reduce conflict for BINARY_OPERATOR resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RIGHT_BRACKET   reduce using rule 64 (not_expression -> NOT expression .)
    RIGHT_PARENTHESIS reduce using rule 64 (not_expression -> NOT expression .)
    COMMA           reduce using rule 64 (not_expression -> NOT expression .)
    SEMICOLON       reduce using rule 64 (not_expression -> NOT expression .)
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112

  ! BINARY_OPERATOR [ reduce using rule 64 (not_expression -> NOT expression .) ]
  ! LEFT_BRACKET    [ reduce using rule 64 (not_expression -> NOT expression .) ]
  ! POINT           [ reduce using rule 64 (not_expression -> NOT expression .) ]


state 112

    (53) length_expression -> expression POINT . LENGTH
    (54) call_expression -> expression POINT . IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    LENGTH          shift and go to state 124
    IDENTIFIER      shift and go to state 125


state 113

    (51) operator_expression -> expression BINARY_OPERATOR . expression
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 126
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 114

    (34) while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . statement
    (26) statement -> . block_statement
    (27) statement -> . if_statement
    (28) statement -> . while_statement
    (29) statement -> . print_statement
    (30) statement -> . assignment_statement
    (31) statement -> . array_element_assignment_statement
    (32) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (33) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (34) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (35) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (36) assignment_statement -> . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> . IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    LEFT_BRACE      shift and go to state 69
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    SYSTEM          shift and go to state 67
    IDENTIFIER      shift and go to state 66

    assignment_statement           shift and go to state 60
    block_statement                shift and go to state 61
    while_statement                shift and go to state 62
    array_element_assignment_statement shift and go to state 58
    statement                      shift and go to state 127
    print_statement                shift and go to state 59
    if_statement                   shift and go to state 64

state 115

    (52) array_element_expression -> expression LEFT_BRACKET . expression RIGHT_BRACKET
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 128
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 116

    (33) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . statement ELSE statement
    (26) statement -> . block_statement
    (27) statement -> . if_statement
    (28) statement -> . while_statement
    (29) statement -> . print_statement
    (30) statement -> . assignment_statement
    (31) statement -> . array_element_assignment_statement
    (32) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (33) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (34) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (35) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (36) assignment_statement -> . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> . IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    LEFT_BRACE      shift and go to state 69
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    SYSTEM          shift and go to state 67
    IDENTIFIER      shift and go to state 66

    assignment_statement           shift and go to state 60
    block_statement                shift and go to state 61
    while_statement                shift and go to state 62
    array_element_assignment_statement shift and go to state 58
    statement                      shift and go to state 129
    print_statement                shift and go to state 59
    if_statement                   shift and go to state 64

state 117

    (36) assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .

    LEFT_BRACE      reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    IF              reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    WHILE           reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    SYSTEM          reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    IDENTIFIER      reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    RETURN          reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    ELSE            reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    RIGHT_BRACE     reduce using rule 36 (assignment_statement -> IDENTIFIER ASSIGNMENT expression SEMICOLON .)


state 118

    (37) array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET . ASSIGNMENT expression SEMICOLON

    ASSIGNMENT      shift and go to state 130


state 119

    (35) print_statement -> SYSTEM POINT OUT POINT . PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    PRINTLN         shift and go to state 131


state 120

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 132


state 121

    (62) new_array_expression -> NEW INT LEFT_BRACKET . expression RIGHT_BRACKET
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 133
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 122

    (63) new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 134


state 123

    (65) parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 65 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    BINARY_OPERATOR reduce using rule 65 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 65 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    POINT           reduce using rule 65 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 65 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 65 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 65 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)


state 124

    (53) length_expression -> expression POINT LENGTH .

    RIGHT_BRACKET   reduce using rule 53 (length_expression -> expression POINT LENGTH .)
    BINARY_OPERATOR reduce using rule 53 (length_expression -> expression POINT LENGTH .)
    LEFT_BRACKET    reduce using rule 53 (length_expression -> expression POINT LENGTH .)
    POINT           reduce using rule 53 (length_expression -> expression POINT LENGTH .)
    COMMA           reduce using rule 53 (length_expression -> expression POINT LENGTH .)
    RIGHT_PARENTHESIS reduce using rule 53 (length_expression -> expression POINT LENGTH .)
    SEMICOLON       reduce using rule 53 (length_expression -> expression POINT LENGTH .)


state 125

    (54) call_expression -> expression POINT IDENTIFIER . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 135


state 126

    (51) operator_expression -> expression BINARY_OPERATOR expression .
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

  ! shift/reduce conflict for BINARY_OPERATOR resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    SEMICOLON       reduce using rule 51 (operator_expression -> expression BINARY_OPERATOR expression .)
    RIGHT_BRACKET   reduce using rule 51 (operator_expression -> expression BINARY_OPERATOR expression .)
    RIGHT_PARENTHESIS reduce using rule 51 (operator_expression -> expression BINARY_OPERATOR expression .)
    COMMA           reduce using rule 51 (operator_expression -> expression BINARY_OPERATOR expression .)
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112

  ! BINARY_OPERATOR [ reduce using rule 51 (operator_expression -> expression BINARY_OPERATOR expression .) ]
  ! LEFT_BRACKET    [ reduce using rule 51 (operator_expression -> expression BINARY_OPERATOR expression .) ]
  ! POINT           [ reduce using rule 51 (operator_expression -> expression BINARY_OPERATOR expression .) ]


state 127

    (34) while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .

    LEFT_BRACE      reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    IF              reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    WHILE           reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    SYSTEM          reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    IDENTIFIER      reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    RETURN          reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    RIGHT_BRACE     reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    ELSE            reduce using rule 34 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)


state 128

    (52) array_element_expression -> expression LEFT_BRACKET expression . RIGHT_BRACKET
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    RIGHT_BRACKET   shift and go to state 136
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 129

    (33) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement . ELSE statement

    ELSE            shift and go to state 137


state 130

    (37) array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT . expression SEMICOLON
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 138
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 131

    (35) print_statement -> SYSTEM POINT OUT POINT PRINTLN . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 139


state 132

    (13) method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE .

    PUBLIC          reduce using rule 13 (method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 13 (method_declaration -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_declaration_list statement_list RETURN expression SEMICOLON RIGHT_BRACE .)


state 133

    (62) new_array_expression -> NEW INT LEFT_BRACKET expression . RIGHT_BRACKET
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    RIGHT_BRACKET   shift and go to state 140
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 134

    (63) new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 63 (new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    BINARY_OPERATOR reduce using rule 63 (new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 63 (new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    POINT           reduce using rule 63 (new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 63 (new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 63 (new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 63 (new_expression -> NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .)


state 135

    (54) call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS . expression_list RIGHT_PARENTHESIS
    (55) expression_list -> .
    (56) expression_list -> . expression COMMA expression_list
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS reduce using rule 55 (expression_list -> .)
    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    expression_list                shift and go to state 141
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 142
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 136

    (52) array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .

    BINARY_OPERATOR reduce using rule 52 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 52 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    POINT           reduce using rule 52 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 52 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 52 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 52 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    COMMA           reduce using rule 52 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)


state 137

    (33) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE . statement
    (26) statement -> . block_statement
    (27) statement -> . if_statement
    (28) statement -> . while_statement
    (29) statement -> . print_statement
    (30) statement -> . assignment_statement
    (31) statement -> . array_element_assignment_statement
    (32) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (33) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (34) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (35) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (36) assignment_statement -> . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (37) array_element_assignment_statement -> . IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON

    LEFT_BRACE      shift and go to state 69
    IF              shift and go to state 65
    WHILE           shift and go to state 57
    SYSTEM          shift and go to state 67
    IDENTIFIER      shift and go to state 66

    assignment_statement           shift and go to state 60
    block_statement                shift and go to state 61
    while_statement                shift and go to state 62
    array_element_assignment_statement shift and go to state 58
    statement                      shift and go to state 143
    print_statement                shift and go to state 59
    if_statement                   shift and go to state 64

state 138

    (37) array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression . SEMICOLON
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    SEMICOLON       shift and go to state 144
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 139

    (35) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS SEMICOLON
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 145
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 140

    (62) new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .

    SEMICOLON       reduce using rule 62 (new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .)
    BINARY_OPERATOR reduce using rule 62 (new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 62 (new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .)
    POINT           reduce using rule 62 (new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 62 (new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .)
    COMMA           reduce using rule 62 (new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 62 (new_array_expression -> NEW INT LEFT_BRACKET expression RIGHT_BRACKET .)


state 141

    (54) call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 146


state 142

    (56) expression_list -> expression . COMMA expression_list
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    COMMA           shift and go to state 147
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 143

    (33) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .

    LEFT_BRACE      reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    IF              reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    WHILE           reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    SYSTEM          reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    IDENTIFIER      reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    RETURN          reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    RIGHT_BRACE     reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    ELSE            reduce using rule 33 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)


state 144

    (37) array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .

    LEFT_BRACE      reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)
    IF              reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)
    WHILE           reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)
    SYSTEM          reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)
    IDENTIFIER      reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)
    RETURN          reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)
    RIGHT_BRACE     reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)
    ELSE            reduce using rule 37 (array_element_assignment_statement -> IDENTIFIER LEFT_BRACKET expression RIGHT_BRACKET ASSIGNMENT expression SEMICOLON .)


state 145

    (35) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS SEMICOLON
    (51) operator_expression -> expression . BINARY_OPERATOR expression
    (52) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> expression . POINT LENGTH
    (54) call_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 148
    BINARY_OPERATOR shift and go to state 113
    LEFT_BRACKET    shift and go to state 115
    POINT           shift and go to state 112


state 146

    (54) call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .

    COMMA           reduce using rule 54 (call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    BINARY_OPERATOR reduce using rule 54 (call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 54 (call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    POINT           reduce using rule 54 (call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 54 (call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 54 (call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 54 (call_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)


state 147

    (56) expression_list -> expression COMMA . expression_list
    (55) expression_list -> .
    (56) expression_list -> . expression COMMA expression_list
    (38) expression -> . operator_expression
    (39) expression -> . array_element_expression
    (40) expression -> . length_expression
    (41) expression -> . call_expression
    (42) expression -> . integer_literal_expression
    (43) expression -> . true_expression
    (44) expression -> . false_expression
    (45) expression -> . identifier_expression
    (46) expression -> . this_expression
    (47) expression -> . new_array_expression
    (48) expression -> . new_expression
    (49) expression -> . not_expression
    (50) expression -> . parenthesis_expression
    (51) operator_expression -> . expression BINARY_OPERATOR expression
    (52) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (53) length_expression -> . expression POINT LENGTH
    (54) call_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (57) integer_literal_expression -> . INTEGER_LITERAL
    (58) true_expression -> . TRUE
    (59) false_expression -> . FALSE
    (60) identifier_expression -> . IDENTIFIER
    (61) this_expression -> . THIS
    (62) new_array_expression -> . NEW INT LEFT_BRACKET expression RIGHT_BRACKET
    (63) new_expression -> . NEW IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (64) not_expression -> . NOT expression
    (65) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS reduce using rule 55 (expression_list -> .)
    INTEGER_LITERAL shift and go to state 95
    TRUE            shift and go to state 87
    FALSE           shift and go to state 96
    IDENTIFIER      shift and go to state 90
    THIS            shift and go to state 98
    NEW             shift and go to state 85
    NOT             shift and go to state 99
    LEFT_PARENTHESIS shift and go to state 92

    operator_expression            shift and go to state 80
    length_expression              shift and go to state 81
    not_expression                 shift and go to state 97
    identifier_expression          shift and go to state 82
    expression_list                shift and go to state 149
    parenthesis_expression         shift and go to state 88
    this_expression                shift and go to state 93
    array_element_expression       shift and go to state 89
    false_expression               shift and go to state 94
    integer_literal_expression     shift and go to state 83
    true_expression                shift and go to state 84
    new_expression                 shift and go to state 86
    expression                     shift and go to state 142
    new_array_expression           shift and go to state 91
    call_expression                shift and go to state 101

state 148

    (35) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 150


state 149

    (56) expression_list -> expression COMMA expression_list .

    RIGHT_PARENTHESIS reduce using rule 56 (expression_list -> expression COMMA expression_list .)


state 150

    (35) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .

    LEFT_BRACE      reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    SYSTEM          reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    ELSE            reduce using rule 35 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 21 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 52 resolved as shift
WARNING: shift/reduce conflict for BINARY_OPERATOR in state 111 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 111 resolved as shift
WARNING: shift/reduce conflict for POINT in state 111 resolved as shift
WARNING: shift/reduce conflict for BINARY_OPERATOR in state 126 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 126 resolved as shift
WARNING: shift/reduce conflict for POINT in state 126 resolved as shift
