Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> goal
Rule 1     goal -> main_class class_list
Rule 2     class_list -> <empty>
Rule 3     class_list -> class class_list
Rule 4     main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE
Rule 5     class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE
Rule 6     extends -> <empty>
Rule 7     extends -> EXTENDS IDENTIFIER
Rule 8     declaration_list -> <empty>
Rule 9     declaration_list -> field
Rule 10    declaration_list -> method
Rule 11    declaration_list -> declaration_list
Rule 12    field -> type IDENTIFIER SEMICOLON
Rule 13    method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
Rule 14    params_list -> <empty>
Rule 15    params_list -> args_list
Rule 16    args_list -> arg
Rule 17    args_list -> arg COMMA args_list
Rule 18    arg -> type IDENTIFIER
Rule 19    var_list -> <empty>
Rule 20    var_list -> var var_list
Rule 21    var -> type IDENTIFIER SEMICOLON
Rule 22    var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON
Rule 23    statement_list -> <empty>
Rule 24    statement_list -> statement statement_list
Rule 25    type -> array_type
Rule 26    type -> boolean_type
Rule 27    type -> int_type
Rule 28    type -> identifier_type
Rule 29    array_type -> type LEFT_BRACKET RIGHT_BRACKET
Rule 30    boolean_type -> BOOLEAN
Rule 31    int_type -> INT
Rule 32    identifier_type -> IDENTIFIER
Rule 33    statement -> block_statement
Rule 34    statement -> if_statement
Rule 35    statement -> while_statement
Rule 36    statement -> print_statement
Rule 37    statement -> assignment_statement
Rule 38    block_statement -> LEFT_BRACE statement_list RIGHT_BRACE
Rule 39    if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
Rule 40    while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
Rule 41    print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
Rule 42    assignment_statement -> expression ASSIGNMENT expression SEMICOLON
Rule 43    expression -> array_element_expression
Rule 44    expression -> class_field_expression
Rule 45    expression -> class_method_expression
Rule 46    expression -> or_expression
Rule 47    expression -> and_expression
Rule 48    expression -> equal_expression
Rule 49    expression -> not_equal_expression
Rule 50    expression -> greater_expression
Rule 51    expression -> less_expression
Rule 52    expression -> plus_expression
Rule 53    expression -> minus_expression
Rule 54    expression -> multiply_expression
Rule 55    expression -> divide_expression
Rule 56    expression -> parenthesis_expression
Rule 57    expression -> unary_minus_expression
Rule 58    expression -> not_expression
Rule 59    expression -> new_expression
Rule 60    expression -> new_array_expression
Rule 61    expression -> identifier_expression
Rule 62    expression -> integer_literal_expression
Rule 63    expression -> true_expression
Rule 64    expression -> false_expression
Rule 65    expression -> this_expression
Rule 66    expression -> null_expression
Rule 67    array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET
Rule 68    class_field_expression -> expression POINT accessed_field
Rule 69    accessed_field -> IDENTIFIER
Rule 70    accessed_field -> IDENTIFIER POINT accessed_field
Rule 71    class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
Rule 72    expression_list -> expression
Rule 73    expression_list -> expression COMMA expression_list
Rule 74    or_expression -> expression OR expression
Rule 75    and_expression -> expression AND expression
Rule 76    equal_expression -> expression EQUAL expression
Rule 77    not_equal_expression -> expression NOT_EQUAL expression
Rule 78    greater_expression -> expression GREATER expression
Rule 79    less_expression -> expression LESS expression
Rule 80    plus_expression -> expression PLUS expression
Rule 81    minus_expression -> expression MINUS expression
Rule 82    multiply_expression -> expression MULTIPLY expression
Rule 83    divide_expression -> expression DIVIDE expression
Rule 84    parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
Rule 85    unary_minus_expression -> MINUS expression
Rule 86    not_expression -> NOT expression
Rule 87    new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
Rule 88    new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
Rule 89    brackets -> <empty>
Rule 90    brackets -> LEFT_BRACKET RIGHT_BRACKET brackets
Rule 91    identifier_expression -> IDENTIFIER
Rule 92    integer_literal_expression -> INTEGER_LITERAL
Rule 93    true_expression -> TRUE
Rule 94    false_expression -> FALSE
Rule 95    this_expression -> THIS
Rule 96    null_expression -> NULL

Terminals, with rules where they appear

AND                  : 75
ASSIGNMENT           : 22 42
BOOLEAN              : 30
CLASS                : 4 5
COMMA                : 17 73
DIVIDE               : 83
ELSE                 : 39
EQUAL                : 76
EXTENDS              : 7
FALSE                : 94
GREATER              : 78
IDENTIFIER           : 4 4 5 7 12 13 18 21 22 32 69 70 71 91
IF                   : 39
INT                  : 31
INTEGER_LITERAL      : 92
LEFT_BRACE           : 4 4 5 13 38
LEFT_BRACKET         : 4 29 67 88 90
LEFT_PARENTHESIS     : 4 13 39 40 41 71 84 87
LESS                 : 79
MAIN                 : 4
MINUS                : 81 85
MULTIPLY             : 82
NEW                  : 87 88
NOT                  : 86
NOT_EQUAL            : 77
NULL                 : 96
OR                   : 74
OUT                  : 41
PLUS                 : 80
POINT                : 41 41 68 70 71
PRINTLN              : 41
PUBLIC               : 4 13
RETURN               : 13
RIGHT_BRACE          : 4 4 5 13 38
RIGHT_BRACKET        : 4 29 67 88 90
RIGHT_PARENTHESIS    : 4 13 39 40 41 71 84 87
SEMICOLON            : 12 13 21 22 41 42
STATIC               : 4
STRING               : 4
SYSTEM               : 41
THIS                 : 95
TRUE                 : 93
VOID                 : 4
WHILE                : 40
error                : 

Nonterminals, with rules where they appear

accessed_field       : 68 70
and_expression       : 47
arg                  : 16 17
args_list            : 15 17
array_element_expression : 43
array_type           : 25
assignment_statement : 37
block_statement      : 33
boolean_type         : 26
brackets             : 88 90
class                : 3
class_field_expression : 44
class_list           : 1 3
class_method_expression : 45
declaration_list     : 5 11
divide_expression    : 55
equal_expression     : 48
expression           : 13 22 39 40 41 42 42 67 67 68 71 72 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 85 86 88
expression_list      : 71 73
extends              : 5
false_expression     : 64
field                : 9
goal                 : 0
greater_expression   : 50
identifier_expression : 61
identifier_type      : 28
if_statement         : 34
int_type             : 27
integer_literal_expression : 62
less_expression      : 51
main_class           : 1
method               : 10
minus_expression     : 53
multiply_expression  : 54
new_array_expression : 60
new_expression       : 59
not_equal_expression : 49
not_expression       : 58
null_expression      : 66
or_expression        : 46
params_list          : 13
parenthesis_expression : 56
plus_expression      : 52
print_statement      : 36
statement            : 24 39 39 40
statement_list       : 4 13 24 38
this_expression      : 65
true_expression      : 63
type                 : 12 13 18 21 22 29 87 88
unary_minus_expression : 57
var                  : 20
var_list             : 4 13 20
while_statement      : 35

Parsing method: LALR

state 0

    (0) S' -> . goal
    (1) goal -> . main_class class_list
    (4) main_class -> . CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    CLASS           shift and go to state 3

    main_class                     shift and go to state 2
    goal                           shift and go to state 1

state 1

    (0) S' -> goal .



state 2

    (1) goal -> main_class . class_list
    (2) class_list -> .
    (3) class_list -> . class class_list
    (5) class -> . CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE

    $end            reduce using rule 2 (class_list -> .)
    CLASS           shift and go to state 4

    class_list                     shift and go to state 5
    class                          shift and go to state 6

state 3

    (4) main_class -> CLASS . IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    IDENTIFIER      shift and go to state 7


state 4

    (5) class -> CLASS . IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE

    IDENTIFIER      shift and go to state 8


state 5

    (1) goal -> main_class class_list .

    $end            reduce using rule 1 (goal -> main_class class_list .)


state 6

    (3) class_list -> class . class_list
    (2) class_list -> .
    (3) class_list -> . class class_list
    (5) class -> . CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE

    $end            reduce using rule 2 (class_list -> .)
    CLASS           shift and go to state 4

    class_list                     shift and go to state 9
    class                          shift and go to state 6

state 7

    (4) main_class -> CLASS IDENTIFIER . LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    LEFT_BRACE      shift and go to state 10


state 8

    (5) class -> CLASS IDENTIFIER . extends LEFT_BRACE declaration_list RIGHT_BRACE
    (6) extends -> .
    (7) extends -> . EXTENDS IDENTIFIER

    LEFT_BRACE      reduce using rule 6 (extends -> .)
    EXTENDS         shift and go to state 12

    extends                        shift and go to state 11

state 9

    (3) class_list -> class class_list .

    $end            reduce using rule 3 (class_list -> class class_list .)


state 10

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE . PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    PUBLIC          shift and go to state 13


state 11

    (5) class -> CLASS IDENTIFIER extends . LEFT_BRACE declaration_list RIGHT_BRACE

    LEFT_BRACE      shift and go to state 14


state 12

    (7) extends -> EXTENDS . IDENTIFIER

    IDENTIFIER      shift and go to state 15


state 13

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC . STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    STATIC          shift and go to state 16


state 14

    (5) class -> CLASS IDENTIFIER extends LEFT_BRACE . declaration_list RIGHT_BRACE
    (8) declaration_list -> .
    (9) declaration_list -> . field
    (10) declaration_list -> . method
    (11) declaration_list -> . declaration_list
    (12) field -> . type IDENTIFIER SEMICOLON
    (13) method -> . PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

    RIGHT_BRACE     reduce using rule 8 (declaration_list -> .)
    PUBLIC          shift and go to state 28
    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

    boolean_type                   shift and go to state 22
    identifier_type                shift and go to state 25
    array_type                     shift and go to state 23
    declaration_list               shift and go to state 26
    field                          shift and go to state 17
    int_type                       shift and go to state 18
    type                           shift and go to state 20
    method                         shift and go to state 21

state 15

    (7) extends -> EXTENDS IDENTIFIER .

    LEFT_BRACE      reduce using rule 7 (extends -> EXTENDS IDENTIFIER .)


state 16

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC . VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    VOID            shift and go to state 29


state 17

    (9) declaration_list -> field .

    RIGHT_BRACE     reduce using rule 9 (declaration_list -> field .)


state 18

    (27) type -> int_type .

    IDENTIFIER      reduce using rule 27 (type -> int_type .)
    LEFT_BRACKET    reduce using rule 27 (type -> int_type .)
    LEFT_PARENTHESIS reduce using rule 27 (type -> int_type .)


state 19

    (32) identifier_type -> IDENTIFIER .

    IDENTIFIER      reduce using rule 32 (identifier_type -> IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 32 (identifier_type -> IDENTIFIER .)
    LEFT_PARENTHESIS reduce using rule 32 (identifier_type -> IDENTIFIER .)


state 20

    (12) field -> type . IDENTIFIER SEMICOLON
    (29) array_type -> type . LEFT_BRACKET RIGHT_BRACKET

    IDENTIFIER      shift and go to state 31
    LEFT_BRACKET    shift and go to state 30


state 21

    (10) declaration_list -> method .

    RIGHT_BRACE     reduce using rule 10 (declaration_list -> method .)


state 22

    (26) type -> boolean_type .

    IDENTIFIER      reduce using rule 26 (type -> boolean_type .)
    LEFT_BRACKET    reduce using rule 26 (type -> boolean_type .)
    LEFT_PARENTHESIS reduce using rule 26 (type -> boolean_type .)


state 23

    (25) type -> array_type .

    IDENTIFIER      reduce using rule 25 (type -> array_type .)
    LEFT_BRACKET    reduce using rule 25 (type -> array_type .)
    LEFT_PARENTHESIS reduce using rule 25 (type -> array_type .)


state 24

    (31) int_type -> INT .

    IDENTIFIER      reduce using rule 31 (int_type -> INT .)
    LEFT_BRACKET    reduce using rule 31 (int_type -> INT .)
    LEFT_PARENTHESIS reduce using rule 31 (int_type -> INT .)


state 25

    (28) type -> identifier_type .

    IDENTIFIER      reduce using rule 28 (type -> identifier_type .)
    LEFT_BRACKET    reduce using rule 28 (type -> identifier_type .)
    LEFT_PARENTHESIS reduce using rule 28 (type -> identifier_type .)


state 26

    (5) class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list . RIGHT_BRACE
    (11) declaration_list -> declaration_list .

  ! shift/reduce conflict for RIGHT_BRACE resolved as shift
    RIGHT_BRACE     shift and go to state 32

  ! RIGHT_BRACE     [ reduce using rule 11 (declaration_list -> declaration_list .) ]


state 27

    (30) boolean_type -> BOOLEAN .

    IDENTIFIER      reduce using rule 30 (boolean_type -> BOOLEAN .)
    LEFT_BRACKET    reduce using rule 30 (boolean_type -> BOOLEAN .)
    LEFT_PARENTHESIS reduce using rule 30 (boolean_type -> BOOLEAN .)


state 28

    (13) method -> PUBLIC . type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

    boolean_type                   shift and go to state 22
    type                           shift and go to state 33
    identifier_type                shift and go to state 25
    array_type                     shift and go to state 23
    int_type                       shift and go to state 18

state 29

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID . MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    MAIN            shift and go to state 34


state 30

    (29) array_type -> type LEFT_BRACKET . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 35


state 31

    (12) field -> type IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 36


state 32

    (5) class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE .

    CLASS           reduce using rule 5 (class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE .)
    $end            reduce using rule 5 (class -> CLASS IDENTIFIER extends LEFT_BRACE declaration_list RIGHT_BRACE .)


state 33

    (13) method -> PUBLIC type . IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (29) array_type -> type . LEFT_BRACKET RIGHT_BRACKET

    IDENTIFIER      shift and go to state 37
    LEFT_BRACKET    shift and go to state 30


state 34

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN . LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    LEFT_PARENTHESIS shift and go to state 38


state 35

    (29) array_type -> type LEFT_BRACKET RIGHT_BRACKET .

    IDENTIFIER      reduce using rule 29 (array_type -> type LEFT_BRACKET RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 29 (array_type -> type LEFT_BRACKET RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 29 (array_type -> type LEFT_BRACKET RIGHT_BRACKET .)


state 36

    (12) field -> type IDENTIFIER SEMICOLON .

    RIGHT_BRACE     reduce using rule 12 (field -> type IDENTIFIER SEMICOLON .)


state 37

    (13) method -> PUBLIC type IDENTIFIER . LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    LEFT_PARENTHESIS shift and go to state 39


state 38

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS . STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    STRING          shift and go to state 40


state 39

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS . params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (14) params_list -> .
    (15) params_list -> . args_list
    (16) args_list -> . arg
    (17) args_list -> . arg COMMA args_list
    (18) arg -> . type IDENTIFIER
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

    RIGHT_PARENTHESIS reduce using rule 14 (params_list -> .)
    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

    boolean_type                   shift and go to state 22
    type                           shift and go to state 42
    identifier_type                shift and go to state 25
    args_list                      shift and go to state 43
    array_type                     shift and go to state 23
    int_type                       shift and go to state 18
    arg                            shift and go to state 41
    params_list                    shift and go to state 44

state 40

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING . LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    LEFT_BRACKET    shift and go to state 45


state 41

    (16) args_list -> arg .
    (17) args_list -> arg . COMMA args_list

    RIGHT_PARENTHESIS reduce using rule 16 (args_list -> arg .)
    COMMA           shift and go to state 46


state 42

    (18) arg -> type . IDENTIFIER
    (29) array_type -> type . LEFT_BRACKET RIGHT_BRACKET

    IDENTIFIER      shift and go to state 47
    LEFT_BRACKET    shift and go to state 30


state 43

    (15) params_list -> args_list .

    RIGHT_PARENTHESIS reduce using rule 15 (params_list -> args_list .)


state 44

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list . RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    RIGHT_PARENTHESIS shift and go to state 48


state 45

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET . RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    RIGHT_BRACKET   shift and go to state 49


state 46

    (17) args_list -> arg COMMA . args_list
    (16) args_list -> . arg
    (17) args_list -> . arg COMMA args_list
    (18) arg -> . type IDENTIFIER
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

    boolean_type                   shift and go to state 22
    identifier_type                shift and go to state 25
    args_list                      shift and go to state 50
    int_type                       shift and go to state 18
    arg                            shift and go to state 41
    array_type                     shift and go to state 23
    type                           shift and go to state 42

state 47

    (18) arg -> type IDENTIFIER .

    COMMA           reduce using rule 18 (arg -> type IDENTIFIER .)
    RIGHT_PARENTHESIS reduce using rule 18 (arg -> type IDENTIFIER .)


state 48

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS . LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE

    LEFT_BRACE      shift and go to state 51


state 49

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET . IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    IDENTIFIER      shift and go to state 52


state 50

    (17) args_list -> arg COMMA args_list .

    RIGHT_PARENTHESIS reduce using rule 17 (args_list -> arg COMMA args_list .)


state 51

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE . var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (19) var_list -> .
    (20) var_list -> . var var_list
    (21) var -> . type IDENTIFIER SEMICOLON
    (22) var -> . type IDENTIFIER ASSIGNMENT expression SEMICOLON
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LEFT_BRACE      reduce using rule 19 (var_list -> .)
    IF              reduce using rule 19 (var_list -> .)
    WHILE           reduce using rule 19 (var_list -> .)
    SYSTEM          reduce using rule 19 (var_list -> .)
    LEFT_PARENTHESIS reduce using rule 19 (var_list -> .)
    MINUS           reduce using rule 19 (var_list -> .)
    NOT             reduce using rule 19 (var_list -> .)
    NEW             reduce using rule 19 (var_list -> .)
    INTEGER_LITERAL reduce using rule 19 (var_list -> .)
    TRUE            reduce using rule 19 (var_list -> .)
    FALSE           reduce using rule 19 (var_list -> .)
    THIS            reduce using rule 19 (var_list -> .)
    NULL            reduce using rule 19 (var_list -> .)
    RETURN          reduce using rule 19 (var_list -> .)
    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

  ! IDENTIFIER      [ reduce using rule 19 (var_list -> .) ]

    boolean_type                   shift and go to state 22
    type                           shift and go to state 55
    identifier_type                shift and go to state 25
    array_type                     shift and go to state 23
    var                            shift and go to state 54
    int_type                       shift and go to state 18
    var_list                       shift and go to state 53

state 52

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER . RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    RIGHT_PARENTHESIS shift and go to state 56


state 53

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list . statement_list RETURN expression SEMICOLON RIGHT_BRACE
    (23) statement_list -> .
    (24) statement_list -> . statement statement_list
    (33) statement -> . block_statement
    (34) statement -> . if_statement
    (35) statement -> . while_statement
    (36) statement -> . print_statement
    (37) statement -> . assignment_statement
    (38) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (39) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (40) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (41) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (42) assignment_statement -> . expression ASSIGNMENT expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    RETURN          reduce using rule 23 (statement_list -> .)
    LEFT_BRACE      shift and go to state 62
    IF              shift and go to state 90
    WHILE           shift and go to state 61
    SYSTEM          shift and go to state 97
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    print_statement                shift and go to state 64
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    assignment_statement           shift and go to state 73
    block_statement                shift and go to state 74
    array_element_expression       shift and go to state 75
    while_statement                shift and go to state 76
    this_expression                shift and go to state 77
    statement                      shift and go to state 78
    class_field_expression         shift and go to state 79
    if_statement                   shift and go to state 80
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    statement_list                 shift and go to state 100
    expression                     shift and go to state 101

state 54

    (20) var_list -> var . var_list
    (19) var_list -> .
    (20) var_list -> . var var_list
    (21) var -> . type IDENTIFIER SEMICOLON
    (22) var -> . type IDENTIFIER ASSIGNMENT expression SEMICOLON
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LEFT_BRACE      reduce using rule 19 (var_list -> .)
    IF              reduce using rule 19 (var_list -> .)
    WHILE           reduce using rule 19 (var_list -> .)
    SYSTEM          reduce using rule 19 (var_list -> .)
    LEFT_PARENTHESIS reduce using rule 19 (var_list -> .)
    MINUS           reduce using rule 19 (var_list -> .)
    NOT             reduce using rule 19 (var_list -> .)
    NEW             reduce using rule 19 (var_list -> .)
    INTEGER_LITERAL reduce using rule 19 (var_list -> .)
    TRUE            reduce using rule 19 (var_list -> .)
    FALSE           reduce using rule 19 (var_list -> .)
    THIS            reduce using rule 19 (var_list -> .)
    NULL            reduce using rule 19 (var_list -> .)
    RETURN          reduce using rule 19 (var_list -> .)
    RIGHT_BRACE     reduce using rule 19 (var_list -> .)
    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

  ! IDENTIFIER      [ reduce using rule 19 (var_list -> .) ]

    boolean_type                   shift and go to state 22
    type                           shift and go to state 55
    identifier_type                shift and go to state 25
    array_type                     shift and go to state 23
    int_type                       shift and go to state 18
    var                            shift and go to state 54
    var_list                       shift and go to state 103

state 55

    (21) var -> type . IDENTIFIER SEMICOLON
    (22) var -> type . IDENTIFIER ASSIGNMENT expression SEMICOLON
    (29) array_type -> type . LEFT_BRACKET RIGHT_BRACKET

    IDENTIFIER      shift and go to state 104
    LEFT_BRACKET    shift and go to state 30


state 56

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS . LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE

    LEFT_BRACE      shift and go to state 105


state 57

    (55) expression -> divide_expression .

    COMMA           reduce using rule 55 (expression -> divide_expression .)
    LEFT_BRACKET    reduce using rule 55 (expression -> divide_expression .)
    POINT           reduce using rule 55 (expression -> divide_expression .)
    OR              reduce using rule 55 (expression -> divide_expression .)
    AND             reduce using rule 55 (expression -> divide_expression .)
    EQUAL           reduce using rule 55 (expression -> divide_expression .)
    NOT_EQUAL       reduce using rule 55 (expression -> divide_expression .)
    GREATER         reduce using rule 55 (expression -> divide_expression .)
    LESS            reduce using rule 55 (expression -> divide_expression .)
    PLUS            reduce using rule 55 (expression -> divide_expression .)
    MINUS           reduce using rule 55 (expression -> divide_expression .)
    MULTIPLY        reduce using rule 55 (expression -> divide_expression .)
    DIVIDE          reduce using rule 55 (expression -> divide_expression .)
    RIGHT_PARENTHESIS reduce using rule 55 (expression -> divide_expression .)
    SEMICOLON       reduce using rule 55 (expression -> divide_expression .)
    ASSIGNMENT      reduce using rule 55 (expression -> divide_expression .)
    RIGHT_BRACKET   reduce using rule 55 (expression -> divide_expression .)


state 58

    (63) expression -> true_expression .

    COMMA           reduce using rule 63 (expression -> true_expression .)
    LEFT_BRACKET    reduce using rule 63 (expression -> true_expression .)
    POINT           reduce using rule 63 (expression -> true_expression .)
    OR              reduce using rule 63 (expression -> true_expression .)
    AND             reduce using rule 63 (expression -> true_expression .)
    EQUAL           reduce using rule 63 (expression -> true_expression .)
    NOT_EQUAL       reduce using rule 63 (expression -> true_expression .)
    GREATER         reduce using rule 63 (expression -> true_expression .)
    LESS            reduce using rule 63 (expression -> true_expression .)
    PLUS            reduce using rule 63 (expression -> true_expression .)
    MINUS           reduce using rule 63 (expression -> true_expression .)
    MULTIPLY        reduce using rule 63 (expression -> true_expression .)
    DIVIDE          reduce using rule 63 (expression -> true_expression .)
    RIGHT_PARENTHESIS reduce using rule 63 (expression -> true_expression .)
    SEMICOLON       reduce using rule 63 (expression -> true_expression .)
    ASSIGNMENT      reduce using rule 63 (expression -> true_expression .)
    RIGHT_BRACKET   reduce using rule 63 (expression -> true_expression .)


state 59

    (61) expression -> identifier_expression .

    COMMA           reduce using rule 61 (expression -> identifier_expression .)
    LEFT_BRACKET    reduce using rule 61 (expression -> identifier_expression .)
    POINT           reduce using rule 61 (expression -> identifier_expression .)
    OR              reduce using rule 61 (expression -> identifier_expression .)
    AND             reduce using rule 61 (expression -> identifier_expression .)
    EQUAL           reduce using rule 61 (expression -> identifier_expression .)
    NOT_EQUAL       reduce using rule 61 (expression -> identifier_expression .)
    GREATER         reduce using rule 61 (expression -> identifier_expression .)
    LESS            reduce using rule 61 (expression -> identifier_expression .)
    PLUS            reduce using rule 61 (expression -> identifier_expression .)
    MINUS           reduce using rule 61 (expression -> identifier_expression .)
    MULTIPLY        reduce using rule 61 (expression -> identifier_expression .)
    DIVIDE          reduce using rule 61 (expression -> identifier_expression .)
    RIGHT_PARENTHESIS reduce using rule 61 (expression -> identifier_expression .)
    SEMICOLON       reduce using rule 61 (expression -> identifier_expression .)
    ASSIGNMENT      reduce using rule 61 (expression -> identifier_expression .)
    RIGHT_BRACKET   reduce using rule 61 (expression -> identifier_expression .)


state 60

    (50) expression -> greater_expression .

    COMMA           reduce using rule 50 (expression -> greater_expression .)
    LEFT_BRACKET    reduce using rule 50 (expression -> greater_expression .)
    POINT           reduce using rule 50 (expression -> greater_expression .)
    OR              reduce using rule 50 (expression -> greater_expression .)
    AND             reduce using rule 50 (expression -> greater_expression .)
    EQUAL           reduce using rule 50 (expression -> greater_expression .)
    NOT_EQUAL       reduce using rule 50 (expression -> greater_expression .)
    GREATER         reduce using rule 50 (expression -> greater_expression .)
    LESS            reduce using rule 50 (expression -> greater_expression .)
    PLUS            reduce using rule 50 (expression -> greater_expression .)
    MINUS           reduce using rule 50 (expression -> greater_expression .)
    MULTIPLY        reduce using rule 50 (expression -> greater_expression .)
    DIVIDE          reduce using rule 50 (expression -> greater_expression .)
    RIGHT_PARENTHESIS reduce using rule 50 (expression -> greater_expression .)
    SEMICOLON       reduce using rule 50 (expression -> greater_expression .)
    ASSIGNMENT      reduce using rule 50 (expression -> greater_expression .)
    RIGHT_BRACKET   reduce using rule 50 (expression -> greater_expression .)


state 61

    (40) while_statement -> WHILE . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS shift and go to state 106


state 62

    (38) block_statement -> LEFT_BRACE . statement_list RIGHT_BRACE
    (23) statement_list -> .
    (24) statement_list -> . statement statement_list
    (33) statement -> . block_statement
    (34) statement -> . if_statement
    (35) statement -> . while_statement
    (36) statement -> . print_statement
    (37) statement -> . assignment_statement
    (38) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (39) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (40) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (41) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (42) assignment_statement -> . expression ASSIGNMENT expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    RIGHT_BRACE     reduce using rule 23 (statement_list -> .)
    LEFT_BRACE      shift and go to state 62
    IF              shift and go to state 90
    WHILE           shift and go to state 61
    SYSTEM          shift and go to state 97
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    print_statement                shift and go to state 64
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    assignment_statement           shift and go to state 73
    block_statement                shift and go to state 74
    array_element_expression       shift and go to state 75
    while_statement                shift and go to state 76
    this_expression                shift and go to state 77
    statement                      shift and go to state 78
    class_field_expression         shift and go to state 79
    if_statement                   shift and go to state 80
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    statement_list                 shift and go to state 107
    expression                     shift and go to state 101

state 63

    (45) expression -> class_method_expression .

    COMMA           reduce using rule 45 (expression -> class_method_expression .)
    LEFT_BRACKET    reduce using rule 45 (expression -> class_method_expression .)
    POINT           reduce using rule 45 (expression -> class_method_expression .)
    OR              reduce using rule 45 (expression -> class_method_expression .)
    AND             reduce using rule 45 (expression -> class_method_expression .)
    EQUAL           reduce using rule 45 (expression -> class_method_expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> class_method_expression .)
    GREATER         reduce using rule 45 (expression -> class_method_expression .)
    LESS            reduce using rule 45 (expression -> class_method_expression .)
    PLUS            reduce using rule 45 (expression -> class_method_expression .)
    MINUS           reduce using rule 45 (expression -> class_method_expression .)
    MULTIPLY        reduce using rule 45 (expression -> class_method_expression .)
    DIVIDE          reduce using rule 45 (expression -> class_method_expression .)
    RIGHT_PARENTHESIS reduce using rule 45 (expression -> class_method_expression .)
    SEMICOLON       reduce using rule 45 (expression -> class_method_expression .)
    ASSIGNMENT      reduce using rule 45 (expression -> class_method_expression .)
    RIGHT_BRACKET   reduce using rule 45 (expression -> class_method_expression .)


state 64

    (36) statement -> print_statement .

    LEFT_BRACE      reduce using rule 36 (statement -> print_statement .)
    IF              reduce using rule 36 (statement -> print_statement .)
    WHILE           reduce using rule 36 (statement -> print_statement .)
    SYSTEM          reduce using rule 36 (statement -> print_statement .)
    LEFT_PARENTHESIS reduce using rule 36 (statement -> print_statement .)
    MINUS           reduce using rule 36 (statement -> print_statement .)
    NOT             reduce using rule 36 (statement -> print_statement .)
    NEW             reduce using rule 36 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 36 (statement -> print_statement .)
    INTEGER_LITERAL reduce using rule 36 (statement -> print_statement .)
    TRUE            reduce using rule 36 (statement -> print_statement .)
    FALSE           reduce using rule 36 (statement -> print_statement .)
    THIS            reduce using rule 36 (statement -> print_statement .)
    NULL            reduce using rule 36 (statement -> print_statement .)
    RIGHT_BRACE     reduce using rule 36 (statement -> print_statement .)
    RETURN          reduce using rule 36 (statement -> print_statement .)
    ELSE            reduce using rule 36 (statement -> print_statement .)


state 65

    (59) expression -> new_expression .

    COMMA           reduce using rule 59 (expression -> new_expression .)
    LEFT_BRACKET    reduce using rule 59 (expression -> new_expression .)
    POINT           reduce using rule 59 (expression -> new_expression .)
    OR              reduce using rule 59 (expression -> new_expression .)
    AND             reduce using rule 59 (expression -> new_expression .)
    EQUAL           reduce using rule 59 (expression -> new_expression .)
    NOT_EQUAL       reduce using rule 59 (expression -> new_expression .)
    GREATER         reduce using rule 59 (expression -> new_expression .)
    LESS            reduce using rule 59 (expression -> new_expression .)
    PLUS            reduce using rule 59 (expression -> new_expression .)
    MINUS           reduce using rule 59 (expression -> new_expression .)
    MULTIPLY        reduce using rule 59 (expression -> new_expression .)
    DIVIDE          reduce using rule 59 (expression -> new_expression .)
    RIGHT_PARENTHESIS reduce using rule 59 (expression -> new_expression .)
    SEMICOLON       reduce using rule 59 (expression -> new_expression .)
    ASSIGNMENT      reduce using rule 59 (expression -> new_expression .)
    RIGHT_BRACKET   reduce using rule 59 (expression -> new_expression .)


state 66

    (96) null_expression -> NULL .

    LEFT_BRACKET    reduce using rule 96 (null_expression -> NULL .)
    POINT           reduce using rule 96 (null_expression -> NULL .)
    OR              reduce using rule 96 (null_expression -> NULL .)
    AND             reduce using rule 96 (null_expression -> NULL .)
    EQUAL           reduce using rule 96 (null_expression -> NULL .)
    NOT_EQUAL       reduce using rule 96 (null_expression -> NULL .)
    GREATER         reduce using rule 96 (null_expression -> NULL .)
    LESS            reduce using rule 96 (null_expression -> NULL .)
    PLUS            reduce using rule 96 (null_expression -> NULL .)
    MINUS           reduce using rule 96 (null_expression -> NULL .)
    MULTIPLY        reduce using rule 96 (null_expression -> NULL .)
    DIVIDE          reduce using rule 96 (null_expression -> NULL .)
    ASSIGNMENT      reduce using rule 96 (null_expression -> NULL .)
    RIGHT_PARENTHESIS reduce using rule 96 (null_expression -> NULL .)
    SEMICOLON       reduce using rule 96 (null_expression -> NULL .)
    RIGHT_BRACKET   reduce using rule 96 (null_expression -> NULL .)
    COMMA           reduce using rule 96 (null_expression -> NULL .)


state 67

    (93) true_expression -> TRUE .

    RIGHT_PARENTHESIS reduce using rule 93 (true_expression -> TRUE .)
    LEFT_BRACKET    reduce using rule 93 (true_expression -> TRUE .)
    POINT           reduce using rule 93 (true_expression -> TRUE .)
    OR              reduce using rule 93 (true_expression -> TRUE .)
    AND             reduce using rule 93 (true_expression -> TRUE .)
    EQUAL           reduce using rule 93 (true_expression -> TRUE .)
    NOT_EQUAL       reduce using rule 93 (true_expression -> TRUE .)
    GREATER         reduce using rule 93 (true_expression -> TRUE .)
    LESS            reduce using rule 93 (true_expression -> TRUE .)
    PLUS            reduce using rule 93 (true_expression -> TRUE .)
    MINUS           reduce using rule 93 (true_expression -> TRUE .)
    MULTIPLY        reduce using rule 93 (true_expression -> TRUE .)
    DIVIDE          reduce using rule 93 (true_expression -> TRUE .)
    SEMICOLON       reduce using rule 93 (true_expression -> TRUE .)
    ASSIGNMENT      reduce using rule 93 (true_expression -> TRUE .)
    RIGHT_BRACKET   reduce using rule 93 (true_expression -> TRUE .)
    COMMA           reduce using rule 93 (true_expression -> TRUE .)


state 68

    (85) unary_minus_expression -> MINUS . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 108

state 69

    (47) expression -> and_expression .

    COMMA           reduce using rule 47 (expression -> and_expression .)
    LEFT_BRACKET    reduce using rule 47 (expression -> and_expression .)
    POINT           reduce using rule 47 (expression -> and_expression .)
    OR              reduce using rule 47 (expression -> and_expression .)
    AND             reduce using rule 47 (expression -> and_expression .)
    EQUAL           reduce using rule 47 (expression -> and_expression .)
    NOT_EQUAL       reduce using rule 47 (expression -> and_expression .)
    GREATER         reduce using rule 47 (expression -> and_expression .)
    LESS            reduce using rule 47 (expression -> and_expression .)
    PLUS            reduce using rule 47 (expression -> and_expression .)
    MINUS           reduce using rule 47 (expression -> and_expression .)
    MULTIPLY        reduce using rule 47 (expression -> and_expression .)
    DIVIDE          reduce using rule 47 (expression -> and_expression .)
    RIGHT_PARENTHESIS reduce using rule 47 (expression -> and_expression .)
    SEMICOLON       reduce using rule 47 (expression -> and_expression .)
    ASSIGNMENT      reduce using rule 47 (expression -> and_expression .)
    RIGHT_BRACKET   reduce using rule 47 (expression -> and_expression .)


state 70

    (51) expression -> less_expression .

    COMMA           reduce using rule 51 (expression -> less_expression .)
    LEFT_BRACKET    reduce using rule 51 (expression -> less_expression .)
    POINT           reduce using rule 51 (expression -> less_expression .)
    OR              reduce using rule 51 (expression -> less_expression .)
    AND             reduce using rule 51 (expression -> less_expression .)
    EQUAL           reduce using rule 51 (expression -> less_expression .)
    NOT_EQUAL       reduce using rule 51 (expression -> less_expression .)
    GREATER         reduce using rule 51 (expression -> less_expression .)
    LESS            reduce using rule 51 (expression -> less_expression .)
    PLUS            reduce using rule 51 (expression -> less_expression .)
    MINUS           reduce using rule 51 (expression -> less_expression .)
    MULTIPLY        reduce using rule 51 (expression -> less_expression .)
    DIVIDE          reduce using rule 51 (expression -> less_expression .)
    RIGHT_PARENTHESIS reduce using rule 51 (expression -> less_expression .)
    SEMICOLON       reduce using rule 51 (expression -> less_expression .)
    ASSIGNMENT      reduce using rule 51 (expression -> less_expression .)
    RIGHT_BRACKET   reduce using rule 51 (expression -> less_expression .)


state 71

    (56) expression -> parenthesis_expression .

    COMMA           reduce using rule 56 (expression -> parenthesis_expression .)
    LEFT_BRACKET    reduce using rule 56 (expression -> parenthesis_expression .)
    POINT           reduce using rule 56 (expression -> parenthesis_expression .)
    OR              reduce using rule 56 (expression -> parenthesis_expression .)
    AND             reduce using rule 56 (expression -> parenthesis_expression .)
    EQUAL           reduce using rule 56 (expression -> parenthesis_expression .)
    NOT_EQUAL       reduce using rule 56 (expression -> parenthesis_expression .)
    GREATER         reduce using rule 56 (expression -> parenthesis_expression .)
    LESS            reduce using rule 56 (expression -> parenthesis_expression .)
    PLUS            reduce using rule 56 (expression -> parenthesis_expression .)
    MINUS           reduce using rule 56 (expression -> parenthesis_expression .)
    MULTIPLY        reduce using rule 56 (expression -> parenthesis_expression .)
    DIVIDE          reduce using rule 56 (expression -> parenthesis_expression .)
    RIGHT_PARENTHESIS reduce using rule 56 (expression -> parenthesis_expression .)
    SEMICOLON       reduce using rule 56 (expression -> parenthesis_expression .)
    ASSIGNMENT      reduce using rule 56 (expression -> parenthesis_expression .)
    RIGHT_BRACKET   reduce using rule 56 (expression -> parenthesis_expression .)


state 72

    (87) new_expression -> NEW . type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> NEW . type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

    identifier_type                shift and go to state 25
    boolean_type                   shift and go to state 22
    type                           shift and go to state 109
    int_type                       shift and go to state 18
    array_type                     shift and go to state 23

state 73

    (37) statement -> assignment_statement .

    LEFT_BRACE      reduce using rule 37 (statement -> assignment_statement .)
    IF              reduce using rule 37 (statement -> assignment_statement .)
    WHILE           reduce using rule 37 (statement -> assignment_statement .)
    SYSTEM          reduce using rule 37 (statement -> assignment_statement .)
    LEFT_PARENTHESIS reduce using rule 37 (statement -> assignment_statement .)
    MINUS           reduce using rule 37 (statement -> assignment_statement .)
    NOT             reduce using rule 37 (statement -> assignment_statement .)
    NEW             reduce using rule 37 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 37 (statement -> assignment_statement .)
    INTEGER_LITERAL reduce using rule 37 (statement -> assignment_statement .)
    TRUE            reduce using rule 37 (statement -> assignment_statement .)
    FALSE           reduce using rule 37 (statement -> assignment_statement .)
    THIS            reduce using rule 37 (statement -> assignment_statement .)
    NULL            reduce using rule 37 (statement -> assignment_statement .)
    RIGHT_BRACE     reduce using rule 37 (statement -> assignment_statement .)
    RETURN          reduce using rule 37 (statement -> assignment_statement .)
    ELSE            reduce using rule 37 (statement -> assignment_statement .)


state 74

    (33) statement -> block_statement .

    LEFT_BRACE      reduce using rule 33 (statement -> block_statement .)
    IF              reduce using rule 33 (statement -> block_statement .)
    WHILE           reduce using rule 33 (statement -> block_statement .)
    SYSTEM          reduce using rule 33 (statement -> block_statement .)
    LEFT_PARENTHESIS reduce using rule 33 (statement -> block_statement .)
    MINUS           reduce using rule 33 (statement -> block_statement .)
    NOT             reduce using rule 33 (statement -> block_statement .)
    NEW             reduce using rule 33 (statement -> block_statement .)
    IDENTIFIER      reduce using rule 33 (statement -> block_statement .)
    INTEGER_LITERAL reduce using rule 33 (statement -> block_statement .)
    TRUE            reduce using rule 33 (statement -> block_statement .)
    FALSE           reduce using rule 33 (statement -> block_statement .)
    THIS            reduce using rule 33 (statement -> block_statement .)
    NULL            reduce using rule 33 (statement -> block_statement .)
    RIGHT_BRACE     reduce using rule 33 (statement -> block_statement .)
    RETURN          reduce using rule 33 (statement -> block_statement .)
    ELSE            reduce using rule 33 (statement -> block_statement .)


state 75

    (43) expression -> array_element_expression .

    COMMA           reduce using rule 43 (expression -> array_element_expression .)
    LEFT_BRACKET    reduce using rule 43 (expression -> array_element_expression .)
    POINT           reduce using rule 43 (expression -> array_element_expression .)
    OR              reduce using rule 43 (expression -> array_element_expression .)
    AND             reduce using rule 43 (expression -> array_element_expression .)
    EQUAL           reduce using rule 43 (expression -> array_element_expression .)
    NOT_EQUAL       reduce using rule 43 (expression -> array_element_expression .)
    GREATER         reduce using rule 43 (expression -> array_element_expression .)
    LESS            reduce using rule 43 (expression -> array_element_expression .)
    PLUS            reduce using rule 43 (expression -> array_element_expression .)
    MINUS           reduce using rule 43 (expression -> array_element_expression .)
    MULTIPLY        reduce using rule 43 (expression -> array_element_expression .)
    DIVIDE          reduce using rule 43 (expression -> array_element_expression .)
    RIGHT_PARENTHESIS reduce using rule 43 (expression -> array_element_expression .)
    SEMICOLON       reduce using rule 43 (expression -> array_element_expression .)
    ASSIGNMENT      reduce using rule 43 (expression -> array_element_expression .)
    RIGHT_BRACKET   reduce using rule 43 (expression -> array_element_expression .)


state 76

    (35) statement -> while_statement .

    LEFT_BRACE      reduce using rule 35 (statement -> while_statement .)
    IF              reduce using rule 35 (statement -> while_statement .)
    WHILE           reduce using rule 35 (statement -> while_statement .)
    SYSTEM          reduce using rule 35 (statement -> while_statement .)
    LEFT_PARENTHESIS reduce using rule 35 (statement -> while_statement .)
    MINUS           reduce using rule 35 (statement -> while_statement .)
    NOT             reduce using rule 35 (statement -> while_statement .)
    NEW             reduce using rule 35 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 35 (statement -> while_statement .)
    INTEGER_LITERAL reduce using rule 35 (statement -> while_statement .)
    TRUE            reduce using rule 35 (statement -> while_statement .)
    FALSE           reduce using rule 35 (statement -> while_statement .)
    THIS            reduce using rule 35 (statement -> while_statement .)
    NULL            reduce using rule 35 (statement -> while_statement .)
    RIGHT_BRACE     reduce using rule 35 (statement -> while_statement .)
    RETURN          reduce using rule 35 (statement -> while_statement .)
    ELSE            reduce using rule 35 (statement -> while_statement .)


state 77

    (65) expression -> this_expression .

    COMMA           reduce using rule 65 (expression -> this_expression .)
    LEFT_BRACKET    reduce using rule 65 (expression -> this_expression .)
    POINT           reduce using rule 65 (expression -> this_expression .)
    OR              reduce using rule 65 (expression -> this_expression .)
    AND             reduce using rule 65 (expression -> this_expression .)
    EQUAL           reduce using rule 65 (expression -> this_expression .)
    NOT_EQUAL       reduce using rule 65 (expression -> this_expression .)
    GREATER         reduce using rule 65 (expression -> this_expression .)
    LESS            reduce using rule 65 (expression -> this_expression .)
    PLUS            reduce using rule 65 (expression -> this_expression .)
    MINUS           reduce using rule 65 (expression -> this_expression .)
    MULTIPLY        reduce using rule 65 (expression -> this_expression .)
    DIVIDE          reduce using rule 65 (expression -> this_expression .)
    RIGHT_PARENTHESIS reduce using rule 65 (expression -> this_expression .)
    SEMICOLON       reduce using rule 65 (expression -> this_expression .)
    ASSIGNMENT      reduce using rule 65 (expression -> this_expression .)
    RIGHT_BRACKET   reduce using rule 65 (expression -> this_expression .)


state 78

    (24) statement_list -> statement . statement_list
    (23) statement_list -> .
    (24) statement_list -> . statement statement_list
    (33) statement -> . block_statement
    (34) statement -> . if_statement
    (35) statement -> . while_statement
    (36) statement -> . print_statement
    (37) statement -> . assignment_statement
    (38) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (39) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (40) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (41) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (42) assignment_statement -> . expression ASSIGNMENT expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    RETURN          reduce using rule 23 (statement_list -> .)
    RIGHT_BRACE     reduce using rule 23 (statement_list -> .)
    LEFT_BRACE      shift and go to state 62
    IF              shift and go to state 90
    WHILE           shift and go to state 61
    SYSTEM          shift and go to state 97
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    print_statement                shift and go to state 64
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    assignment_statement           shift and go to state 73
    block_statement                shift and go to state 74
    array_element_expression       shift and go to state 75
    while_statement                shift and go to state 76
    this_expression                shift and go to state 77
    statement                      shift and go to state 78
    class_field_expression         shift and go to state 79
    if_statement                   shift and go to state 80
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    statement_list                 shift and go to state 110
    expression                     shift and go to state 101

state 79

    (44) expression -> class_field_expression .

    COMMA           reduce using rule 44 (expression -> class_field_expression .)
    LEFT_BRACKET    reduce using rule 44 (expression -> class_field_expression .)
    POINT           reduce using rule 44 (expression -> class_field_expression .)
    OR              reduce using rule 44 (expression -> class_field_expression .)
    AND             reduce using rule 44 (expression -> class_field_expression .)
    EQUAL           reduce using rule 44 (expression -> class_field_expression .)
    NOT_EQUAL       reduce using rule 44 (expression -> class_field_expression .)
    GREATER         reduce using rule 44 (expression -> class_field_expression .)
    LESS            reduce using rule 44 (expression -> class_field_expression .)
    PLUS            reduce using rule 44 (expression -> class_field_expression .)
    MINUS           reduce using rule 44 (expression -> class_field_expression .)
    MULTIPLY        reduce using rule 44 (expression -> class_field_expression .)
    DIVIDE          reduce using rule 44 (expression -> class_field_expression .)
    RIGHT_PARENTHESIS reduce using rule 44 (expression -> class_field_expression .)
    SEMICOLON       reduce using rule 44 (expression -> class_field_expression .)
    ASSIGNMENT      reduce using rule 44 (expression -> class_field_expression .)
    RIGHT_BRACKET   reduce using rule 44 (expression -> class_field_expression .)


state 80

    (34) statement -> if_statement .

    LEFT_BRACE      reduce using rule 34 (statement -> if_statement .)
    IF              reduce using rule 34 (statement -> if_statement .)
    WHILE           reduce using rule 34 (statement -> if_statement .)
    SYSTEM          reduce using rule 34 (statement -> if_statement .)
    LEFT_PARENTHESIS reduce using rule 34 (statement -> if_statement .)
    MINUS           reduce using rule 34 (statement -> if_statement .)
    NOT             reduce using rule 34 (statement -> if_statement .)
    NEW             reduce using rule 34 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 34 (statement -> if_statement .)
    INTEGER_LITERAL reduce using rule 34 (statement -> if_statement .)
    TRUE            reduce using rule 34 (statement -> if_statement .)
    FALSE           reduce using rule 34 (statement -> if_statement .)
    THIS            reduce using rule 34 (statement -> if_statement .)
    NULL            reduce using rule 34 (statement -> if_statement .)
    RIGHT_BRACE     reduce using rule 34 (statement -> if_statement .)
    RETURN          reduce using rule 34 (statement -> if_statement .)
    ELSE            reduce using rule 34 (statement -> if_statement .)


state 81

    (60) expression -> new_array_expression .

    COMMA           reduce using rule 60 (expression -> new_array_expression .)
    LEFT_BRACKET    reduce using rule 60 (expression -> new_array_expression .)
    POINT           reduce using rule 60 (expression -> new_array_expression .)
    OR              reduce using rule 60 (expression -> new_array_expression .)
    AND             reduce using rule 60 (expression -> new_array_expression .)
    EQUAL           reduce using rule 60 (expression -> new_array_expression .)
    NOT_EQUAL       reduce using rule 60 (expression -> new_array_expression .)
    GREATER         reduce using rule 60 (expression -> new_array_expression .)
    LESS            reduce using rule 60 (expression -> new_array_expression .)
    PLUS            reduce using rule 60 (expression -> new_array_expression .)
    MINUS           reduce using rule 60 (expression -> new_array_expression .)
    MULTIPLY        reduce using rule 60 (expression -> new_array_expression .)
    DIVIDE          reduce using rule 60 (expression -> new_array_expression .)
    RIGHT_PARENTHESIS reduce using rule 60 (expression -> new_array_expression .)
    SEMICOLON       reduce using rule 60 (expression -> new_array_expression .)
    ASSIGNMENT      reduce using rule 60 (expression -> new_array_expression .)
    RIGHT_BRACKET   reduce using rule 60 (expression -> new_array_expression .)


state 82

    (84) parenthesis_expression -> LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 111

state 83

    (54) expression -> multiply_expression .

    COMMA           reduce using rule 54 (expression -> multiply_expression .)
    LEFT_BRACKET    reduce using rule 54 (expression -> multiply_expression .)
    POINT           reduce using rule 54 (expression -> multiply_expression .)
    OR              reduce using rule 54 (expression -> multiply_expression .)
    AND             reduce using rule 54 (expression -> multiply_expression .)
    EQUAL           reduce using rule 54 (expression -> multiply_expression .)
    NOT_EQUAL       reduce using rule 54 (expression -> multiply_expression .)
    GREATER         reduce using rule 54 (expression -> multiply_expression .)
    LESS            reduce using rule 54 (expression -> multiply_expression .)
    PLUS            reduce using rule 54 (expression -> multiply_expression .)
    MINUS           reduce using rule 54 (expression -> multiply_expression .)
    MULTIPLY        reduce using rule 54 (expression -> multiply_expression .)
    DIVIDE          reduce using rule 54 (expression -> multiply_expression .)
    RIGHT_PARENTHESIS reduce using rule 54 (expression -> multiply_expression .)
    SEMICOLON       reduce using rule 54 (expression -> multiply_expression .)
    ASSIGNMENT      reduce using rule 54 (expression -> multiply_expression .)
    RIGHT_BRACKET   reduce using rule 54 (expression -> multiply_expression .)


state 84

    (66) expression -> null_expression .

    COMMA           reduce using rule 66 (expression -> null_expression .)
    LEFT_BRACKET    reduce using rule 66 (expression -> null_expression .)
    POINT           reduce using rule 66 (expression -> null_expression .)
    OR              reduce using rule 66 (expression -> null_expression .)
    AND             reduce using rule 66 (expression -> null_expression .)
    EQUAL           reduce using rule 66 (expression -> null_expression .)
    NOT_EQUAL       reduce using rule 66 (expression -> null_expression .)
    GREATER         reduce using rule 66 (expression -> null_expression .)
    LESS            reduce using rule 66 (expression -> null_expression .)
    PLUS            reduce using rule 66 (expression -> null_expression .)
    MINUS           reduce using rule 66 (expression -> null_expression .)
    MULTIPLY        reduce using rule 66 (expression -> null_expression .)
    DIVIDE          reduce using rule 66 (expression -> null_expression .)
    RIGHT_PARENTHESIS reduce using rule 66 (expression -> null_expression .)
    SEMICOLON       reduce using rule 66 (expression -> null_expression .)
    ASSIGNMENT      reduce using rule 66 (expression -> null_expression .)
    RIGHT_BRACKET   reduce using rule 66 (expression -> null_expression .)


state 85

    (92) integer_literal_expression -> INTEGER_LITERAL .

    LEFT_BRACKET    reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    POINT           reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    OR              reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    AND             reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    EQUAL           reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    NOT_EQUAL       reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    GREATER         reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    LESS            reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    PLUS            reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    MINUS           reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    MULTIPLY        reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    DIVIDE          reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    ASSIGNMENT      reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    RIGHT_PARENTHESIS reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    SEMICOLON       reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    RIGHT_BRACKET   reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)
    COMMA           reduce using rule 92 (integer_literal_expression -> INTEGER_LITERAL .)


state 86

    (86) not_expression -> NOT . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 112

state 87

    (64) expression -> false_expression .

    COMMA           reduce using rule 64 (expression -> false_expression .)
    LEFT_BRACKET    reduce using rule 64 (expression -> false_expression .)
    POINT           reduce using rule 64 (expression -> false_expression .)
    OR              reduce using rule 64 (expression -> false_expression .)
    AND             reduce using rule 64 (expression -> false_expression .)
    EQUAL           reduce using rule 64 (expression -> false_expression .)
    NOT_EQUAL       reduce using rule 64 (expression -> false_expression .)
    GREATER         reduce using rule 64 (expression -> false_expression .)
    LESS            reduce using rule 64 (expression -> false_expression .)
    PLUS            reduce using rule 64 (expression -> false_expression .)
    MINUS           reduce using rule 64 (expression -> false_expression .)
    MULTIPLY        reduce using rule 64 (expression -> false_expression .)
    DIVIDE          reduce using rule 64 (expression -> false_expression .)
    RIGHT_PARENTHESIS reduce using rule 64 (expression -> false_expression .)
    SEMICOLON       reduce using rule 64 (expression -> false_expression .)
    ASSIGNMENT      reduce using rule 64 (expression -> false_expression .)
    RIGHT_BRACKET   reduce using rule 64 (expression -> false_expression .)


state 88

    (48) expression -> equal_expression .

    COMMA           reduce using rule 48 (expression -> equal_expression .)
    LEFT_BRACKET    reduce using rule 48 (expression -> equal_expression .)
    POINT           reduce using rule 48 (expression -> equal_expression .)
    OR              reduce using rule 48 (expression -> equal_expression .)
    AND             reduce using rule 48 (expression -> equal_expression .)
    EQUAL           reduce using rule 48 (expression -> equal_expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> equal_expression .)
    GREATER         reduce using rule 48 (expression -> equal_expression .)
    LESS            reduce using rule 48 (expression -> equal_expression .)
    PLUS            reduce using rule 48 (expression -> equal_expression .)
    MINUS           reduce using rule 48 (expression -> equal_expression .)
    MULTIPLY        reduce using rule 48 (expression -> equal_expression .)
    DIVIDE          reduce using rule 48 (expression -> equal_expression .)
    RIGHT_PARENTHESIS reduce using rule 48 (expression -> equal_expression .)
    SEMICOLON       reduce using rule 48 (expression -> equal_expression .)
    ASSIGNMENT      reduce using rule 48 (expression -> equal_expression .)
    RIGHT_BRACKET   reduce using rule 48 (expression -> equal_expression .)


state 89

    (57) expression -> unary_minus_expression .

    COMMA           reduce using rule 57 (expression -> unary_minus_expression .)
    LEFT_BRACKET    reduce using rule 57 (expression -> unary_minus_expression .)
    POINT           reduce using rule 57 (expression -> unary_minus_expression .)
    OR              reduce using rule 57 (expression -> unary_minus_expression .)
    AND             reduce using rule 57 (expression -> unary_minus_expression .)
    EQUAL           reduce using rule 57 (expression -> unary_minus_expression .)
    NOT_EQUAL       reduce using rule 57 (expression -> unary_minus_expression .)
    GREATER         reduce using rule 57 (expression -> unary_minus_expression .)
    LESS            reduce using rule 57 (expression -> unary_minus_expression .)
    PLUS            reduce using rule 57 (expression -> unary_minus_expression .)
    MINUS           reduce using rule 57 (expression -> unary_minus_expression .)
    MULTIPLY        reduce using rule 57 (expression -> unary_minus_expression .)
    DIVIDE          reduce using rule 57 (expression -> unary_minus_expression .)
    RIGHT_PARENTHESIS reduce using rule 57 (expression -> unary_minus_expression .)
    SEMICOLON       reduce using rule 57 (expression -> unary_minus_expression .)
    ASSIGNMENT      reduce using rule 57 (expression -> unary_minus_expression .)
    RIGHT_BRACKET   reduce using rule 57 (expression -> unary_minus_expression .)


state 90

    (39) if_statement -> IF . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement

    LEFT_PARENTHESIS shift and go to state 113


state 91

    (46) expression -> or_expression .

    COMMA           reduce using rule 46 (expression -> or_expression .)
    LEFT_BRACKET    reduce using rule 46 (expression -> or_expression .)
    POINT           reduce using rule 46 (expression -> or_expression .)
    OR              reduce using rule 46 (expression -> or_expression .)
    AND             reduce using rule 46 (expression -> or_expression .)
    EQUAL           reduce using rule 46 (expression -> or_expression .)
    NOT_EQUAL       reduce using rule 46 (expression -> or_expression .)
    GREATER         reduce using rule 46 (expression -> or_expression .)
    LESS            reduce using rule 46 (expression -> or_expression .)
    PLUS            reduce using rule 46 (expression -> or_expression .)
    MINUS           reduce using rule 46 (expression -> or_expression .)
    MULTIPLY        reduce using rule 46 (expression -> or_expression .)
    DIVIDE          reduce using rule 46 (expression -> or_expression .)
    RIGHT_PARENTHESIS reduce using rule 46 (expression -> or_expression .)
    SEMICOLON       reduce using rule 46 (expression -> or_expression .)
    ASSIGNMENT      reduce using rule 46 (expression -> or_expression .)
    RIGHT_BRACKET   reduce using rule 46 (expression -> or_expression .)


state 92

    (91) identifier_expression -> IDENTIFIER .

    RIGHT_PARENTHESIS reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    POINT           reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    OR              reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    AND             reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    EQUAL           reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    GREATER         reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    LESS            reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    PLUS            reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    MINUS           reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    ASSIGNMENT      reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 91 (identifier_expression -> IDENTIFIER .)
    COMMA           reduce using rule 91 (identifier_expression -> IDENTIFIER .)


state 93

    (94) false_expression -> FALSE .

    ASSIGNMENT      reduce using rule 94 (false_expression -> FALSE .)
    LEFT_BRACKET    reduce using rule 94 (false_expression -> FALSE .)
    POINT           reduce using rule 94 (false_expression -> FALSE .)
    OR              reduce using rule 94 (false_expression -> FALSE .)
    AND             reduce using rule 94 (false_expression -> FALSE .)
    EQUAL           reduce using rule 94 (false_expression -> FALSE .)
    NOT_EQUAL       reduce using rule 94 (false_expression -> FALSE .)
    GREATER         reduce using rule 94 (false_expression -> FALSE .)
    LESS            reduce using rule 94 (false_expression -> FALSE .)
    PLUS            reduce using rule 94 (false_expression -> FALSE .)
    MINUS           reduce using rule 94 (false_expression -> FALSE .)
    MULTIPLY        reduce using rule 94 (false_expression -> FALSE .)
    DIVIDE          reduce using rule 94 (false_expression -> FALSE .)
    RIGHT_PARENTHESIS reduce using rule 94 (false_expression -> FALSE .)
    SEMICOLON       reduce using rule 94 (false_expression -> FALSE .)
    RIGHT_BRACKET   reduce using rule 94 (false_expression -> FALSE .)
    COMMA           reduce using rule 94 (false_expression -> FALSE .)


state 94

    (58) expression -> not_expression .

    COMMA           reduce using rule 58 (expression -> not_expression .)
    LEFT_BRACKET    reduce using rule 58 (expression -> not_expression .)
    POINT           reduce using rule 58 (expression -> not_expression .)
    OR              reduce using rule 58 (expression -> not_expression .)
    AND             reduce using rule 58 (expression -> not_expression .)
    EQUAL           reduce using rule 58 (expression -> not_expression .)
    NOT_EQUAL       reduce using rule 58 (expression -> not_expression .)
    GREATER         reduce using rule 58 (expression -> not_expression .)
    LESS            reduce using rule 58 (expression -> not_expression .)
    PLUS            reduce using rule 58 (expression -> not_expression .)
    MINUS           reduce using rule 58 (expression -> not_expression .)
    MULTIPLY        reduce using rule 58 (expression -> not_expression .)
    DIVIDE          reduce using rule 58 (expression -> not_expression .)
    RIGHT_PARENTHESIS reduce using rule 58 (expression -> not_expression .)
    SEMICOLON       reduce using rule 58 (expression -> not_expression .)
    ASSIGNMENT      reduce using rule 58 (expression -> not_expression .)
    RIGHT_BRACKET   reduce using rule 58 (expression -> not_expression .)


state 95

    (95) this_expression -> THIS .

    RIGHT_PARENTHESIS reduce using rule 95 (this_expression -> THIS .)
    LEFT_BRACKET    reduce using rule 95 (this_expression -> THIS .)
    POINT           reduce using rule 95 (this_expression -> THIS .)
    OR              reduce using rule 95 (this_expression -> THIS .)
    AND             reduce using rule 95 (this_expression -> THIS .)
    EQUAL           reduce using rule 95 (this_expression -> THIS .)
    NOT_EQUAL       reduce using rule 95 (this_expression -> THIS .)
    GREATER         reduce using rule 95 (this_expression -> THIS .)
    LESS            reduce using rule 95 (this_expression -> THIS .)
    PLUS            reduce using rule 95 (this_expression -> THIS .)
    MINUS           reduce using rule 95 (this_expression -> THIS .)
    MULTIPLY        reduce using rule 95 (this_expression -> THIS .)
    DIVIDE          reduce using rule 95 (this_expression -> THIS .)
    SEMICOLON       reduce using rule 95 (this_expression -> THIS .)
    RIGHT_BRACKET   reduce using rule 95 (this_expression -> THIS .)
    ASSIGNMENT      reduce using rule 95 (this_expression -> THIS .)
    COMMA           reduce using rule 95 (this_expression -> THIS .)


state 96

    (53) expression -> minus_expression .

    COMMA           reduce using rule 53 (expression -> minus_expression .)
    LEFT_BRACKET    reduce using rule 53 (expression -> minus_expression .)
    POINT           reduce using rule 53 (expression -> minus_expression .)
    OR              reduce using rule 53 (expression -> minus_expression .)
    AND             reduce using rule 53 (expression -> minus_expression .)
    EQUAL           reduce using rule 53 (expression -> minus_expression .)
    NOT_EQUAL       reduce using rule 53 (expression -> minus_expression .)
    GREATER         reduce using rule 53 (expression -> minus_expression .)
    LESS            reduce using rule 53 (expression -> minus_expression .)
    PLUS            reduce using rule 53 (expression -> minus_expression .)
    MINUS           reduce using rule 53 (expression -> minus_expression .)
    MULTIPLY        reduce using rule 53 (expression -> minus_expression .)
    DIVIDE          reduce using rule 53 (expression -> minus_expression .)
    RIGHT_PARENTHESIS reduce using rule 53 (expression -> minus_expression .)
    SEMICOLON       reduce using rule 53 (expression -> minus_expression .)
    ASSIGNMENT      reduce using rule 53 (expression -> minus_expression .)
    RIGHT_BRACKET   reduce using rule 53 (expression -> minus_expression .)


state 97

    (41) print_statement -> SYSTEM . POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    POINT           shift and go to state 114


state 98

    (49) expression -> not_equal_expression .

    COMMA           reduce using rule 49 (expression -> not_equal_expression .)
    LEFT_BRACKET    reduce using rule 49 (expression -> not_equal_expression .)
    POINT           reduce using rule 49 (expression -> not_equal_expression .)
    OR              reduce using rule 49 (expression -> not_equal_expression .)
    AND             reduce using rule 49 (expression -> not_equal_expression .)
    EQUAL           reduce using rule 49 (expression -> not_equal_expression .)
    NOT_EQUAL       reduce using rule 49 (expression -> not_equal_expression .)
    GREATER         reduce using rule 49 (expression -> not_equal_expression .)
    LESS            reduce using rule 49 (expression -> not_equal_expression .)
    PLUS            reduce using rule 49 (expression -> not_equal_expression .)
    MINUS           reduce using rule 49 (expression -> not_equal_expression .)
    MULTIPLY        reduce using rule 49 (expression -> not_equal_expression .)
    DIVIDE          reduce using rule 49 (expression -> not_equal_expression .)
    RIGHT_PARENTHESIS reduce using rule 49 (expression -> not_equal_expression .)
    SEMICOLON       reduce using rule 49 (expression -> not_equal_expression .)
    ASSIGNMENT      reduce using rule 49 (expression -> not_equal_expression .)
    RIGHT_BRACKET   reduce using rule 49 (expression -> not_equal_expression .)


state 99

    (52) expression -> plus_expression .

    COMMA           reduce using rule 52 (expression -> plus_expression .)
    LEFT_BRACKET    reduce using rule 52 (expression -> plus_expression .)
    POINT           reduce using rule 52 (expression -> plus_expression .)
    OR              reduce using rule 52 (expression -> plus_expression .)
    AND             reduce using rule 52 (expression -> plus_expression .)
    EQUAL           reduce using rule 52 (expression -> plus_expression .)
    NOT_EQUAL       reduce using rule 52 (expression -> plus_expression .)
    GREATER         reduce using rule 52 (expression -> plus_expression .)
    LESS            reduce using rule 52 (expression -> plus_expression .)
    PLUS            reduce using rule 52 (expression -> plus_expression .)
    MINUS           reduce using rule 52 (expression -> plus_expression .)
    MULTIPLY        reduce using rule 52 (expression -> plus_expression .)
    DIVIDE          reduce using rule 52 (expression -> plus_expression .)
    RIGHT_PARENTHESIS reduce using rule 52 (expression -> plus_expression .)
    SEMICOLON       reduce using rule 52 (expression -> plus_expression .)
    ASSIGNMENT      reduce using rule 52 (expression -> plus_expression .)
    RIGHT_BRACKET   reduce using rule 52 (expression -> plus_expression .)


state 100

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list . RETURN expression SEMICOLON RIGHT_BRACE

    RETURN          shift and go to state 115


state 101

    (42) assignment_statement -> expression . ASSIGNMENT expression SEMICOLON
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    ASSIGNMENT      shift and go to state 120
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 102

    (62) expression -> integer_literal_expression .

    COMMA           reduce using rule 62 (expression -> integer_literal_expression .)
    LEFT_BRACKET    reduce using rule 62 (expression -> integer_literal_expression .)
    POINT           reduce using rule 62 (expression -> integer_literal_expression .)
    OR              reduce using rule 62 (expression -> integer_literal_expression .)
    AND             reduce using rule 62 (expression -> integer_literal_expression .)
    EQUAL           reduce using rule 62 (expression -> integer_literal_expression .)
    NOT_EQUAL       reduce using rule 62 (expression -> integer_literal_expression .)
    GREATER         reduce using rule 62 (expression -> integer_literal_expression .)
    LESS            reduce using rule 62 (expression -> integer_literal_expression .)
    PLUS            reduce using rule 62 (expression -> integer_literal_expression .)
    MINUS           reduce using rule 62 (expression -> integer_literal_expression .)
    MULTIPLY        reduce using rule 62 (expression -> integer_literal_expression .)
    DIVIDE          reduce using rule 62 (expression -> integer_literal_expression .)
    RIGHT_PARENTHESIS reduce using rule 62 (expression -> integer_literal_expression .)
    SEMICOLON       reduce using rule 62 (expression -> integer_literal_expression .)
    ASSIGNMENT      reduce using rule 62 (expression -> integer_literal_expression .)
    RIGHT_BRACKET   reduce using rule 62 (expression -> integer_literal_expression .)


state 103

    (20) var_list -> var var_list .

    LEFT_BRACE      reduce using rule 20 (var_list -> var var_list .)
    IF              reduce using rule 20 (var_list -> var var_list .)
    WHILE           reduce using rule 20 (var_list -> var var_list .)
    SYSTEM          reduce using rule 20 (var_list -> var var_list .)
    LEFT_PARENTHESIS reduce using rule 20 (var_list -> var var_list .)
    MINUS           reduce using rule 20 (var_list -> var var_list .)
    NOT             reduce using rule 20 (var_list -> var var_list .)
    NEW             reduce using rule 20 (var_list -> var var_list .)
    IDENTIFIER      reduce using rule 20 (var_list -> var var_list .)
    INTEGER_LITERAL reduce using rule 20 (var_list -> var var_list .)
    TRUE            reduce using rule 20 (var_list -> var var_list .)
    FALSE           reduce using rule 20 (var_list -> var var_list .)
    THIS            reduce using rule 20 (var_list -> var var_list .)
    NULL            reduce using rule 20 (var_list -> var var_list .)
    RIGHT_BRACE     reduce using rule 20 (var_list -> var var_list .)
    RETURN          reduce using rule 20 (var_list -> var var_list .)


state 104

    (21) var -> type IDENTIFIER . SEMICOLON
    (22) var -> type IDENTIFIER . ASSIGNMENT expression SEMICOLON

    SEMICOLON       shift and go to state 130
    ASSIGNMENT      shift and go to state 129


state 105

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE . var_list statement_list RIGHT_BRACE RIGHT_BRACE
    (19) var_list -> .
    (20) var_list -> . var var_list
    (21) var -> . type IDENTIFIER SEMICOLON
    (22) var -> . type IDENTIFIER ASSIGNMENT expression SEMICOLON
    (25) type -> . array_type
    (26) type -> . boolean_type
    (27) type -> . int_type
    (28) type -> . identifier_type
    (29) array_type -> . type LEFT_BRACKET RIGHT_BRACKET
    (30) boolean_type -> . BOOLEAN
    (31) int_type -> . INT
    (32) identifier_type -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LEFT_BRACE      reduce using rule 19 (var_list -> .)
    IF              reduce using rule 19 (var_list -> .)
    WHILE           reduce using rule 19 (var_list -> .)
    SYSTEM          reduce using rule 19 (var_list -> .)
    LEFT_PARENTHESIS reduce using rule 19 (var_list -> .)
    MINUS           reduce using rule 19 (var_list -> .)
    NOT             reduce using rule 19 (var_list -> .)
    NEW             reduce using rule 19 (var_list -> .)
    INTEGER_LITERAL reduce using rule 19 (var_list -> .)
    TRUE            reduce using rule 19 (var_list -> .)
    FALSE           reduce using rule 19 (var_list -> .)
    THIS            reduce using rule 19 (var_list -> .)
    NULL            reduce using rule 19 (var_list -> .)
    RIGHT_BRACE     reduce using rule 19 (var_list -> .)
    BOOLEAN         shift and go to state 27
    INT             shift and go to state 24
    IDENTIFIER      shift and go to state 19

  ! IDENTIFIER      [ reduce using rule 19 (var_list -> .) ]

    boolean_type                   shift and go to state 22
    identifier_type                shift and go to state 25
    array_type                     shift and go to state 23
    var                            shift and go to state 54
    int_type                       shift and go to state 18
    var_list                       shift and go to state 131
    type                           shift and go to state 55

state 106

    (40) while_statement -> WHILE LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS statement
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 132

state 107

    (38) block_statement -> LEFT_BRACE statement_list . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 133


state 108

    (85) unary_minus_expression -> MINUS expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 85 (unary_minus_expression -> MINUS expression .)
    RIGHT_PARENTHESIS reduce using rule 85 (unary_minus_expression -> MINUS expression .)
    SEMICOLON       reduce using rule 85 (unary_minus_expression -> MINUS expression .)
    RIGHT_BRACKET   reduce using rule 85 (unary_minus_expression -> MINUS expression .)
    COMMA           reduce using rule 85 (unary_minus_expression -> MINUS expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! POINT           [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! OR              [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! AND             [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! EQUAL           [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! GREATER         [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! LESS            [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! PLUS            [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 85 (unary_minus_expression -> MINUS expression .) ]


state 109

    (87) new_expression -> NEW type . LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> NEW type . LEFT_BRACKET expression RIGHT_BRACKET brackets
    (29) array_type -> type . LEFT_BRACKET RIGHT_BRACKET

    LEFT_PARENTHESIS shift and go to state 135
    LEFT_BRACKET    shift and go to state 134


state 110

    (24) statement_list -> statement statement_list .

    RIGHT_BRACE     reduce using rule 24 (statement_list -> statement statement_list .)
    RETURN          reduce using rule 24 (statement_list -> statement statement_list .)


state 111

    (84) parenthesis_expression -> LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    RIGHT_PARENTHESIS shift and go to state 136
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 112

    (86) not_expression -> NOT expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 86 (not_expression -> NOT expression .)
    RIGHT_PARENTHESIS reduce using rule 86 (not_expression -> NOT expression .)
    SEMICOLON       reduce using rule 86 (not_expression -> NOT expression .)
    RIGHT_BRACKET   reduce using rule 86 (not_expression -> NOT expression .)
    COMMA           reduce using rule 86 (not_expression -> NOT expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! POINT           [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! OR              [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! AND             [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! EQUAL           [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 86 (not_expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 86 (not_expression -> NOT expression .) ]


state 113

    (39) if_statement -> IF LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS statement ELSE statement
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 137

state 114

    (41) print_statement -> SYSTEM POINT . OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    OUT             shift and go to state 138


state 115

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN . expression SEMICOLON RIGHT_BRACE
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 139

state 116

    (75) and_expression -> expression AND . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 140

state 117

    (77) not_equal_expression -> expression NOT_EQUAL . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 141

state 118

    (78) greater_expression -> expression GREATER . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 142

state 119

    (68) class_field_expression -> expression POINT . accessed_field
    (71) class_method_expression -> expression POINT . IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (69) accessed_field -> . IDENTIFIER
    (70) accessed_field -> . IDENTIFIER POINT accessed_field

    IDENTIFIER      shift and go to state 144

    accessed_field                 shift and go to state 143

state 120

    (42) assignment_statement -> expression ASSIGNMENT . expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 145

state 121

    (79) less_expression -> expression LESS . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 146

state 122

    (76) equal_expression -> expression EQUAL . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 147

state 123

    (74) or_expression -> expression OR . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 148

state 124

    (81) minus_expression -> expression MINUS . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 149

state 125

    (80) plus_expression -> expression PLUS . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 150

state 126

    (82) multiply_expression -> expression MULTIPLY . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 151

state 127

    (67) array_element_expression -> expression LEFT_BRACKET . expression RIGHT_BRACKET
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 152

state 128

    (83) divide_expression -> expression DIVIDE . expression
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 153

state 129

    (22) var -> type IDENTIFIER ASSIGNMENT . expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 154

state 130

    (21) var -> type IDENTIFIER SEMICOLON .

    BOOLEAN         reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    INT             reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    LEFT_BRACE      reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    IF              reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    SYSTEM          reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    NOT             reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    NEW             reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    INTEGER_LITERAL reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    TRUE            reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    FALSE           reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    NULL            reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)
    RIGHT_BRACE     reduce using rule 21 (var -> type IDENTIFIER SEMICOLON .)


state 131

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list . statement_list RIGHT_BRACE RIGHT_BRACE
    (23) statement_list -> .
    (24) statement_list -> . statement statement_list
    (33) statement -> . block_statement
    (34) statement -> . if_statement
    (35) statement -> . while_statement
    (36) statement -> . print_statement
    (37) statement -> . assignment_statement
    (38) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (39) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (40) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (41) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (42) assignment_statement -> . expression ASSIGNMENT expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    RIGHT_BRACE     reduce using rule 23 (statement_list -> .)
    LEFT_BRACE      shift and go to state 62
    IF              shift and go to state 90
    WHILE           shift and go to state 61
    SYSTEM          shift and go to state 97
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    print_statement                shift and go to state 64
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    assignment_statement           shift and go to state 73
    block_statement                shift and go to state 74
    array_element_expression       shift and go to state 75
    while_statement                shift and go to state 76
    this_expression                shift and go to state 77
    statement                      shift and go to state 78
    class_field_expression         shift and go to state 79
    if_statement                   shift and go to state 80
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    statement_list                 shift and go to state 155
    expression                     shift and go to state 101

state 132

    (40) while_statement -> WHILE LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS statement
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    RIGHT_PARENTHESIS shift and go to state 156
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 133

    (38) block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .

    LEFT_BRACE      reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    IF              reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    WHILE           reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    SYSTEM          reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    LEFT_PARENTHESIS reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    MINUS           reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    NOT             reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    NEW             reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    IDENTIFIER      reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    INTEGER_LITERAL reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    TRUE            reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    FALSE           reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    THIS            reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    NULL            reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    RETURN          reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)
    ELSE            reduce using rule 38 (block_statement -> LEFT_BRACE statement_list RIGHT_BRACE .)


state 134

    (88) new_array_expression -> NEW type LEFT_BRACKET . expression RIGHT_BRACKET brackets
    (29) array_type -> type LEFT_BRACKET . RIGHT_BRACKET
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    RIGHT_BRACKET   shift and go to state 35
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 157

state 135

    (87) new_expression -> NEW type LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 158


state 136

    (84) parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    POINT           reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    GREATER         reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LESS            reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 84 (parenthesis_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)


state 137

    (39) if_statement -> IF LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS statement ELSE statement
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    RIGHT_PARENTHESIS shift and go to state 159
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 138

    (41) print_statement -> SYSTEM POINT OUT . POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    POINT           shift and go to state 160


state 139

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression . SEMICOLON RIGHT_BRACE
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 161
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 140

    (75) and_expression -> expression AND expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 75 (and_expression -> expression AND expression .)
    RIGHT_PARENTHESIS reduce using rule 75 (and_expression -> expression AND expression .)
    SEMICOLON       reduce using rule 75 (and_expression -> expression AND expression .)
    RIGHT_BRACKET   reduce using rule 75 (and_expression -> expression AND expression .)
    COMMA           reduce using rule 75 (and_expression -> expression AND expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! POINT           [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 75 (and_expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 75 (and_expression -> expression AND expression .) ]


state 141

    (77) not_equal_expression -> expression NOT_EQUAL expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .)
    RIGHT_BRACKET   reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! POINT           [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! AND             [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! GREATER         [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! LESS            [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 77 (not_equal_expression -> expression NOT_EQUAL expression .) ]


state 142

    (78) greater_expression -> expression GREATER expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 78 (greater_expression -> expression GREATER expression .)
    RIGHT_PARENTHESIS reduce using rule 78 (greater_expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 78 (greater_expression -> expression GREATER expression .)
    RIGHT_BRACKET   reduce using rule 78 (greater_expression -> expression GREATER expression .)
    COMMA           reduce using rule 78 (greater_expression -> expression GREATER expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! POINT           [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! OR              [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! EQUAL           [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! NOT_EQUAL       [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! PLUS            [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 78 (greater_expression -> expression GREATER expression .) ]


state 143

    (68) class_field_expression -> expression POINT accessed_field .

    RIGHT_PARENTHESIS reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    LEFT_BRACKET    reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    POINT           reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    OR              reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    AND             reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    EQUAL           reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    NOT_EQUAL       reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    GREATER         reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    LESS            reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    PLUS            reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    MINUS           reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    MULTIPLY        reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    DIVIDE          reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    ASSIGNMENT      reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    SEMICOLON       reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    RIGHT_BRACKET   reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)
    COMMA           reduce using rule 68 (class_field_expression -> expression POINT accessed_field .)


state 144

    (71) class_method_expression -> expression POINT IDENTIFIER . LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (69) accessed_field -> IDENTIFIER .
    (70) accessed_field -> IDENTIFIER . POINT accessed_field

  ! shift/reduce conflict for POINT resolved as shift
    LEFT_PARENTHESIS shift and go to state 163
    ASSIGNMENT      reduce using rule 69 (accessed_field -> IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 69 (accessed_field -> IDENTIFIER .)
    OR              reduce using rule 69 (accessed_field -> IDENTIFIER .)
    AND             reduce using rule 69 (accessed_field -> IDENTIFIER .)
    EQUAL           reduce using rule 69 (accessed_field -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 69 (accessed_field -> IDENTIFIER .)
    GREATER         reduce using rule 69 (accessed_field -> IDENTIFIER .)
    LESS            reduce using rule 69 (accessed_field -> IDENTIFIER .)
    PLUS            reduce using rule 69 (accessed_field -> IDENTIFIER .)
    MINUS           reduce using rule 69 (accessed_field -> IDENTIFIER .)
    MULTIPLY        reduce using rule 69 (accessed_field -> IDENTIFIER .)
    DIVIDE          reduce using rule 69 (accessed_field -> IDENTIFIER .)
    RIGHT_PARENTHESIS reduce using rule 69 (accessed_field -> IDENTIFIER .)
    SEMICOLON       reduce using rule 69 (accessed_field -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 69 (accessed_field -> IDENTIFIER .)
    COMMA           reduce using rule 69 (accessed_field -> IDENTIFIER .)
    POINT           shift and go to state 162

  ! POINT           [ reduce using rule 69 (accessed_field -> IDENTIFIER .) ]


state 145

    (42) assignment_statement -> expression ASSIGNMENT expression . SEMICOLON
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 164
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 146

    (79) less_expression -> expression LESS expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 79 (less_expression -> expression LESS expression .)
    RIGHT_PARENTHESIS reduce using rule 79 (less_expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 79 (less_expression -> expression LESS expression .)
    RIGHT_BRACKET   reduce using rule 79 (less_expression -> expression LESS expression .)
    COMMA           reduce using rule 79 (less_expression -> expression LESS expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! POINT           [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! OR              [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! EQUAL           [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! PLUS            [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 79 (less_expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 79 (less_expression -> expression LESS expression .) ]


state 147

    (76) equal_expression -> expression EQUAL expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 76 (equal_expression -> expression EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 76 (equal_expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 76 (equal_expression -> expression EQUAL expression .)
    RIGHT_BRACKET   reduce using rule 76 (equal_expression -> expression EQUAL expression .)
    COMMA           reduce using rule 76 (equal_expression -> expression EQUAL expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! POINT           [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! OR              [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! GREATER         [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! LESS            [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 76 (equal_expression -> expression EQUAL expression .) ]


state 148

    (74) or_expression -> expression OR expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RIGHT_BRACKET   reduce using rule 74 (or_expression -> expression OR expression .)
    RIGHT_PARENTHESIS reduce using rule 74 (or_expression -> expression OR expression .)
    ASSIGNMENT      reduce using rule 74 (or_expression -> expression OR expression .)
    SEMICOLON       reduce using rule 74 (or_expression -> expression OR expression .)
    COMMA           reduce using rule 74 (or_expression -> expression OR expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! POINT           [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 74 (or_expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 74 (or_expression -> expression OR expression .) ]


state 149

    (81) minus_expression -> expression MINUS expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 81 (minus_expression -> expression MINUS expression .)
    RIGHT_PARENTHESIS reduce using rule 81 (minus_expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 81 (minus_expression -> expression MINUS expression .)
    RIGHT_BRACKET   reduce using rule 81 (minus_expression -> expression MINUS expression .)
    COMMA           reduce using rule 81 (minus_expression -> expression MINUS expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! POINT           [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 81 (minus_expression -> expression MINUS expression .) ]


state 150

    (80) plus_expression -> expression PLUS expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RIGHT_PARENTHESIS reduce using rule 80 (plus_expression -> expression PLUS expression .)
    ASSIGNMENT      reduce using rule 80 (plus_expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 80 (plus_expression -> expression PLUS expression .)
    RIGHT_BRACKET   reduce using rule 80 (plus_expression -> expression PLUS expression .)
    COMMA           reduce using rule 80 (plus_expression -> expression PLUS expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! POINT           [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 80 (plus_expression -> expression PLUS expression .) ]


state 151

    (82) multiply_expression -> expression MULTIPLY expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .)
    RIGHT_PARENTHESIS reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .)
    RIGHT_BRACKET   reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! POINT           [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! EQUAL           [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! NOT_EQUAL       [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! GREATER         [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! LESS            [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! PLUS            [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 82 (multiply_expression -> expression MULTIPLY expression .) ]


state 152

    (67) array_element_expression -> expression LEFT_BRACKET expression . RIGHT_BRACKET
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    RIGHT_BRACKET   shift and go to state 165
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 153

    (83) divide_expression -> expression DIVIDE expression .
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    ASSIGNMENT      reduce using rule 83 (divide_expression -> expression DIVIDE expression .)
    RIGHT_BRACKET   reduce using rule 83 (divide_expression -> expression DIVIDE expression .)
    RIGHT_PARENTHESIS reduce using rule 83 (divide_expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 83 (divide_expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 83 (divide_expression -> expression DIVIDE expression .)
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128

  ! LEFT_BRACKET    [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! POINT           [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! EQUAL           [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! NOT_EQUAL       [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! GREATER         [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! LESS            [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 83 (divide_expression -> expression DIVIDE expression .) ]


state 154

    (22) var -> type IDENTIFIER ASSIGNMENT expression . SEMICOLON
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 166
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 155

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list . RIGHT_BRACE RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 167


state 156

    (40) while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . statement
    (33) statement -> . block_statement
    (34) statement -> . if_statement
    (35) statement -> . while_statement
    (36) statement -> . print_statement
    (37) statement -> . assignment_statement
    (38) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (39) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (40) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (41) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (42) assignment_statement -> . expression ASSIGNMENT expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_BRACE      shift and go to state 62
    IF              shift and go to state 90
    WHILE           shift and go to state 61
    SYSTEM          shift and go to state 97
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    print_statement                shift and go to state 64
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    assignment_statement           shift and go to state 73
    block_statement                shift and go to state 74
    array_element_expression       shift and go to state 75
    while_statement                shift and go to state 76
    this_expression                shift and go to state 77
    statement                      shift and go to state 168
    class_field_expression         shift and go to state 79
    if_statement                   shift and go to state 80
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 101

state 157

    (88) new_array_expression -> NEW type LEFT_BRACKET expression . RIGHT_BRACKET brackets
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    RIGHT_BRACKET   shift and go to state 169
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 158

    (87) new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    LEFT_BRACKET    reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    POINT           reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    OR              reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    AND             reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    GREATER         reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LESS            reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 87 (new_expression -> NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS .)


state 159

    (39) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . statement ELSE statement
    (33) statement -> . block_statement
    (34) statement -> . if_statement
    (35) statement -> . while_statement
    (36) statement -> . print_statement
    (37) statement -> . assignment_statement
    (38) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (39) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (40) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (41) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (42) assignment_statement -> . expression ASSIGNMENT expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_BRACE      shift and go to state 62
    IF              shift and go to state 90
    WHILE           shift and go to state 61
    SYSTEM          shift and go to state 97
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    print_statement                shift and go to state 64
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    assignment_statement           shift and go to state 73
    block_statement                shift and go to state 74
    array_element_expression       shift and go to state 75
    while_statement                shift and go to state 76
    this_expression                shift and go to state 77
    statement                      shift and go to state 170
    class_field_expression         shift and go to state 79
    if_statement                   shift and go to state 80
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 101

state 160

    (41) print_statement -> SYSTEM POINT OUT POINT . PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    PRINTLN         shift and go to state 171


state 161

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 172


state 162

    (70) accessed_field -> IDENTIFIER POINT . accessed_field
    (69) accessed_field -> . IDENTIFIER
    (70) accessed_field -> . IDENTIFIER POINT accessed_field

    IDENTIFIER      shift and go to state 173

    accessed_field                 shift and go to state 174

state 163

    (71) class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS . expression_list RIGHT_PARENTHESIS
    (72) expression_list -> . expression
    (73) expression_list -> . expression COMMA expression_list
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    expression_list                shift and go to state 175
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 176

state 164

    (42) assignment_statement -> expression ASSIGNMENT expression SEMICOLON .

    LEFT_BRACE      reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    IF              reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    WHILE           reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    SYSTEM          reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    MINUS           reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    NOT             reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    NEW             reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    IDENTIFIER      reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    INTEGER_LITERAL reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    TRUE            reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    FALSE           reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    THIS            reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    NULL            reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    RETURN          reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    RIGHT_BRACE     reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)
    ELSE            reduce using rule 42 (assignment_statement -> expression ASSIGNMENT expression SEMICOLON .)


state 165

    (67) array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .

    RIGHT_PARENTHESIS reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    POINT           reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    OR              reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    AND             reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    EQUAL           reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    GREATER         reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    LESS            reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    PLUS            reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    MINUS           reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    DIVIDE          reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    COMMA           reduce using rule 67 (array_element_expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)


state 166

    (22) var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .

    BOOLEAN         reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    INT             reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    IDENTIFIER      reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    LEFT_BRACE      reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    IF              reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    WHILE           reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    SYSTEM          reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    MINUS           reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    NOT             reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    NEW             reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    INTEGER_LITERAL reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    TRUE            reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    FALSE           reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    THIS            reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    NULL            reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    RETURN          reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)
    RIGHT_BRACE     reduce using rule 22 (var -> type IDENTIFIER ASSIGNMENT expression SEMICOLON .)


state 167

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 177


state 168

    (40) while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .

    LEFT_BRACE      reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    IF              reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    WHILE           reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    SYSTEM          reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    LEFT_PARENTHESIS reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    MINUS           reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    NOT             reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    NEW             reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    IDENTIFIER      reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    INTEGER_LITERAL reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    TRUE            reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    FALSE           reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    THIS            reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    NULL            reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    RETURN          reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    RIGHT_BRACE     reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)
    ELSE            reduce using rule 40 (while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement .)


state 169

    (88) new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET . brackets
    (89) brackets -> .
    (90) brackets -> . LEFT_BRACKET RIGHT_BRACKET brackets

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ASSIGNMENT      reduce using rule 89 (brackets -> .)
    POINT           reduce using rule 89 (brackets -> .)
    OR              reduce using rule 89 (brackets -> .)
    AND             reduce using rule 89 (brackets -> .)
    EQUAL           reduce using rule 89 (brackets -> .)
    NOT_EQUAL       reduce using rule 89 (brackets -> .)
    GREATER         reduce using rule 89 (brackets -> .)
    LESS            reduce using rule 89 (brackets -> .)
    PLUS            reduce using rule 89 (brackets -> .)
    MINUS           reduce using rule 89 (brackets -> .)
    MULTIPLY        reduce using rule 89 (brackets -> .)
    DIVIDE          reduce using rule 89 (brackets -> .)
    RIGHT_PARENTHESIS reduce using rule 89 (brackets -> .)
    SEMICOLON       reduce using rule 89 (brackets -> .)
    RIGHT_BRACKET   reduce using rule 89 (brackets -> .)
    COMMA           reduce using rule 89 (brackets -> .)
    LEFT_BRACKET    shift and go to state 179

  ! LEFT_BRACKET    [ reduce using rule 89 (brackets -> .) ]

    brackets                       shift and go to state 178

state 170

    (39) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement . ELSE statement

    ELSE            shift and go to state 180


state 171

    (41) print_statement -> SYSTEM POINT OUT POINT PRINTLN . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 181


state 172

    (13) method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE .

    RIGHT_BRACE     reduce using rule 13 (method -> PUBLIC type IDENTIFIER LEFT_PARENTHESIS params_list RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RETURN expression SEMICOLON RIGHT_BRACE .)


state 173

    (69) accessed_field -> IDENTIFIER .
    (70) accessed_field -> IDENTIFIER . POINT accessed_field

  ! shift/reduce conflict for POINT resolved as shift
    ASSIGNMENT      reduce using rule 69 (accessed_field -> IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 69 (accessed_field -> IDENTIFIER .)
    OR              reduce using rule 69 (accessed_field -> IDENTIFIER .)
    AND             reduce using rule 69 (accessed_field -> IDENTIFIER .)
    EQUAL           reduce using rule 69 (accessed_field -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 69 (accessed_field -> IDENTIFIER .)
    GREATER         reduce using rule 69 (accessed_field -> IDENTIFIER .)
    LESS            reduce using rule 69 (accessed_field -> IDENTIFIER .)
    PLUS            reduce using rule 69 (accessed_field -> IDENTIFIER .)
    MINUS           reduce using rule 69 (accessed_field -> IDENTIFIER .)
    MULTIPLY        reduce using rule 69 (accessed_field -> IDENTIFIER .)
    DIVIDE          reduce using rule 69 (accessed_field -> IDENTIFIER .)
    RIGHT_PARENTHESIS reduce using rule 69 (accessed_field -> IDENTIFIER .)
    SEMICOLON       reduce using rule 69 (accessed_field -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 69 (accessed_field -> IDENTIFIER .)
    COMMA           reduce using rule 69 (accessed_field -> IDENTIFIER .)
    POINT           shift and go to state 162

  ! POINT           [ reduce using rule 69 (accessed_field -> IDENTIFIER .) ]


state 174

    (70) accessed_field -> IDENTIFIER POINT accessed_field .

    ASSIGNMENT      reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    LEFT_BRACKET    reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    POINT           reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    OR              reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    AND             reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    EQUAL           reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    NOT_EQUAL       reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    GREATER         reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    LESS            reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    PLUS            reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    MINUS           reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    MULTIPLY        reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    DIVIDE          reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    RIGHT_PARENTHESIS reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    SEMICOLON       reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    RIGHT_BRACKET   reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)
    COMMA           reduce using rule 70 (accessed_field -> IDENTIFIER POINT accessed_field .)


state 175

    (71) class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 182


state 176

    (72) expression_list -> expression .
    (73) expression_list -> expression . COMMA expression_list
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    RIGHT_PARENTHESIS reduce using rule 72 (expression_list -> expression .)
    COMMA           shift and go to state 183
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 177

    (4) main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE .

    CLASS           reduce using rule 4 (main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE .)
    $end            reduce using rule 4 (main_class -> CLASS IDENTIFIER LEFT_BRACE PUBLIC STATIC VOID MAIN LEFT_PARENTHESIS STRING LEFT_BRACKET RIGHT_BRACKET IDENTIFIER RIGHT_PARENTHESIS LEFT_BRACE var_list statement_list RIGHT_BRACE RIGHT_BRACE .)


state 178

    (88) new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .

    ASSIGNMENT      reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    LEFT_BRACKET    reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    POINT           reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    OR              reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    AND             reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    EQUAL           reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    NOT_EQUAL       reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    GREATER         reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    LESS            reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    PLUS            reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    MINUS           reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    MULTIPLY        reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    DIVIDE          reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    RIGHT_PARENTHESIS reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    SEMICOLON       reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    RIGHT_BRACKET   reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)
    COMMA           reduce using rule 88 (new_array_expression -> NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets .)


state 179

    (90) brackets -> LEFT_BRACKET . RIGHT_BRACKET brackets

    RIGHT_BRACKET   shift and go to state 184


state 180

    (39) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE . statement
    (33) statement -> . block_statement
    (34) statement -> . if_statement
    (35) statement -> . while_statement
    (36) statement -> . print_statement
    (37) statement -> . assignment_statement
    (38) block_statement -> . LEFT_BRACE statement_list RIGHT_BRACE
    (39) if_statement -> . IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement
    (40) while_statement -> . WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
    (41) print_statement -> . SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (42) assignment_statement -> . expression ASSIGNMENT expression SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_BRACE      shift and go to state 62
    IF              shift and go to state 90
    WHILE           shift and go to state 61
    SYSTEM          shift and go to state 97
    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    print_statement                shift and go to state 64
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    assignment_statement           shift and go to state 73
    block_statement                shift and go to state 74
    array_element_expression       shift and go to state 75
    while_statement                shift and go to state 76
    this_expression                shift and go to state 77
    statement                      shift and go to state 185
    class_field_expression         shift and go to state 79
    if_statement                   shift and go to state 80
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 101

state 181

    (41) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS SEMICOLON
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    class_method_expression        shift and go to state 63
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    true_expression                shift and go to state 58
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 186

state 182

    (71) class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .

    RIGHT_PARENTHESIS reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    POINT           reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    OR              reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    AND             reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    GREATER         reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    LESS            reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    DIVIDE          reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 71 (class_method_expression -> expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS .)


state 183

    (73) expression_list -> expression COMMA . expression_list
    (72) expression_list -> . expression
    (73) expression_list -> . expression COMMA expression_list
    (43) expression -> . array_element_expression
    (44) expression -> . class_field_expression
    (45) expression -> . class_method_expression
    (46) expression -> . or_expression
    (47) expression -> . and_expression
    (48) expression -> . equal_expression
    (49) expression -> . not_equal_expression
    (50) expression -> . greater_expression
    (51) expression -> . less_expression
    (52) expression -> . plus_expression
    (53) expression -> . minus_expression
    (54) expression -> . multiply_expression
    (55) expression -> . divide_expression
    (56) expression -> . parenthesis_expression
    (57) expression -> . unary_minus_expression
    (58) expression -> . not_expression
    (59) expression -> . new_expression
    (60) expression -> . new_array_expression
    (61) expression -> . identifier_expression
    (62) expression -> . integer_literal_expression
    (63) expression -> . true_expression
    (64) expression -> . false_expression
    (65) expression -> . this_expression
    (66) expression -> . null_expression
    (67) array_element_expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> . expression POINT accessed_field
    (71) class_method_expression -> . expression POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> . expression OR expression
    (75) and_expression -> . expression AND expression
    (76) equal_expression -> . expression EQUAL expression
    (77) not_equal_expression -> . expression NOT_EQUAL expression
    (78) greater_expression -> . expression GREATER expression
    (79) less_expression -> . expression LESS expression
    (80) plus_expression -> . expression PLUS expression
    (81) minus_expression -> . expression MINUS expression
    (82) multiply_expression -> . expression MULTIPLY expression
    (83) divide_expression -> . expression DIVIDE expression
    (84) parenthesis_expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (85) unary_minus_expression -> . MINUS expression
    (86) not_expression -> . NOT expression
    (87) new_expression -> . NEW type LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (88) new_array_expression -> . NEW type LEFT_BRACKET expression RIGHT_BRACKET brackets
    (91) identifier_expression -> . IDENTIFIER
    (92) integer_literal_expression -> . INTEGER_LITERAL
    (93) true_expression -> . TRUE
    (94) false_expression -> . FALSE
    (95) this_expression -> . THIS
    (96) null_expression -> . NULL

    LEFT_PARENTHESIS shift and go to state 82
    MINUS           shift and go to state 68
    NOT             shift and go to state 86
    NEW             shift and go to state 72
    IDENTIFIER      shift and go to state 92
    INTEGER_LITERAL shift and go to state 85
    TRUE            shift and go to state 67
    FALSE           shift and go to state 93
    THIS            shift and go to state 95
    NULL            shift and go to state 66

    divide_expression              shift and go to state 57
    true_expression                shift and go to state 58
    identifier_expression          shift and go to state 59
    greater_expression             shift and go to state 60
    integer_literal_expression     shift and go to state 102
    class_method_expression        shift and go to state 63
    new_expression                 shift and go to state 65
    and_expression                 shift and go to state 69
    less_expression                shift and go to state 70
    parenthesis_expression         shift and go to state 71
    array_element_expression       shift and go to state 75
    this_expression                shift and go to state 77
    class_field_expression         shift and go to state 79
    new_array_expression           shift and go to state 81
    plus_expression                shift and go to state 99
    multiply_expression            shift and go to state 83
    null_expression                shift and go to state 84
    unary_minus_expression         shift and go to state 89
    false_expression               shift and go to state 87
    equal_expression               shift and go to state 88
    or_expression                  shift and go to state 91
    not_expression                 shift and go to state 94
    minus_expression               shift and go to state 96
    expression_list                shift and go to state 187
    not_equal_expression           shift and go to state 98
    expression                     shift and go to state 176

state 184

    (90) brackets -> LEFT_BRACKET RIGHT_BRACKET . brackets
    (89) brackets -> .
    (90) brackets -> . LEFT_BRACKET RIGHT_BRACKET brackets

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ASSIGNMENT      reduce using rule 89 (brackets -> .)
    POINT           reduce using rule 89 (brackets -> .)
    OR              reduce using rule 89 (brackets -> .)
    AND             reduce using rule 89 (brackets -> .)
    EQUAL           reduce using rule 89 (brackets -> .)
    NOT_EQUAL       reduce using rule 89 (brackets -> .)
    GREATER         reduce using rule 89 (brackets -> .)
    LESS            reduce using rule 89 (brackets -> .)
    PLUS            reduce using rule 89 (brackets -> .)
    MINUS           reduce using rule 89 (brackets -> .)
    MULTIPLY        reduce using rule 89 (brackets -> .)
    DIVIDE          reduce using rule 89 (brackets -> .)
    RIGHT_PARENTHESIS reduce using rule 89 (brackets -> .)
    SEMICOLON       reduce using rule 89 (brackets -> .)
    RIGHT_BRACKET   reduce using rule 89 (brackets -> .)
    COMMA           reduce using rule 89 (brackets -> .)
    LEFT_BRACKET    shift and go to state 179

  ! LEFT_BRACKET    [ reduce using rule 89 (brackets -> .) ]

    brackets                       shift and go to state 188

state 185

    (39) if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .

    LEFT_BRACE      reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    IF              reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    WHILE           reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    SYSTEM          reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    LEFT_PARENTHESIS reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    MINUS           reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    NOT             reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    NEW             reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    IDENTIFIER      reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    INTEGER_LITERAL reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    TRUE            reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    FALSE           reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    THIS            reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    NULL            reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    RETURN          reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    RIGHT_BRACE     reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)
    ELSE            reduce using rule 39 (if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement .)


state 186

    (41) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS SEMICOLON
    (67) array_element_expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET
    (68) class_field_expression -> expression . POINT accessed_field
    (71) class_method_expression -> expression . POINT IDENTIFIER LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS
    (74) or_expression -> expression . OR expression
    (75) and_expression -> expression . AND expression
    (76) equal_expression -> expression . EQUAL expression
    (77) not_equal_expression -> expression . NOT_EQUAL expression
    (78) greater_expression -> expression . GREATER expression
    (79) less_expression -> expression . LESS expression
    (80) plus_expression -> expression . PLUS expression
    (81) minus_expression -> expression . MINUS expression
    (82) multiply_expression -> expression . MULTIPLY expression
    (83) divide_expression -> expression . DIVIDE expression

    RIGHT_PARENTHESIS shift and go to state 189
    LEFT_BRACKET    shift and go to state 127
    POINT           shift and go to state 119
    OR              shift and go to state 123
    AND             shift and go to state 116
    EQUAL           shift and go to state 122
    NOT_EQUAL       shift and go to state 117
    GREATER         shift and go to state 118
    LESS            shift and go to state 121
    PLUS            shift and go to state 125
    MINUS           shift and go to state 124
    MULTIPLY        shift and go to state 126
    DIVIDE          shift and go to state 128


state 187

    (73) expression_list -> expression COMMA expression_list .

    RIGHT_PARENTHESIS reduce using rule 73 (expression_list -> expression COMMA expression_list .)


state 188

    (90) brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .

    ASSIGNMENT      reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    LEFT_BRACKET    reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    POINT           reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    OR              reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    AND             reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    EQUAL           reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    NOT_EQUAL       reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    GREATER         reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    LESS            reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    PLUS            reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    MINUS           reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    MULTIPLY        reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    DIVIDE          reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    RIGHT_PARENTHESIS reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    SEMICOLON       reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    RIGHT_BRACKET   reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)
    COMMA           reduce using rule 90 (brackets -> LEFT_BRACKET RIGHT_BRACKET brackets .)


state 189

    (41) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 190


state 190

    (41) print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .

    LEFT_BRACE      reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    SYSTEM          reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    MINUS           reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    NOT             reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    INTEGER_LITERAL reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    TRUE            reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    FALSE           reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    THIS            reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    NULL            reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    ELSE            reduce using rule 41 (print_statement -> SYSTEM POINT OUT POINT PRINTLN LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RIGHT_BRACE in state 26 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 51 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 54 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 105 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 108 resolved as shift
WARNING: shift/reduce conflict for POINT in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 108 resolved as shift
WARNING: shift/reduce conflict for LESS in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 112 resolved as shift
WARNING: shift/reduce conflict for POINT in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 112 resolved as shift
WARNING: shift/reduce conflict for LESS in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 112 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 140 resolved as shift
WARNING: shift/reduce conflict for POINT in state 140 resolved as shift
WARNING: shift/reduce conflict for OR in state 140 resolved as shift
WARNING: shift/reduce conflict for AND in state 140 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 140 resolved as shift
WARNING: shift/reduce conflict for LESS in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 140 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 141 resolved as shift
WARNING: shift/reduce conflict for POINT in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 141 resolved as shift
WARNING: shift/reduce conflict for LESS in state 141 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 141 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 142 resolved as shift
WARNING: shift/reduce conflict for POINT in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 142 resolved as shift
WARNING: shift/reduce conflict for LESS in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 142 resolved as shift
WARNING: shift/reduce conflict for POINT in state 144 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 146 resolved as shift
WARNING: shift/reduce conflict for POINT in state 146 resolved as shift
WARNING: shift/reduce conflict for OR in state 146 resolved as shift
WARNING: shift/reduce conflict for AND in state 146 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 146 resolved as shift
WARNING: shift/reduce conflict for LESS in state 146 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 146 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 146 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 147 resolved as shift
WARNING: shift/reduce conflict for POINT in state 147 resolved as shift
WARNING: shift/reduce conflict for OR in state 147 resolved as shift
WARNING: shift/reduce conflict for AND in state 147 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 147 resolved as shift
WARNING: shift/reduce conflict for LESS in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 147 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 147 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 148 resolved as shift
WARNING: shift/reduce conflict for POINT in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 148 resolved as shift
WARNING: shift/reduce conflict for LESS in state 148 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 148 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 148 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 148 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 148 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 149 resolved as shift
WARNING: shift/reduce conflict for POINT in state 149 resolved as shift
WARNING: shift/reduce conflict for OR in state 149 resolved as shift
WARNING: shift/reduce conflict for AND in state 149 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 149 resolved as shift
WARNING: shift/reduce conflict for LESS in state 149 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 149 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 149 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 150 resolved as shift
WARNING: shift/reduce conflict for POINT in state 150 resolved as shift
WARNING: shift/reduce conflict for OR in state 150 resolved as shift
WARNING: shift/reduce conflict for AND in state 150 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 150 resolved as shift
WARNING: shift/reduce conflict for LESS in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 150 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 150 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 151 resolved as shift
WARNING: shift/reduce conflict for POINT in state 151 resolved as shift
WARNING: shift/reduce conflict for OR in state 151 resolved as shift
WARNING: shift/reduce conflict for AND in state 151 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 151 resolved as shift
WARNING: shift/reduce conflict for LESS in state 151 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 151 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 151 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 153 resolved as shift
WARNING: shift/reduce conflict for POINT in state 153 resolved as shift
WARNING: shift/reduce conflict for OR in state 153 resolved as shift
WARNING: shift/reduce conflict for AND in state 153 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 153 resolved as shift
WARNING: shift/reduce conflict for LESS in state 153 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 153 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 153 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 169 resolved as shift
WARNING: shift/reduce conflict for POINT in state 173 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 184 resolved as shift
