strict digraph  {
	graph [ordering=out,
		rankdir=TB
	];
	node [label="\N"];
	0	 [label=programm];
	1	 [label=main_class];
	0 -> 1;
	27	 [label=class_list];
	0 -> 27;
	2	 [label=identifier];
	1 -> 2;
	4	 [label=main_method];
	1 -> 4;
	3	 [label=Factorial];
	2 -> 3;
	5	 [label=arg];
	4 -> 5;
	12	 [label=statements];
	4 -> 12;
	10	 [label=identifier];
	5 -> 10;
	6	 [label=type];
	5 -> 6;
	9	 [label=String];
	6 -> 9;
	7	 [label=dim];
	6 -> 7;
	8	 [label=1];
	7 -> 8;
	11	 [label=a];
	10 -> 11;
	13	 [label=statement];
	12 -> 13;
	14	 [label=print];
	13 -> 14;
	15	 [label=expression];
	14 -> 15;
	16	 [label=method_call];
	15 -> 16;
	17	 [label=expression];
	16 -> 17;
	21	 [label=identifier];
	16 -> 21;
	23	 [label=expressions];
	16 -> 23;
	18	 [label=new_expression];
	17 -> 18;
	19	 [label=identifier];
	18 -> 19;
	20	 [label=Fac];
	19 -> 20;
	22	 [label=ComputeFac];
	21 -> 22;
	24	 [label=expression];
	23 -> 24;
	25	 [label=integer];
	24 -> 25;
	26	 [label=10];
	25 -> 26;
	28	 [label=class];
	27 -> 28;
	32	 [label=declaration_list];
	28 -> 32;
	31	 [label=extends];
	28 -> 31;
	29	 [label=identifier];
	28 -> 29;
	30	 [label=Fac];
	29 -> 30;
	41	 [label=field];
	32 -> 41;
	33	 [label=field];
	32 -> 33;
	57	 [label=method];
	32 -> 57;
	49	 [label=field];
	32 -> 49;
	34	 [label=variable];
	33 -> 34;
	39	 [label=identifier];
	34 -> 39;
	35	 [label=type];
	34 -> 35;
	38	 [label=int];
	35 -> 38;
	36	 [label=dim];
	35 -> 36;
	37	 [label=0];
	36 -> 37;
	40	 [label=f1];
	39 -> 40;
	42	 [label=variable];
	41 -> 42;
	43	 [label=type];
	42 -> 43;
	47	 [label=identifier];
	42 -> 47;
	44	 [label=dim];
	43 -> 44;
	46	 [label=boolean];
	43 -> 46;
	45	 [label=0];
	44 -> 45;
	48	 [label=f2];
	47 -> 48;
	50	 [label=variable];
	49 -> 50;
	51	 [label=type];
	50 -> 51;
	55	 [label=identifier];
	50 -> 55;
	52	 [label=dim];
	51 -> 52;
	54	 [label=int];
	51 -> 54;
	53	 [label=1];
	52 -> 53;
	56	 [label=f3];
	55 -> 56;
	153	 [label=identifier];
	57 -> 153;
	149	 [label=type];
	57 -> 149;
	58	 [label=args];
	57 -> 58;
	145	 [label=return];
	57 -> 145;
	75	 [label=statements];
	57 -> 75;
	67	 [label=arg];
	58 -> 67;
	59	 [label=arg];
	58 -> 59;
	60	 [label=variable];
	59 -> 60;
	65	 [label=identifier];
	60 -> 65;
	61	 [label=type];
	60 -> 61;
	64	 [label=int];
	61 -> 64;
	62	 [label=dim];
	61 -> 62;
	63	 [label=0];
	62 -> 63;
	66	 [label=num];
	65 -> 66;
	68	 [label=variable];
	67 -> 68;
	73	 [label=identifier];
	68 -> 73;
	69	 [label=type];
	68 -> 69;
	70	 [label=dim];
	69 -> 70;
	72	 [label=int];
	69 -> 72;
	71	 [label=0];
	70 -> 71;
	74	 [label=test];
	73 -> 74;
	84	 [label=statement];
	75 -> 84;
	76	 [label=statement];
	75 -> 76;
	77	 [label=variable];
	76 -> 77;
	82	 [label=identifier];
	77 -> 82;
	78	 [label=type];
	77 -> 78;
	81	 [label=int];
	78 -> 81;
	79	 [label=dim];
	78 -> 79;
	80	 [label=0];
	79 -> 80;
	83	 [label=num_aux];
	82 -> 83;
	85	 [label=if];
	84 -> 85;
	99	 [label=statement];
	85 -> 99;
	86	 [label=condition];
	85 -> 86;
	108	 [label=else];
	85 -> 108;
	87	 [label=expression];
	86 -> 87;
	88	 [label=binary_expression];
	87 -> 88;
	93	 [label=operation];
	88 -> 93;
	95	 [label=operand2];
	88 -> 95;
	89	 [label=operand1];
	88 -> 89;
	90	 [label=expression];
	89 -> 90;
	91	 [label=identifier];
	90 -> 91;
	92	 [label=num];
	91 -> 92;
	94	 [label="<"];
	93 -> 94;
	96	 [label=expression];
	95 -> 96;
	97	 [label=integer];
	96 -> 97;
	98	 [label=1];
	97 -> 98;
	100	 [label=assignment];
	99 -> 100;
	101	 [label=left_part];
	100 -> 101;
	104	 [label=rignt_part];
	100 -> 104;
	102	 [label=identifier];
	101 -> 102;
	103	 [label=num_aux];
	102 -> 103;
	105	 [label=expression];
	104 -> 105;
	106	 [label=integer];
	105 -> 106;
	107	 [label=1];
	106 -> 107;
	109	 [label=statement];
	108 -> 109;
	110	 [label=assignment];
	109 -> 110;
	114	 [label=rignt_part];
	110 -> 114;
	111	 [label=left_part];
	110 -> 111;
	112	 [label=identifier];
	111 -> 112;
	113	 [label=num_aux];
	112 -> 113;
	115	 [label=expression];
	114 -> 115;
	116	 [label=binary_expression];
	115 -> 116;
	121	 [label=operation];
	116 -> 121;
	123	 [label=operand2];
	116 -> 123;
	117	 [label=operand1];
	116 -> 117;
	118	 [label=expression];
	117 -> 118;
	119	 [label=identifier];
	118 -> 119;
	120	 [label=num];
	119 -> 120;
	122	 [label="*"];
	121 -> 122;
	124	 [label=expression];
	123 -> 124;
	125	 [label=parenthesis_expression];
	124 -> 125;
	126	 [label=expression];
	125 -> 126;
	127	 [label=method_call];
	126 -> 127;
	128	 [label=expression];
	127 -> 128;
	130	 [label=identifier];
	127 -> 130;
	132	 [label=expressions];
	127 -> 132;
	129	 [label=this];
	128 -> 129;
	131	 [label=ComputeFac];
	130 -> 131;
	133	 [label=expression];
	132 -> 133;
	134	 [label=binary_expression];
	133 -> 134;
	135	 [label=operand1];
	134 -> 135;
	139	 [label=operation];
	134 -> 139;
	141	 [label=operand2];
	134 -> 141;
	136	 [label=expression];
	135 -> 136;
	137	 [label=identifier];
	136 -> 137;
	138	 [label=num];
	137 -> 138;
	140	 [label="-"];
	139 -> 140;
	142	 [label=expression];
	141 -> 142;
	143	 [label=integer];
	142 -> 143;
	144	 [label=1];
	143 -> 144;
	146	 [label=expression];
	145 -> 146;
	147	 [label=identifier];
	146 -> 147;
	148	 [label=num_aux];
	147 -> 148;
	150	 [label=dim];
	149 -> 150;
	152	 [label=int];
	149 -> 152;
	151	 [label=0];
	150 -> 151;
	154	 [label=ComputeFac];
	153 -> 154;
}
